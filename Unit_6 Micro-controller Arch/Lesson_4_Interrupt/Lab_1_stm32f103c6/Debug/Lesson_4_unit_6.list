
Lesson_4_unit_6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000248  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000378  08000378  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000378  08000378  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  08000378  08000378  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000378  08000378  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000378  08000378  00010378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800037c  0800037c  0001037c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  08000380  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000024  080003a4  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000040  080003a4  00020040  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d25  00000000  00000000  0002004d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001e3  00000000  00000000  00020d72  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000013c  00000000  00000000  00020f55  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000068  00000000  00000000  00021098  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000050  00000000  00000000  00021100  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00001cfc  00000000  00000000  00021150  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000665  00000000  00000000  00022e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    000080b6  00000000  00000000  000234b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0002b567  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000d8  00000000  00000000  0002b5e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000024 	.word	0x20000024
 800014c:	00000000 	.word	0x00000000
 8000150:	08000360 	.word	0x08000360

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000028 	.word	0x20000028
 800016c:	08000360 	.word	0x08000360

08000170 <clock_init>:
volatile STM32F103C6_t *NVIC_ISR0   =(volatile STM32F103C6_t *)(0xE000E100     );



void clock_init()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	// Enable clock GPIOA
	RCC_APB2ENR->PIN.Pin2=1;
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <clock_init+0x24>)
 8000176:	681a      	ldr	r2, [r3, #0]
 8000178:	6813      	ldr	r3, [r2, #0]
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]

	// Enable Alternate function IO clock
	RCC_APB2ENR->PIN.Pin0=1;
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <clock_init+0x24>)
 8000182:	681a      	ldr	r2, [r3, #0]
 8000184:	6813      	ldr	r3, [r2, #0]
 8000186:	f043 0301 	orr.w	r3, r3, #1
 800018a:	6013      	str	r3, [r2, #0]
}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	20000004 	.word	0x20000004

08000198 <GPIO_pin0_input_init>:
void GPIO_pin0_input_init()
{
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	// pin 0 PORT A as an input
	//01: Floating input (reset state)
	GPIOx_CRL->PIN.Pin2=1;
 800019c:	4b07      	ldr	r3, [pc, #28]	; (80001bc <GPIO_pin0_input_init+0x24>)
 800019e:	681a      	ldr	r2, [r3, #0]
 80001a0:	6813      	ldr	r3, [r2, #0]
 80001a2:	f043 0304 	orr.w	r3, r3, #4
 80001a6:	6013      	str	r3, [r2, #0]
	GPIOx_CRL->PIN.Pin3=0;
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <GPIO_pin0_input_init+0x24>)
 80001aa:	681a      	ldr	r2, [r3, #0]
 80001ac:	6813      	ldr	r3, [r2, #0]
 80001ae:	f36f 03c3 	bfc	r3, #3, #1
 80001b2:	6013      	str	r3, [r2, #0]

}
 80001b4:	bf00      	nop
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bc80      	pop	{r7}
 80001ba:	4770      	bx	lr
 80001bc:	20000000 	.word	0x20000000

080001c0 <GPIO_pin13_output_init>:
void GPIO_pin13_output_init()
{
 80001c0:	b480      	push	{r7}
 80001c2:	af00      	add	r7, sp, #0
	// pin 13 PORT A as an output
	GPIOA_CRH->PIN.Pin20=0;
 80001c4:	4b0d      	ldr	r3, [pc, #52]	; (80001fc <GPIO_pin13_output_init+0x3c>)
 80001c6:	681a      	ldr	r2, [r3, #0]
 80001c8:	6813      	ldr	r3, [r2, #0]
 80001ca:	f36f 5314 	bfc	r3, #20, #1
 80001ce:	6013      	str	r3, [r2, #0]
	GPIOA_CRH->PIN.Pin21=1;
 80001d0:	4b0a      	ldr	r3, [pc, #40]	; (80001fc <GPIO_pin13_output_init+0x3c>)
 80001d2:	681a      	ldr	r2, [r3, #0]
 80001d4:	6813      	ldr	r3, [r2, #0]
 80001d6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80001da:	6013      	str	r3, [r2, #0]
	GPIOA_CRH->PIN.Pin22=0;
 80001dc:	4b07      	ldr	r3, [pc, #28]	; (80001fc <GPIO_pin13_output_init+0x3c>)
 80001de:	681a      	ldr	r2, [r3, #0]
 80001e0:	6813      	ldr	r3, [r2, #0]
 80001e2:	f36f 5396 	bfc	r3, #22, #1
 80001e6:	6013      	str	r3, [r2, #0]
	GPIOA_CRH->PIN.Pin23=0;
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <GPIO_pin13_output_init+0x3c>)
 80001ea:	681a      	ldr	r2, [r3, #0]
 80001ec:	6813      	ldr	r3, [r2, #0]
 80001ee:	f36f 53d7 	bfc	r3, #23, #1
 80001f2:	6013      	str	r3, [r2, #0]

}
 80001f4:	bf00      	nop
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr
 80001fc:	2000000c 	.word	0x2000000c

08000200 <main>:



int main(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	af00      	add	r7, sp, #0
	 clock_init();
 8000204:	f7ff ffb4 	bl	8000170 <clock_init>
	 GPIO_pin0_input_init();
 8000208:	f7ff ffc6 	bl	8000198 <GPIO_pin0_input_init>
	 GPIO_pin13_output_init();
 800020c:	f7ff ffd8 	bl	80001c0 <GPIO_pin13_output_init>

	 // EXTRI0 	--> PORTA0
	 EXTICR1->PIN.Pin0=0;
 8000210:	4b15      	ldr	r3, [pc, #84]	; (8000268 <main+0x68>)
 8000212:	681a      	ldr	r2, [r3, #0]
 8000214:	6813      	ldr	r3, [r2, #0]
 8000216:	f36f 0300 	bfc	r3, #0, #1
 800021a:	6013      	str	r3, [r2, #0]
	 EXTICR1->PIN.Pin1=0;
 800021c:	4b12      	ldr	r3, [pc, #72]	; (8000268 <main+0x68>)
 800021e:	681a      	ldr	r2, [r3, #0]
 8000220:	6813      	ldr	r3, [r2, #0]
 8000222:	f36f 0341 	bfc	r3, #1, #1
 8000226:	6013      	str	r3, [r2, #0]
	 EXTICR1->PIN.Pin2=0;
 8000228:	4b0f      	ldr	r3, [pc, #60]	; (8000268 <main+0x68>)
 800022a:	681a      	ldr	r2, [r3, #0]
 800022c:	6813      	ldr	r3, [r2, #0]
 800022e:	f36f 0382 	bfc	r3, #2, #1
 8000232:	6013      	str	r3, [r2, #0]
	 EXTICR1->PIN.Pin3=0;
 8000234:	4b0c      	ldr	r3, [pc, #48]	; (8000268 <main+0x68>)
 8000236:	681a      	ldr	r2, [r3, #0]
 8000238:	6813      	ldr	r3, [r2, #0]
 800023a:	f36f 03c3 	bfc	r3, #3, #1
 800023e:	6013      	str	r3, [r2, #0]

	 // Enable rising trigger
	 EXTI_RTSR->PIN.Pin0=1;
 8000240:	4b0a      	ldr	r3, [pc, #40]	; (800026c <main+0x6c>)
 8000242:	681a      	ldr	r2, [r3, #0]
 8000244:	6813      	ldr	r3, [r2, #0]
 8000246:	f043 0301 	orr.w	r3, r3, #1
 800024a:	6013      	str	r3, [r2, #0]


	 // Enable EXTRI line 0 --> 1
	 EXTI_IMR->PIN.Pin0=1;
 800024c:	4b08      	ldr	r3, [pc, #32]	; (8000270 <main+0x70>)
 800024e:	681a      	ldr	r2, [r3, #0]
 8000250:	6813      	ldr	r3, [r2, #0]
 8000252:	f043 0301 	orr.w	r3, r3, #1
 8000256:	6013      	str	r3, [r2, #0]

	 // Enable NVIC IRQ --> line 6
	 NVIC_ISR0->PIN.Pin6=1;
 8000258:	4b06      	ldr	r3, [pc, #24]	; (8000274 <main+0x74>)
 800025a:	681a      	ldr	r2, [r3, #0]
 800025c:	6813      	ldr	r3, [r2, #0]
 800025e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000262:	6013      	str	r3, [r2, #0]


	while(1);
 8000264:	e7fe      	b.n	8000264 <main+0x64>
 8000266:	bf00      	nop
 8000268:	2000001c 	.word	0x2000001c
 800026c:	20000014 	.word	0x20000014
 8000270:	20000010 	.word	0x20000010
 8000274:	20000020 	.word	0x20000020

08000278 <EXTI0_IRQHandler>:
}


void EXTI0_IRQHandler (void)
{
 8000278:	b480      	push	{r7}
 800027a:	af00      	add	r7, sp, #0
	// IRQ is happened
	// toggle led PORT A pin 13
	if(GPIOA_ODR->PIN.Pin13==1)
 800027c:	4b0f      	ldr	r3, [pc, #60]	; (80002bc <EXTI0_IRQHandler+0x44>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f3c3 3340 	ubfx	r3, r3, #13, #1
 8000286:	b2db      	uxtb	r3, r3
 8000288:	2b01      	cmp	r3, #1
 800028a:	d106      	bne.n	800029a <EXTI0_IRQHandler+0x22>
	{
		GPIOA_ODR->PIN.Pin13=0;
 800028c:	4b0b      	ldr	r3, [pc, #44]	; (80002bc <EXTI0_IRQHandler+0x44>)
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	6813      	ldr	r3, [r2, #0]
 8000292:	f36f 334d 	bfc	r3, #13, #1
 8000296:	6013      	str	r3, [r2, #0]
 8000298:	e005      	b.n	80002a6 <EXTI0_IRQHandler+0x2e>
	}
	else
	{
		GPIOA_ODR->PIN.Pin13=1;
 800029a:	4b08      	ldr	r3, [pc, #32]	; (80002bc <EXTI0_IRQHandler+0x44>)
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	6813      	ldr	r3, [r2, #0]
 80002a0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002a4:	6013      	str	r3, [r2, #0]
	}

	// clear pending requist for line 0
	 EXTI_PR->PIN.Pin0=1;
 80002a6:	4b06      	ldr	r3, [pc, #24]	; (80002c0 <EXTI0_IRQHandler+0x48>)
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	6813      	ldr	r3, [r2, #0]
 80002ac:	f043 0301 	orr.w	r3, r3, #1
 80002b0:	6013      	str	r3, [r2, #0]
}
 80002b2:	bf00      	nop
 80002b4:	46bd      	mov	sp, r7
 80002b6:	bc80      	pop	{r7}
 80002b8:	4770      	bx	lr
 80002ba:	bf00      	nop
 80002bc:	20000008 	.word	0x20000008
 80002c0:	20000018 	.word	0x20000018

080002c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480c      	ldr	r0, [pc, #48]	; (8000300 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490d      	ldr	r1, [pc, #52]	; (8000304 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0d      	ldr	r2, [pc, #52]	; (8000308 <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0a      	ldr	r2, [pc, #40]	; (800030c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0a      	ldr	r4, [pc, #40]	; (8000310 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f2:	f000 f811 	bl	8000318 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f6:	f7ff ff83 	bl	8000200 <main>

080002fa <LoopForever>:

LoopForever:
    b LoopForever
 80002fa:	e7fe      	b.n	80002fa <LoopForever>
  ldr   r0, =_estack
 80002fc:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000300:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000304:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 8000308:	08000380 	.word	0x08000380
  ldr r2, =_sbss
 800030c:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 8000310:	20000040 	.word	0x20000040

08000314 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000314:	e7fe      	b.n	8000314 <ADC1_2_IRQHandler>
	...

08000318 <__libc_init_array>:
 8000318:	b570      	push	{r4, r5, r6, lr}
 800031a:	2500      	movs	r5, #0
 800031c:	4e0c      	ldr	r6, [pc, #48]	; (8000350 <__libc_init_array+0x38>)
 800031e:	4c0d      	ldr	r4, [pc, #52]	; (8000354 <__libc_init_array+0x3c>)
 8000320:	1ba4      	subs	r4, r4, r6
 8000322:	10a4      	asrs	r4, r4, #2
 8000324:	42a5      	cmp	r5, r4
 8000326:	d109      	bne.n	800033c <__libc_init_array+0x24>
 8000328:	f000 f81a 	bl	8000360 <_init>
 800032c:	2500      	movs	r5, #0
 800032e:	4e0a      	ldr	r6, [pc, #40]	; (8000358 <__libc_init_array+0x40>)
 8000330:	4c0a      	ldr	r4, [pc, #40]	; (800035c <__libc_init_array+0x44>)
 8000332:	1ba4      	subs	r4, r4, r6
 8000334:	10a4      	asrs	r4, r4, #2
 8000336:	42a5      	cmp	r5, r4
 8000338:	d105      	bne.n	8000346 <__libc_init_array+0x2e>
 800033a:	bd70      	pop	{r4, r5, r6, pc}
 800033c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000340:	4798      	blx	r3
 8000342:	3501      	adds	r5, #1
 8000344:	e7ee      	b.n	8000324 <__libc_init_array+0xc>
 8000346:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800034a:	4798      	blx	r3
 800034c:	3501      	adds	r5, #1
 800034e:	e7f2      	b.n	8000336 <__libc_init_array+0x1e>
 8000350:	08000378 	.word	0x08000378
 8000354:	08000378 	.word	0x08000378
 8000358:	08000378 	.word	0x08000378
 800035c:	0800037c 	.word	0x0800037c

08000360 <_init>:
 8000360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000362:	bf00      	nop
 8000364:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000366:	bc08      	pop	{r3}
 8000368:	469e      	mov	lr, r3
 800036a:	4770      	bx	lr

0800036c <_fini>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr
