
Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000adc  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08000c0c  08000c0c  00010c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000c34  08000c34  00020020  2**0
                  CONTENTS
  4 .ARM          00000000  08000c34  08000c34  00020020  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000c34  08000c34  00020020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000c34  08000c34  00010c34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000c38  08000c38  00010c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000020  20000000  08000c3c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000020  08000c5c  00020020  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000048  08000c5c  00020048  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020020  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003aff  00000000  00000000  00020049  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000008b7  00000000  00000000  00023b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000792  00000000  00000000  000243ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000170  00000000  00000000  00024b98  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000118  00000000  00000000  00024d08  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0000281e  00000000  00000000  00024e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00002443  00000000  00000000  0002763e  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00008e52  00000000  00000000  00029a81  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  000328d3  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000041c  00000000  00000000  00032950  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000020 	.word	0x20000020
 800014c:	00000000 	.word	0x00000000
 8000150:	08000bf4 	.word	0x08000bf4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000024 	.word	0x20000024
 800016c:	08000bf4 	.word	0x08000bf4

08000170 <KAYPAD_INIT>:
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
 8000174:	4b37      	ldr	r3, [pc, #220]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000176:	2201      	movs	r2, #1
 8000178:	801a      	strh	r2, [r3, #0]
 800017a:	4b36      	ldr	r3, [pc, #216]	; (8000254 <KAYPAD_INIT+0xe4>)
 800017c:	2204      	movs	r2, #4
 800017e:	709a      	strb	r2, [r3, #2]
 8000180:	4b34      	ldr	r3, [pc, #208]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000182:	2201      	movs	r2, #1
 8000184:	70da      	strb	r2, [r3, #3]
 8000186:	4933      	ldr	r1, [pc, #204]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000188:	4833      	ldr	r0, [pc, #204]	; (8000258 <KAYPAD_INIT+0xe8>)
 800018a:	f000 fba7 	bl	80008dc <MCAL_GPIO_INIT>
 800018e:	4b31      	ldr	r3, [pc, #196]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000190:	2202      	movs	r2, #2
 8000192:	801a      	strh	r2, [r3, #0]
 8000194:	4b2f      	ldr	r3, [pc, #188]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000196:	2204      	movs	r2, #4
 8000198:	709a      	strb	r2, [r3, #2]
 800019a:	4b2e      	ldr	r3, [pc, #184]	; (8000254 <KAYPAD_INIT+0xe4>)
 800019c:	2201      	movs	r2, #1
 800019e:	70da      	strb	r2, [r3, #3]
 80001a0:	492c      	ldr	r1, [pc, #176]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001a2:	482d      	ldr	r0, [pc, #180]	; (8000258 <KAYPAD_INIT+0xe8>)
 80001a4:	f000 fb9a 	bl	80008dc <MCAL_GPIO_INIT>
 80001a8:	4b2a      	ldr	r3, [pc, #168]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001aa:	2208      	movs	r2, #8
 80001ac:	801a      	strh	r2, [r3, #0]
 80001ae:	4b29      	ldr	r3, [pc, #164]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001b0:	2204      	movs	r2, #4
 80001b2:	709a      	strb	r2, [r3, #2]
 80001b4:	4b27      	ldr	r3, [pc, #156]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001b6:	2201      	movs	r2, #1
 80001b8:	70da      	strb	r2, [r3, #3]
 80001ba:	4926      	ldr	r1, [pc, #152]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001bc:	4826      	ldr	r0, [pc, #152]	; (8000258 <KAYPAD_INIT+0xe8>)
 80001be:	f000 fb8d 	bl	80008dc <MCAL_GPIO_INIT>
 80001c2:	4b24      	ldr	r3, [pc, #144]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001c4:	2210      	movs	r2, #16
 80001c6:	801a      	strh	r2, [r3, #0]
 80001c8:	4b22      	ldr	r3, [pc, #136]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001ca:	2204      	movs	r2, #4
 80001cc:	709a      	strb	r2, [r3, #2]
 80001ce:	4b21      	ldr	r3, [pc, #132]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001d0:	2201      	movs	r2, #1
 80001d2:	70da      	strb	r2, [r3, #3]
 80001d4:	491f      	ldr	r1, [pc, #124]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001d6:	4820      	ldr	r0, [pc, #128]	; (8000258 <KAYPAD_INIT+0xe8>)
 80001d8:	f000 fb80 	bl	80008dc <MCAL_GPIO_INIT>
 80001dc:	4b1d      	ldr	r3, [pc, #116]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001de:	2220      	movs	r2, #32
 80001e0:	801a      	strh	r2, [r3, #0]
 80001e2:	4b1c      	ldr	r3, [pc, #112]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001e4:	2204      	movs	r2, #4
 80001e6:	709a      	strb	r2, [r3, #2]
 80001e8:	4b1a      	ldr	r3, [pc, #104]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001ea:	2201      	movs	r2, #1
 80001ec:	70da      	strb	r2, [r3, #3]
 80001ee:	4919      	ldr	r1, [pc, #100]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001f0:	4819      	ldr	r0, [pc, #100]	; (8000258 <KAYPAD_INIT+0xe8>)
 80001f2:	f000 fb73 	bl	80008dc <MCAL_GPIO_INIT>
 80001f6:	4b17      	ldr	r3, [pc, #92]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001f8:	2240      	movs	r2, #64	; 0x40
 80001fa:	801a      	strh	r2, [r3, #0]
 80001fc:	4b15      	ldr	r3, [pc, #84]	; (8000254 <KAYPAD_INIT+0xe4>)
 80001fe:	2204      	movs	r2, #4
 8000200:	709a      	strb	r2, [r3, #2]
 8000202:	4b14      	ldr	r3, [pc, #80]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000204:	2201      	movs	r2, #1
 8000206:	70da      	strb	r2, [r3, #3]
 8000208:	4912      	ldr	r1, [pc, #72]	; (8000254 <KAYPAD_INIT+0xe4>)
 800020a:	4813      	ldr	r0, [pc, #76]	; (8000258 <KAYPAD_INIT+0xe8>)
 800020c:	f000 fb66 	bl	80008dc <MCAL_GPIO_INIT>
 8000210:	4b10      	ldr	r3, [pc, #64]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000212:	2280      	movs	r2, #128	; 0x80
 8000214:	801a      	strh	r2, [r3, #0]
 8000216:	4b0f      	ldr	r3, [pc, #60]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000218:	2204      	movs	r2, #4
 800021a:	709a      	strb	r2, [r3, #2]
 800021c:	4b0d      	ldr	r3, [pc, #52]	; (8000254 <KAYPAD_INIT+0xe4>)
 800021e:	2201      	movs	r2, #1
 8000220:	70da      	strb	r2, [r3, #3]
 8000222:	490c      	ldr	r1, [pc, #48]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000224:	480c      	ldr	r0, [pc, #48]	; (8000258 <KAYPAD_INIT+0xe8>)
 8000226:	f000 fb59 	bl	80008dc <MCAL_GPIO_INIT>
 800022a:	4b0a      	ldr	r3, [pc, #40]	; (8000254 <KAYPAD_INIT+0xe4>)
 800022c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000230:	801a      	strh	r2, [r3, #0]
 8000232:	4b08      	ldr	r3, [pc, #32]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000234:	2204      	movs	r2, #4
 8000236:	709a      	strb	r2, [r3, #2]
 8000238:	4b06      	ldr	r3, [pc, #24]	; (8000254 <KAYPAD_INIT+0xe4>)
 800023a:	2201      	movs	r2, #1
 800023c:	70da      	strb	r2, [r3, #3]
 800023e:	4905      	ldr	r1, [pc, #20]	; (8000254 <KAYPAD_INIT+0xe4>)
 8000240:	4805      	ldr	r0, [pc, #20]	; (8000258 <KAYPAD_INIT+0xe8>)
 8000242:	f000 fb4b 	bl	80008dc <MCAL_GPIO_INIT>
 8000246:	21ff      	movs	r1, #255	; 0xff
 8000248:	4803      	ldr	r0, [pc, #12]	; (8000258 <KAYPAD_INIT+0xe8>)
 800024a:	f000 fbf4 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
 800024e:	bf00      	nop
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	2000003c 	.word	0x2000003c
 8000258:	40010c00 	.word	0x40010c00

0800025c <GET_CHARACTER>:
 800025c:	b580      	push	{r7, lr}
 800025e:	b082      	sub	sp, #8
 8000260:	af00      	add	r7, sp, #0
 8000262:	2300      	movs	r3, #0
 8000264:	607b      	str	r3, [r7, #4]
 8000266:	e0b4      	b.n	80003d2 <GET_CHARACTER+0x176>
 8000268:	4b5e      	ldr	r3, [pc, #376]	; (80003e4 <GET_CHARACTER+0x188>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	b29b      	uxth	r3, r3
 800026e:	2201      	movs	r2, #1
 8000270:	4619      	mov	r1, r3
 8000272:	485d      	ldr	r0, [pc, #372]	; (80003e8 <GET_CHARACTER+0x18c>)
 8000274:	f000 fbc8 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
 8000278:	4b5a      	ldr	r3, [pc, #360]	; (80003e4 <GET_CHARACTER+0x188>)
 800027a:	685b      	ldr	r3, [r3, #4]
 800027c:	b29b      	uxth	r3, r3
 800027e:	2201      	movs	r2, #1
 8000280:	4619      	mov	r1, r3
 8000282:	4859      	ldr	r0, [pc, #356]	; (80003e8 <GET_CHARACTER+0x18c>)
 8000284:	f000 fbc0 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
 8000288:	4b56      	ldr	r3, [pc, #344]	; (80003e4 <GET_CHARACTER+0x188>)
 800028a:	689b      	ldr	r3, [r3, #8]
 800028c:	b29b      	uxth	r3, r3
 800028e:	2201      	movs	r2, #1
 8000290:	4619      	mov	r1, r3
 8000292:	4855      	ldr	r0, [pc, #340]	; (80003e8 <GET_CHARACTER+0x18c>)
 8000294:	f000 fbb8 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
 8000298:	4b52      	ldr	r3, [pc, #328]	; (80003e4 <GET_CHARACTER+0x188>)
 800029a:	68db      	ldr	r3, [r3, #12]
 800029c:	b29b      	uxth	r3, r3
 800029e:	2201      	movs	r2, #1
 80002a0:	4619      	mov	r1, r3
 80002a2:	4851      	ldr	r0, [pc, #324]	; (80003e8 <GET_CHARACTER+0x18c>)
 80002a4:	f000 fbb0 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
 80002a8:	4a4e      	ldr	r2, [pc, #312]	; (80003e4 <GET_CHARACTER+0x188>)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002b0:	b29b      	uxth	r3, r3
 80002b2:	2200      	movs	r2, #0
 80002b4:	4619      	mov	r1, r3
 80002b6:	484c      	ldr	r0, [pc, #304]	; (80003e8 <GET_CHARACTER+0x18c>)
 80002b8:	f000 fba6 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
 80002bc:	2300      	movs	r3, #0
 80002be:	603b      	str	r3, [r7, #0]
 80002c0:	e080      	b.n	80003c4 <GET_CHARACTER+0x168>
 80002c2:	4a4a      	ldr	r2, [pc, #296]	; (80003ec <GET_CHARACTER+0x190>)
 80002c4:	683b      	ldr	r3, [r7, #0]
 80002c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002ca:	b29b      	uxth	r3, r3
 80002cc:	4619      	mov	r1, r3
 80002ce:	4846      	ldr	r0, [pc, #280]	; (80003e8 <GET_CHARACTER+0x18c>)
 80002d0:	f000 fb83 	bl	80009da <MCAL_GPIO_READ_PIN>
 80002d4:	4603      	mov	r3, r0
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d171      	bne.n	80003be <GET_CHARACTER+0x162>
 80002da:	bf00      	nop
 80002dc:	4a43      	ldr	r2, [pc, #268]	; (80003ec <GET_CHARACTER+0x190>)
 80002de:	683b      	ldr	r3, [r7, #0]
 80002e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002e4:	b29b      	uxth	r3, r3
 80002e6:	4619      	mov	r1, r3
 80002e8:	483f      	ldr	r0, [pc, #252]	; (80003e8 <GET_CHARACTER+0x18c>)
 80002ea:	f000 fb76 	bl	80009da <MCAL_GPIO_READ_PIN>
 80002ee:	4603      	mov	r3, r0
 80002f0:	2b00      	cmp	r3, #0
 80002f2:	d0f3      	beq.n	80002dc <GET_CHARACTER+0x80>
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	2b03      	cmp	r3, #3
 80002f8:	d861      	bhi.n	80003be <GET_CHARACTER+0x162>
 80002fa:	a201      	add	r2, pc, #4	; (adr r2, 8000300 <GET_CHARACTER+0xa4>)
 80002fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000300:	08000311 	.word	0x08000311
 8000304:	08000339 	.word	0x08000339
 8000308:	08000361 	.word	0x08000361
 800030c:	08000389 	.word	0x08000389
 8000310:	683b      	ldr	r3, [r7, #0]
 8000312:	2b00      	cmp	r3, #0
 8000314:	d101      	bne.n	800031a <GET_CHARACTER+0xbe>
 8000316:	2337      	movs	r3, #55	; 0x37
 8000318:	e060      	b.n	80003dc <GET_CHARACTER+0x180>
 800031a:	683b      	ldr	r3, [r7, #0]
 800031c:	2b01      	cmp	r3, #1
 800031e:	d101      	bne.n	8000324 <GET_CHARACTER+0xc8>
 8000320:	2334      	movs	r3, #52	; 0x34
 8000322:	e05b      	b.n	80003dc <GET_CHARACTER+0x180>
 8000324:	683b      	ldr	r3, [r7, #0]
 8000326:	2b02      	cmp	r3, #2
 8000328:	d101      	bne.n	800032e <GET_CHARACTER+0xd2>
 800032a:	2331      	movs	r3, #49	; 0x31
 800032c:	e056      	b.n	80003dc <GET_CHARACTER+0x180>
 800032e:	683b      	ldr	r3, [r7, #0]
 8000330:	2b03      	cmp	r3, #3
 8000332:	d13d      	bne.n	80003b0 <GET_CHARACTER+0x154>
 8000334:	2343      	movs	r3, #67	; 0x43
 8000336:	e051      	b.n	80003dc <GET_CHARACTER+0x180>
 8000338:	683b      	ldr	r3, [r7, #0]
 800033a:	2b00      	cmp	r3, #0
 800033c:	d101      	bne.n	8000342 <GET_CHARACTER+0xe6>
 800033e:	2338      	movs	r3, #56	; 0x38
 8000340:	e04c      	b.n	80003dc <GET_CHARACTER+0x180>
 8000342:	683b      	ldr	r3, [r7, #0]
 8000344:	2b01      	cmp	r3, #1
 8000346:	d101      	bne.n	800034c <GET_CHARACTER+0xf0>
 8000348:	2335      	movs	r3, #53	; 0x35
 800034a:	e047      	b.n	80003dc <GET_CHARACTER+0x180>
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	2b02      	cmp	r3, #2
 8000350:	d101      	bne.n	8000356 <GET_CHARACTER+0xfa>
 8000352:	2332      	movs	r3, #50	; 0x32
 8000354:	e042      	b.n	80003dc <GET_CHARACTER+0x180>
 8000356:	683b      	ldr	r3, [r7, #0]
 8000358:	2b03      	cmp	r3, #3
 800035a:	d12b      	bne.n	80003b4 <GET_CHARACTER+0x158>
 800035c:	2330      	movs	r3, #48	; 0x30
 800035e:	e03d      	b.n	80003dc <GET_CHARACTER+0x180>
 8000360:	683b      	ldr	r3, [r7, #0]
 8000362:	2b00      	cmp	r3, #0
 8000364:	d101      	bne.n	800036a <GET_CHARACTER+0x10e>
 8000366:	2339      	movs	r3, #57	; 0x39
 8000368:	e038      	b.n	80003dc <GET_CHARACTER+0x180>
 800036a:	683b      	ldr	r3, [r7, #0]
 800036c:	2b01      	cmp	r3, #1
 800036e:	d101      	bne.n	8000374 <GET_CHARACTER+0x118>
 8000370:	2336      	movs	r3, #54	; 0x36
 8000372:	e033      	b.n	80003dc <GET_CHARACTER+0x180>
 8000374:	683b      	ldr	r3, [r7, #0]
 8000376:	2b02      	cmp	r3, #2
 8000378:	d101      	bne.n	800037e <GET_CHARACTER+0x122>
 800037a:	2333      	movs	r3, #51	; 0x33
 800037c:	e02e      	b.n	80003dc <GET_CHARACTER+0x180>
 800037e:	683b      	ldr	r3, [r7, #0]
 8000380:	2b03      	cmp	r3, #3
 8000382:	d119      	bne.n	80003b8 <GET_CHARACTER+0x15c>
 8000384:	233d      	movs	r3, #61	; 0x3d
 8000386:	e029      	b.n	80003dc <GET_CHARACTER+0x180>
 8000388:	683b      	ldr	r3, [r7, #0]
 800038a:	2b00      	cmp	r3, #0
 800038c:	d101      	bne.n	8000392 <GET_CHARACTER+0x136>
 800038e:	232f      	movs	r3, #47	; 0x2f
 8000390:	e024      	b.n	80003dc <GET_CHARACTER+0x180>
 8000392:	683b      	ldr	r3, [r7, #0]
 8000394:	2b01      	cmp	r3, #1
 8000396:	d101      	bne.n	800039c <GET_CHARACTER+0x140>
 8000398:	232a      	movs	r3, #42	; 0x2a
 800039a:	e01f      	b.n	80003dc <GET_CHARACTER+0x180>
 800039c:	683b      	ldr	r3, [r7, #0]
 800039e:	2b02      	cmp	r3, #2
 80003a0:	d101      	bne.n	80003a6 <GET_CHARACTER+0x14a>
 80003a2:	232d      	movs	r3, #45	; 0x2d
 80003a4:	e01a      	b.n	80003dc <GET_CHARACTER+0x180>
 80003a6:	683b      	ldr	r3, [r7, #0]
 80003a8:	2b03      	cmp	r3, #3
 80003aa:	d107      	bne.n	80003bc <GET_CHARACTER+0x160>
 80003ac:	232b      	movs	r3, #43	; 0x2b
 80003ae:	e015      	b.n	80003dc <GET_CHARACTER+0x180>
 80003b0:	bf00      	nop
 80003b2:	e004      	b.n	80003be <GET_CHARACTER+0x162>
 80003b4:	bf00      	nop
 80003b6:	e002      	b.n	80003be <GET_CHARACTER+0x162>
 80003b8:	bf00      	nop
 80003ba:	e000      	b.n	80003be <GET_CHARACTER+0x162>
 80003bc:	bf00      	nop
 80003be:	683b      	ldr	r3, [r7, #0]
 80003c0:	3301      	adds	r3, #1
 80003c2:	603b      	str	r3, [r7, #0]
 80003c4:	683b      	ldr	r3, [r7, #0]
 80003c6:	2b03      	cmp	r3, #3
 80003c8:	f67f af7b 	bls.w	80002c2 <GET_CHARACTER+0x66>
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	3301      	adds	r3, #1
 80003d0:	607b      	str	r3, [r7, #4]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	2b03      	cmp	r3, #3
 80003d6:	f67f af47 	bls.w	8000268 <GET_CHARACTER+0xc>
 80003da:	234e      	movs	r3, #78	; 0x4e
 80003dc:	4618      	mov	r0, r3
 80003de:	3708      	adds	r7, #8
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bd80      	pop	{r7, pc}
 80003e4:	20000000 	.word	0x20000000
 80003e8:	40010c00 	.word	0x40010c00
 80003ec:	20000010 	.word	0x20000010

080003f0 <Seven_Segment_Init>:
 80003f0:	b580      	push	{r7, lr}
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	4b31      	ldr	r3, [pc, #196]	; (80004bc <Seven_Segment_Init+0xcc>)
 80003f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80003fa:	801a      	strh	r2, [r3, #0]
 80003fc:	4b2f      	ldr	r3, [pc, #188]	; (80004bc <Seven_Segment_Init+0xcc>)
 80003fe:	2204      	movs	r2, #4
 8000400:	709a      	strb	r2, [r3, #2]
 8000402:	4b2e      	ldr	r3, [pc, #184]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000404:	2201      	movs	r2, #1
 8000406:	70da      	strb	r2, [r3, #3]
 8000408:	492c      	ldr	r1, [pc, #176]	; (80004bc <Seven_Segment_Init+0xcc>)
 800040a:	482d      	ldr	r0, [pc, #180]	; (80004c0 <Seven_Segment_Init+0xd0>)
 800040c:	f000 fa66 	bl	80008dc <MCAL_GPIO_INIT>
 8000410:	4b2a      	ldr	r3, [pc, #168]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000412:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000416:	801a      	strh	r2, [r3, #0]
 8000418:	4b28      	ldr	r3, [pc, #160]	; (80004bc <Seven_Segment_Init+0xcc>)
 800041a:	2204      	movs	r2, #4
 800041c:	709a      	strb	r2, [r3, #2]
 800041e:	4b27      	ldr	r3, [pc, #156]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000420:	2201      	movs	r2, #1
 8000422:	70da      	strb	r2, [r3, #3]
 8000424:	4925      	ldr	r1, [pc, #148]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000426:	4826      	ldr	r0, [pc, #152]	; (80004c0 <Seven_Segment_Init+0xd0>)
 8000428:	f000 fa58 	bl	80008dc <MCAL_GPIO_INIT>
 800042c:	4b23      	ldr	r3, [pc, #140]	; (80004bc <Seven_Segment_Init+0xcc>)
 800042e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000432:	801a      	strh	r2, [r3, #0]
 8000434:	4b21      	ldr	r3, [pc, #132]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000436:	2204      	movs	r2, #4
 8000438:	709a      	strb	r2, [r3, #2]
 800043a:	4b20      	ldr	r3, [pc, #128]	; (80004bc <Seven_Segment_Init+0xcc>)
 800043c:	2201      	movs	r2, #1
 800043e:	70da      	strb	r2, [r3, #3]
 8000440:	491e      	ldr	r1, [pc, #120]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000442:	481f      	ldr	r0, [pc, #124]	; (80004c0 <Seven_Segment_Init+0xd0>)
 8000444:	f000 fa4a 	bl	80008dc <MCAL_GPIO_INIT>
 8000448:	4b1c      	ldr	r3, [pc, #112]	; (80004bc <Seven_Segment_Init+0xcc>)
 800044a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800044e:	801a      	strh	r2, [r3, #0]
 8000450:	4b1a      	ldr	r3, [pc, #104]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000452:	2204      	movs	r2, #4
 8000454:	709a      	strb	r2, [r3, #2]
 8000456:	4b19      	ldr	r3, [pc, #100]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000458:	2201      	movs	r2, #1
 800045a:	70da      	strb	r2, [r3, #3]
 800045c:	4917      	ldr	r1, [pc, #92]	; (80004bc <Seven_Segment_Init+0xcc>)
 800045e:	4818      	ldr	r0, [pc, #96]	; (80004c0 <Seven_Segment_Init+0xd0>)
 8000460:	f000 fa3c 	bl	80008dc <MCAL_GPIO_INIT>
 8000464:	4b15      	ldr	r3, [pc, #84]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000466:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800046a:	801a      	strh	r2, [r3, #0]
 800046c:	4b13      	ldr	r3, [pc, #76]	; (80004bc <Seven_Segment_Init+0xcc>)
 800046e:	2204      	movs	r2, #4
 8000470:	709a      	strb	r2, [r3, #2]
 8000472:	4b12      	ldr	r3, [pc, #72]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000474:	2201      	movs	r2, #1
 8000476:	70da      	strb	r2, [r3, #3]
 8000478:	4910      	ldr	r1, [pc, #64]	; (80004bc <Seven_Segment_Init+0xcc>)
 800047a:	4811      	ldr	r0, [pc, #68]	; (80004c0 <Seven_Segment_Init+0xd0>)
 800047c:	f000 fa2e 	bl	80008dc <MCAL_GPIO_INIT>
 8000480:	4b0e      	ldr	r3, [pc, #56]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000482:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000486:	801a      	strh	r2, [r3, #0]
 8000488:	4b0c      	ldr	r3, [pc, #48]	; (80004bc <Seven_Segment_Init+0xcc>)
 800048a:	2204      	movs	r2, #4
 800048c:	709a      	strb	r2, [r3, #2]
 800048e:	4b0b      	ldr	r3, [pc, #44]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000490:	2201      	movs	r2, #1
 8000492:	70da      	strb	r2, [r3, #3]
 8000494:	4909      	ldr	r1, [pc, #36]	; (80004bc <Seven_Segment_Init+0xcc>)
 8000496:	480a      	ldr	r0, [pc, #40]	; (80004c0 <Seven_Segment_Init+0xd0>)
 8000498:	f000 fa20 	bl	80008dc <MCAL_GPIO_INIT>
 800049c:	4b07      	ldr	r3, [pc, #28]	; (80004bc <Seven_Segment_Init+0xcc>)
 800049e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80004a2:	801a      	strh	r2, [r3, #0]
 80004a4:	4b05      	ldr	r3, [pc, #20]	; (80004bc <Seven_Segment_Init+0xcc>)
 80004a6:	2204      	movs	r2, #4
 80004a8:	709a      	strb	r2, [r3, #2]
 80004aa:	4b04      	ldr	r3, [pc, #16]	; (80004bc <Seven_Segment_Init+0xcc>)
 80004ac:	2201      	movs	r2, #1
 80004ae:	70da      	strb	r2, [r3, #3]
 80004b0:	4902      	ldr	r1, [pc, #8]	; (80004bc <Seven_Segment_Init+0xcc>)
 80004b2:	4803      	ldr	r0, [pc, #12]	; (80004c0 <Seven_Segment_Init+0xd0>)
 80004b4:	f000 fa12 	bl	80008dc <MCAL_GPIO_INIT>
 80004b8:	bf00      	nop
 80004ba:	bd80      	pop	{r7, pc}
 80004bc:	20000040 	.word	0x20000040
 80004c0:	40010c00 	.word	0x40010c00

080004c4 <LCD_INIT>:
#include "lcd.h"

GPIO_PinConfig_t PinConfigLCD;

void LCD_INIT()
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	af00      	add	r7, sp, #0
	Wait_m(20);
 80004c8:	2014      	movs	r0, #20
 80004ca:	f000 f988 	bl	80007de <Wait_m>
	// 	set EN_SWITCH , RW_SWITCH and RS_SWITCH as an output push pull
	PinConfigLCD.GPIO_PinNumber =RS_SWITCH;
 80004ce:	4b43      	ldr	r3, [pc, #268]	; (80005dc <LCD_INIT+0x118>)
 80004d0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80004d4:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 80004d6:	4b41      	ldr	r3, [pc, #260]	; (80005dc <LCD_INIT+0x118>)
 80004d8:	2204      	movs	r2, #4
 80004da:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 80004dc:	4b3f      	ldr	r3, [pc, #252]	; (80005dc <LCD_INIT+0x118>)
 80004de:	2201      	movs	r2, #1
 80004e0:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_CTRL,&PinConfigLCD);
 80004e2:	493e      	ldr	r1, [pc, #248]	; (80005dc <LCD_INIT+0x118>)
 80004e4:	483e      	ldr	r0, [pc, #248]	; (80005e0 <LCD_INIT+0x11c>)
 80004e6:	f000 f9f9 	bl	80008dc <MCAL_GPIO_INIT>

	PinConfigLCD.GPIO_PinNumber =RW_SWITCH;
 80004ea:	4b3c      	ldr	r3, [pc, #240]	; (80005dc <LCD_INIT+0x118>)
 80004ec:	f44f 7200 	mov.w	r2, #512	; 0x200
 80004f0:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 80004f2:	4b3a      	ldr	r3, [pc, #232]	; (80005dc <LCD_INIT+0x118>)
 80004f4:	2204      	movs	r2, #4
 80004f6:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 80004f8:	4b38      	ldr	r3, [pc, #224]	; (80005dc <LCD_INIT+0x118>)
 80004fa:	2201      	movs	r2, #1
 80004fc:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_CTRL,&PinConfigLCD);
 80004fe:	4937      	ldr	r1, [pc, #220]	; (80005dc <LCD_INIT+0x118>)
 8000500:	4837      	ldr	r0, [pc, #220]	; (80005e0 <LCD_INIT+0x11c>)
 8000502:	f000 f9eb 	bl	80008dc <MCAL_GPIO_INIT>

	PinConfigLCD.GPIO_PinNumber =EN_SWITCH;
 8000506:	4b35      	ldr	r3, [pc, #212]	; (80005dc <LCD_INIT+0x118>)
 8000508:	f44f 7280 	mov.w	r2, #256	; 0x100
 800050c:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 800050e:	4b33      	ldr	r3, [pc, #204]	; (80005dc <LCD_INIT+0x118>)
 8000510:	2204      	movs	r2, #4
 8000512:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 8000514:	4b31      	ldr	r3, [pc, #196]	; (80005dc <LCD_INIT+0x118>)
 8000516:	2201      	movs	r2, #1
 8000518:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_CTRL,&PinConfigLCD);
 800051a:	4930      	ldr	r1, [pc, #192]	; (80005dc <LCD_INIT+0x118>)
 800051c:	4830      	ldr	r0, [pc, #192]	; (80005e0 <LCD_INIT+0x11c>)
 800051e:	f000 f9dd 	bl	80008dc <MCAL_GPIO_INIT>
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
	MCAL_GPIO_INIT(LCD_PORT, &PinConfigLCD);

#endif

	PinConfigLCD.GPIO_PinNumber=GPIO_PIN_4;
 8000522:	4b2e      	ldr	r3, [pc, #184]	; (80005dc <LCD_INIT+0x118>)
 8000524:	2210      	movs	r2, #16
 8000526:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 8000528:	4b2c      	ldr	r3, [pc, #176]	; (80005dc <LCD_INIT+0x118>)
 800052a:	2204      	movs	r2, #4
 800052c:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 800052e:	4b2b      	ldr	r3, [pc, #172]	; (80005dc <LCD_INIT+0x118>)
 8000530:	2201      	movs	r2, #1
 8000532:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_PORT, &PinConfigLCD);
 8000534:	4929      	ldr	r1, [pc, #164]	; (80005dc <LCD_INIT+0x118>)
 8000536:	482a      	ldr	r0, [pc, #168]	; (80005e0 <LCD_INIT+0x11c>)
 8000538:	f000 f9d0 	bl	80008dc <MCAL_GPIO_INIT>

	PinConfigLCD.GPIO_PinNumber=GPIO_PIN_5;
 800053c:	4b27      	ldr	r3, [pc, #156]	; (80005dc <LCD_INIT+0x118>)
 800053e:	2220      	movs	r2, #32
 8000540:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 8000542:	4b26      	ldr	r3, [pc, #152]	; (80005dc <LCD_INIT+0x118>)
 8000544:	2204      	movs	r2, #4
 8000546:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 8000548:	4b24      	ldr	r3, [pc, #144]	; (80005dc <LCD_INIT+0x118>)
 800054a:	2201      	movs	r2, #1
 800054c:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_PORT, &PinConfigLCD);
 800054e:	4923      	ldr	r1, [pc, #140]	; (80005dc <LCD_INIT+0x118>)
 8000550:	4823      	ldr	r0, [pc, #140]	; (80005e0 <LCD_INIT+0x11c>)
 8000552:	f000 f9c3 	bl	80008dc <MCAL_GPIO_INIT>

	PinConfigLCD.GPIO_PinNumber=GPIO_PIN_6;
 8000556:	4b21      	ldr	r3, [pc, #132]	; (80005dc <LCD_INIT+0x118>)
 8000558:	2240      	movs	r2, #64	; 0x40
 800055a:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 800055c:	4b1f      	ldr	r3, [pc, #124]	; (80005dc <LCD_INIT+0x118>)
 800055e:	2204      	movs	r2, #4
 8000560:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 8000562:	4b1e      	ldr	r3, [pc, #120]	; (80005dc <LCD_INIT+0x118>)
 8000564:	2201      	movs	r2, #1
 8000566:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_PORT, &PinConfigLCD);
 8000568:	491c      	ldr	r1, [pc, #112]	; (80005dc <LCD_INIT+0x118>)
 800056a:	481d      	ldr	r0, [pc, #116]	; (80005e0 <LCD_INIT+0x11c>)
 800056c:	f000 f9b6 	bl	80008dc <MCAL_GPIO_INIT>

	PinConfigLCD.GPIO_PinNumber=GPIO_PIN_7;
 8000570:	4b1a      	ldr	r3, [pc, #104]	; (80005dc <LCD_INIT+0x118>)
 8000572:	2280      	movs	r2, #128	; 0x80
 8000574:	801a      	strh	r2, [r3, #0]
	PinConfigLCD.GPIO_MODE=GPIO_MODE_OUTPUT_PP;
 8000576:	4b19      	ldr	r3, [pc, #100]	; (80005dc <LCD_INIT+0x118>)
 8000578:	2204      	movs	r2, #4
 800057a:	709a      	strb	r2, [r3, #2]
	PinConfigLCD.GPIO_OUTPUT_SPEED=GPIO_OUTPUT_SPEED_10M;
 800057c:	4b17      	ldr	r3, [pc, #92]	; (80005dc <LCD_INIT+0x118>)
 800057e:	2201      	movs	r2, #1
 8000580:	70da      	strb	r2, [r3, #3]
	MCAL_GPIO_INIT(LCD_PORT, &PinConfigLCD);
 8000582:	4916      	ldr	r1, [pc, #88]	; (80005dc <LCD_INIT+0x118>)
 8000584:	4816      	ldr	r0, [pc, #88]	; (80005e0 <LCD_INIT+0x11c>)
 8000586:	f000 f9a9 	bl	80008dc <MCAL_GPIO_INIT>

	MCAL_GPIO_WRITE_PIN(LCD_CTRL, EN_SWITCH, GPIO_PIN_RESET);
 800058a:	2200      	movs	r2, #0
 800058c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000590:	4813      	ldr	r0, [pc, #76]	; (80005e0 <LCD_INIT+0x11c>)
 8000592:	f000 fa39 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
 8000596:	2200      	movs	r2, #0
 8000598:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800059c:	4810      	ldr	r0, [pc, #64]	; (80005e0 <LCD_INIT+0x11c>)
 800059e:	f000 fa33 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
 80005a2:	2200      	movs	r2, #0
 80005a4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80005a8:	480d      	ldr	r0, [pc, #52]	; (80005e0 <LCD_INIT+0x11c>)
 80005aa:	f000 fa2d 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	Wait_m(15);
 80005ae:	200f      	movs	r0, #15
 80005b0:	f000 f915 	bl	80007de <Wait_m>

	LCD_clear_screen();
 80005b4:	f000 f8e8 	bl	8000788 <LCD_clear_screen>
#ifdef EIGHT_BIT_MODE
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
#endif
#ifdef FOUR_BIT_MODE
	LCD_WRITE_COMMAND(0x02);
 80005b8:	2002      	movs	r0, #2
 80005ba:	f000 f813 	bl	80005e4 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_FUNCTION_4BIT_2LINES);
 80005be:	2028      	movs	r0, #40	; 0x28
 80005c0:	f000 f810 	bl	80005e4 <LCD_WRITE_COMMAND>
#endif

	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
 80005c4:	2006      	movs	r0, #6
 80005c6:	f000 f80d 	bl	80005e4 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
 80005ca:	2080      	movs	r0, #128	; 0x80
 80005cc:	f000 f80a 	bl	80005e4 <LCD_WRITE_COMMAND>
	LCD_WRITE_COMMAND(LCD_DISP_ON);
 80005d0:	200c      	movs	r0, #12
 80005d2:	f000 f807 	bl	80005e4 <LCD_WRITE_COMMAND>

}
 80005d6:	bf00      	nop
 80005d8:	bd80      	pop	{r7, pc}
 80005da:	bf00      	nop
 80005dc:	20000044 	.word	0x20000044
 80005e0:	40010800 	.word	0x40010800

080005e4 <LCD_WRITE_COMMAND>:
void LCD_WRITE_COMMAND(unsigned char command)
{
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b082      	sub	sp, #8
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	4603      	mov	r3, r0
 80005ec:	71fb      	strb	r3, [r7, #7]
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
	Wait_m(1);
	LCD_lcd_kick();
#endif
#ifdef FOUR_BIT_MODE
	MCAL_GPIO_WRITE_PORT(LCD_PORT,(uint8_t) ( (LCD_PORT->IDR & 0x0F) | (command & 0xF0) ) );
 80005ee:	4b20      	ldr	r3, [pc, #128]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 80005f0:	689b      	ldr	r3, [r3, #8]
 80005f2:	b2db      	uxtb	r3, r3
 80005f4:	f003 030f 	and.w	r3, r3, #15
 80005f8:	b2da      	uxtb	r2, r3
 80005fa:	79fb      	ldrb	r3, [r7, #7]
 80005fc:	f023 030f 	bic.w	r3, r3, #15
 8000600:	b2db      	uxtb	r3, r3
 8000602:	4313      	orrs	r3, r2
 8000604:	b2db      	uxtb	r3, r3
 8000606:	b29b      	uxth	r3, r3
 8000608:	4619      	mov	r1, r3
 800060a:	4819      	ldr	r0, [pc, #100]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 800060c:	f000 fa13 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
 8000610:	2200      	movs	r2, #0
 8000612:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000616:	4816      	ldr	r0, [pc, #88]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 8000618:	f000 f9f6 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
 800061c:	2200      	movs	r2, #0
 800061e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000622:	4813      	ldr	r0, [pc, #76]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 8000624:	f000 f9f0 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	LCD_lcd_kick();
 8000628:	f000 f898 	bl	800075c <LCD_lcd_kick>
	MCAL_GPIO_WRITE_PORT(LCD_PORT,(uint8_t) ( (LCD_PORT->IDR & 0x0F) | (command << DATA_shift) ) );
 800062c:	4b10      	ldr	r3, [pc, #64]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 800062e:	689b      	ldr	r3, [r3, #8]
 8000630:	b2db      	uxtb	r3, r3
 8000632:	f003 030f 	and.w	r3, r3, #15
 8000636:	b2da      	uxtb	r2, r3
 8000638:	79fb      	ldrb	r3, [r7, #7]
 800063a:	011b      	lsls	r3, r3, #4
 800063c:	b2db      	uxtb	r3, r3
 800063e:	4313      	orrs	r3, r2
 8000640:	b2db      	uxtb	r3, r3
 8000642:	b29b      	uxth	r3, r3
 8000644:	4619      	mov	r1, r3
 8000646:	480a      	ldr	r0, [pc, #40]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 8000648:	f000 f9f5 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
 800064c:	2200      	movs	r2, #0
 800064e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000652:	4807      	ldr	r0, [pc, #28]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 8000654:	f000 f9d8 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
 8000658:	2200      	movs	r2, #0
 800065a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800065e:	4804      	ldr	r0, [pc, #16]	; (8000670 <LCD_WRITE_COMMAND+0x8c>)
 8000660:	f000 f9d2 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	LCD_lcd_kick();
 8000664:	f000 f87a 	bl	800075c <LCD_lcd_kick>
#endif

}
 8000668:	bf00      	nop
 800066a:	3708      	adds	r7, #8
 800066c:	46bd      	mov	sp, r7
 800066e:	bd80      	pop	{r7, pc}
 8000670:	40010800 	.word	0x40010800

08000674 <LCD_WRITE_CHAR>:
void LCD_WRITE_CHAR(unsigned char character)
{
 8000674:	b580      	push	{r7, lr}
 8000676:	b082      	sub	sp, #8
 8000678:	af00      	add	r7, sp, #0
 800067a:	4603      	mov	r3, r0
 800067c:	71fb      	strb	r3, [r7, #7]
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_SET);
	LCD_lcd_kick();
#endif
#ifdef FOUR_BIT_MODE
	MCAL_GPIO_WRITE_PORT(LCD_PORT,(uint8_t) ( (LCD_PORT->IDR & 0x0F) | (character & 0xF0) ) );
 800067e:	4b20      	ldr	r3, [pc, #128]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 8000680:	689b      	ldr	r3, [r3, #8]
 8000682:	b2db      	uxtb	r3, r3
 8000684:	f003 030f 	and.w	r3, r3, #15
 8000688:	b2da      	uxtb	r2, r3
 800068a:	79fb      	ldrb	r3, [r7, #7]
 800068c:	f023 030f 	bic.w	r3, r3, #15
 8000690:	b2db      	uxtb	r3, r3
 8000692:	4313      	orrs	r3, r2
 8000694:	b2db      	uxtb	r3, r3
 8000696:	b29b      	uxth	r3, r3
 8000698:	4619      	mov	r1, r3
 800069a:	4819      	ldr	r0, [pc, #100]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 800069c:	f000 f9cb 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_SET);
 80006a0:	2201      	movs	r2, #1
 80006a2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006a6:	4816      	ldr	r0, [pc, #88]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006a8:	f000 f9ae 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
 80006ac:	2200      	movs	r2, #0
 80006ae:	f44f 7100 	mov.w	r1, #512	; 0x200
 80006b2:	4813      	ldr	r0, [pc, #76]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006b4:	f000 f9a8 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	LCD_lcd_kick();
 80006b8:	f000 f850 	bl	800075c <LCD_lcd_kick>
	MCAL_GPIO_WRITE_PORT(LCD_PORT,(uint8_t) ( (LCD_PORT->IDR & 0x0F) | (character << DATA_shift) ) );
 80006bc:	4b10      	ldr	r3, [pc, #64]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006be:	689b      	ldr	r3, [r3, #8]
 80006c0:	b2db      	uxtb	r3, r3
 80006c2:	f003 030f 	and.w	r3, r3, #15
 80006c6:	b2da      	uxtb	r2, r3
 80006c8:	79fb      	ldrb	r3, [r7, #7]
 80006ca:	011b      	lsls	r3, r3, #4
 80006cc:	b2db      	uxtb	r3, r3
 80006ce:	4313      	orrs	r3, r2
 80006d0:	b2db      	uxtb	r3, r3
 80006d2:	b29b      	uxth	r3, r3
 80006d4:	4619      	mov	r1, r3
 80006d6:	480a      	ldr	r0, [pc, #40]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006d8:	f000 f9ad 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RS_SWITCH, GPIO_PIN_SET);
 80006dc:	2201      	movs	r2, #1
 80006de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006e2:	4807      	ldr	r0, [pc, #28]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006e4:	f000 f990 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
 80006e8:	2200      	movs	r2, #0
 80006ea:	f44f 7100 	mov.w	r1, #512	; 0x200
 80006ee:	4804      	ldr	r0, [pc, #16]	; (8000700 <LCD_WRITE_CHAR+0x8c>)
 80006f0:	f000 f98a 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	LCD_lcd_kick();
 80006f4:	f000 f832 	bl	800075c <LCD_lcd_kick>
#endif

}
 80006f8:	bf00      	nop
 80006fa:	3708      	adds	r7, #8
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	40010800 	.word	0x40010800

08000704 <LCD_WRITE_STRING>:

void LCD_WRITE_STRING(char* string)
{
 8000704:	b580      	push	{r7, lr}
 8000706:	b084      	sub	sp, #16
 8000708:	af00      	add	r7, sp, #0
 800070a:	6078      	str	r0, [r7, #4]
	uint32_t counter=0;
 800070c:	2300      	movs	r3, #0
 800070e:	60fb      	str	r3, [r7, #12]
	while (*string >0)
 8000710:	e01c      	b.n	800074c <LCD_WRITE_STRING+0x48>
	{
		LCD_WRITE_CHAR(*string++);
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	1c5a      	adds	r2, r3, #1
 8000716:	607a      	str	r2, [r7, #4]
 8000718:	781b      	ldrb	r3, [r3, #0]
 800071a:	4618      	mov	r0, r3
 800071c:	f7ff ffaa 	bl	8000674 <LCD_WRITE_CHAR>
		counter++;
 8000720:	68fb      	ldr	r3, [r7, #12]
 8000722:	3301      	adds	r3, #1
 8000724:	60fb      	str	r3, [r7, #12]
		if (counter==16)
 8000726:	68fb      	ldr	r3, [r7, #12]
 8000728:	2b10      	cmp	r3, #16
 800072a:	d104      	bne.n	8000736 <LCD_WRITE_STRING+0x32>
		{
			LCD_GOTO_XY(1,0);
 800072c:	2100      	movs	r1, #0
 800072e:	2001      	movs	r0, #1
 8000730:	f000 f831 	bl	8000796 <LCD_GOTO_XY>
 8000734:	e00a      	b.n	800074c <LCD_WRITE_STRING+0x48>
		}
		else if (counter==32)
 8000736:	68fb      	ldr	r3, [r7, #12]
 8000738:	2b20      	cmp	r3, #32
 800073a:	d107      	bne.n	800074c <LCD_WRITE_STRING+0x48>
		{
			LCD_clear_screen();
 800073c:	f000 f824 	bl	8000788 <LCD_clear_screen>
			LCD_GOTO_XY(0,0);
 8000740:	2100      	movs	r1, #0
 8000742:	2000      	movs	r0, #0
 8000744:	f000 f827 	bl	8000796 <LCD_GOTO_XY>
			counter=0;
 8000748:	2300      	movs	r3, #0
 800074a:	60fb      	str	r3, [r7, #12]
	while (*string >0)
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	781b      	ldrb	r3, [r3, #0]
 8000750:	2b00      	cmp	r3, #0
 8000752:	d1de      	bne.n	8000712 <LCD_WRITE_STRING+0xe>
		}
	}

}
 8000754:	bf00      	nop
 8000756:	3710      	adds	r7, #16
 8000758:	46bd      	mov	sp, r7
 800075a:	bd80      	pop	{r7, pc}

0800075c <LCD_lcd_kick>:

	MCAL_GPIO_WRITE_PIN(LCD_CTRL,RW_SWITCH,GPIO_PIN_RESET);

}
void LCD_lcd_kick(void)
{
 800075c:	b580      	push	{r7, lr}
 800075e:	af00      	add	r7, sp, #0
	MCAL_GPIO_WRITE_PIN(LCD_CTRL,EN_SWITCH,GPIO_PIN_SET);
 8000760:	2201      	movs	r2, #1
 8000762:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000766:	4807      	ldr	r0, [pc, #28]	; (8000784 <LCD_lcd_kick+0x28>)
 8000768:	f000 f94e 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
	Wait_m(50);
 800076c:	2032      	movs	r0, #50	; 0x32
 800076e:	f000 f836 	bl	80007de <Wait_m>
	MCAL_GPIO_WRITE_PIN(LCD_CTRL,EN_SWITCH,GPIO_PIN_RESET);
 8000772:	2200      	movs	r2, #0
 8000774:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000778:	4802      	ldr	r0, [pc, #8]	; (8000784 <LCD_lcd_kick+0x28>)
 800077a:	f000 f945 	bl	8000a08 <MCAL_GPIO_WRITE_PIN>
}
 800077e:	bf00      	nop
 8000780:	bd80      	pop	{r7, pc}
 8000782:	bf00      	nop
 8000784:	40010800 	.word	0x40010800

08000788 <LCD_clear_screen>:
void LCD_clear_screen()
{
 8000788:	b580      	push	{r7, lr}
 800078a:	af00      	add	r7, sp, #0
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
 800078c:	2001      	movs	r0, #1
 800078e:	f7ff ff29 	bl	80005e4 <LCD_WRITE_COMMAND>
}
 8000792:	bf00      	nop
 8000794:	bd80      	pop	{r7, pc}

08000796 <LCD_GOTO_XY>:
void LCD_GOTO_XY(unsigned char line, unsigned char position){
 8000796:	b580      	push	{r7, lr}
 8000798:	b082      	sub	sp, #8
 800079a:	af00      	add	r7, sp, #0
 800079c:	4603      	mov	r3, r0
 800079e:	460a      	mov	r2, r1
 80007a0:	71fb      	strb	r3, [r7, #7]
 80007a2:	4613      	mov	r3, r2
 80007a4:	71bb      	strb	r3, [r7, #6]
	if (line == 0)
 80007a6:	79fb      	ldrb	r3, [r7, #7]
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	d108      	bne.n	80007be <LCD_GOTO_XY+0x28>
	{
		if (position < 16 && position >= 0)
 80007ac:	79bb      	ldrb	r3, [r7, #6]
 80007ae:	2b0f      	cmp	r3, #15
 80007b0:	d805      	bhi.n	80007be <LCD_GOTO_XY+0x28>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
 80007b2:	79bb      	ldrb	r3, [r7, #6]
 80007b4:	3b80      	subs	r3, #128	; 0x80
 80007b6:	b2db      	uxtb	r3, r3
 80007b8:	4618      	mov	r0, r3
 80007ba:	f7ff ff13 	bl	80005e4 <LCD_WRITE_COMMAND>
		}
	}
	if (line == 1)
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b01      	cmp	r3, #1
 80007c2:	d108      	bne.n	80007d6 <LCD_GOTO_XY+0x40>
	{
		if (position < 16 && position >= 0)
 80007c4:	79bb      	ldrb	r3, [r7, #6]
 80007c6:	2b0f      	cmp	r3, #15
 80007c8:	d805      	bhi.n	80007d6 <LCD_GOTO_XY+0x40>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
 80007ca:	79bb      	ldrb	r3, [r7, #6]
 80007cc:	3b40      	subs	r3, #64	; 0x40
 80007ce:	b2db      	uxtb	r3, r3
 80007d0:	4618      	mov	r0, r3
 80007d2:	f7ff ff07 	bl	80005e4 <LCD_WRITE_COMMAND>
		}
	}
}
 80007d6:	bf00      	nop
 80007d8:	3708      	adds	r7, #8
 80007da:	46bd      	mov	sp, r7
 80007dc:	bd80      	pop	{r7, pc}

080007de <Wait_m>:
	LCD_WRITE_STRING(str);
}


void Wait_m(uint32_t time)
{
 80007de:	b480      	push	{r7}
 80007e0:	b085      	sub	sp, #20
 80007e2:	af00      	add	r7, sp, #0
 80007e4:	6078      	str	r0, [r7, #4]
	uint32_t i,j;
	for(i=0;i<time;i++)
 80007e6:	2300      	movs	r3, #0
 80007e8:	60fb      	str	r3, [r7, #12]
 80007ea:	e00b      	b.n	8000804 <Wait_m+0x26>
	{
		for (j = 0; j < 255;j++) ;
 80007ec:	2300      	movs	r3, #0
 80007ee:	60bb      	str	r3, [r7, #8]
 80007f0:	e002      	b.n	80007f8 <Wait_m+0x1a>
 80007f2:	68bb      	ldr	r3, [r7, #8]
 80007f4:	3301      	adds	r3, #1
 80007f6:	60bb      	str	r3, [r7, #8]
 80007f8:	68bb      	ldr	r3, [r7, #8]
 80007fa:	2bfe      	cmp	r3, #254	; 0xfe
 80007fc:	d9f9      	bls.n	80007f2 <Wait_m+0x14>
	for(i=0;i<time;i++)
 80007fe:	68fb      	ldr	r3, [r7, #12]
 8000800:	3301      	adds	r3, #1
 8000802:	60fb      	str	r3, [r7, #12]
 8000804:	68fa      	ldr	r2, [r7, #12]
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	429a      	cmp	r2, r3
 800080a:	d3ef      	bcc.n	80007ec <Wait_m+0xe>
	}
}
 800080c:	bf00      	nop
 800080e:	3714      	adds	r7, #20
 8000810:	46bd      	mov	sp, r7
 8000812:	bc80      	pop	{r7}
 8000814:	4770      	bx	lr

08000816 <Get_CRLH_position>:
 8000816:	b480      	push	{r7}
 8000818:	b083      	sub	sp, #12
 800081a:	af00      	add	r7, sp, #0
 800081c:	4603      	mov	r3, r0
 800081e:	80fb      	strh	r3, [r7, #6]
 8000820:	88fb      	ldrh	r3, [r7, #6]
 8000822:	2b80      	cmp	r3, #128	; 0x80
 8000824:	d042      	beq.n	80008ac <Get_CRLH_position+0x96>
 8000826:	2b80      	cmp	r3, #128	; 0x80
 8000828:	dc11      	bgt.n	800084e <Get_CRLH_position+0x38>
 800082a:	2b08      	cmp	r3, #8
 800082c:	d036      	beq.n	800089c <Get_CRLH_position+0x86>
 800082e:	2b08      	cmp	r3, #8
 8000830:	dc06      	bgt.n	8000840 <Get_CRLH_position+0x2a>
 8000832:	2b02      	cmp	r3, #2
 8000834:	d02e      	beq.n	8000894 <Get_CRLH_position+0x7e>
 8000836:	2b04      	cmp	r3, #4
 8000838:	d02e      	beq.n	8000898 <Get_CRLH_position+0x82>
 800083a:	2b01      	cmp	r3, #1
 800083c:	d028      	beq.n	8000890 <Get_CRLH_position+0x7a>
 800083e:	e047      	b.n	80008d0 <Get_CRLH_position+0xba>
 8000840:	2b20      	cmp	r3, #32
 8000842:	d02f      	beq.n	80008a4 <Get_CRLH_position+0x8e>
 8000844:	2b40      	cmp	r3, #64	; 0x40
 8000846:	d02f      	beq.n	80008a8 <Get_CRLH_position+0x92>
 8000848:	2b10      	cmp	r3, #16
 800084a:	d029      	beq.n	80008a0 <Get_CRLH_position+0x8a>
 800084c:	e040      	b.n	80008d0 <Get_CRLH_position+0xba>
 800084e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000852:	d033      	beq.n	80008bc <Get_CRLH_position+0xa6>
 8000854:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000858:	dc09      	bgt.n	800086e <Get_CRLH_position+0x58>
 800085a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800085e:	d029      	beq.n	80008b4 <Get_CRLH_position+0x9e>
 8000860:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000864:	d028      	beq.n	80008b8 <Get_CRLH_position+0xa2>
 8000866:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800086a:	d021      	beq.n	80008b0 <Get_CRLH_position+0x9a>
 800086c:	e030      	b.n	80008d0 <Get_CRLH_position+0xba>
 800086e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000872:	d027      	beq.n	80008c4 <Get_CRLH_position+0xae>
 8000874:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000878:	dc03      	bgt.n	8000882 <Get_CRLH_position+0x6c>
 800087a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800087e:	d01f      	beq.n	80008c0 <Get_CRLH_position+0xaa>
 8000880:	e026      	b.n	80008d0 <Get_CRLH_position+0xba>
 8000882:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8000886:	d01f      	beq.n	80008c8 <Get_CRLH_position+0xb2>
 8000888:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800088c:	d01e      	beq.n	80008cc <Get_CRLH_position+0xb6>
 800088e:	e01f      	b.n	80008d0 <Get_CRLH_position+0xba>
 8000890:	2300      	movs	r3, #0
 8000892:	e01e      	b.n	80008d2 <Get_CRLH_position+0xbc>
 8000894:	2304      	movs	r3, #4
 8000896:	e01c      	b.n	80008d2 <Get_CRLH_position+0xbc>
 8000898:	2308      	movs	r3, #8
 800089a:	e01a      	b.n	80008d2 <Get_CRLH_position+0xbc>
 800089c:	230c      	movs	r3, #12
 800089e:	e018      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008a0:	2310      	movs	r3, #16
 80008a2:	e016      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008a4:	2314      	movs	r3, #20
 80008a6:	e014      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008a8:	2318      	movs	r3, #24
 80008aa:	e012      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008ac:	231c      	movs	r3, #28
 80008ae:	e010      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008b0:	2300      	movs	r3, #0
 80008b2:	e00e      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008b4:	2304      	movs	r3, #4
 80008b6:	e00c      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008b8:	2308      	movs	r3, #8
 80008ba:	e00a      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008bc:	230c      	movs	r3, #12
 80008be:	e008      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008c0:	2310      	movs	r3, #16
 80008c2:	e006      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008c4:	2314      	movs	r3, #20
 80008c6:	e004      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008c8:	2318      	movs	r3, #24
 80008ca:	e002      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008cc:	231c      	movs	r3, #28
 80008ce:	e000      	b.n	80008d2 <Get_CRLH_position+0xbc>
 80008d0:	2300      	movs	r3, #0
 80008d2:	4618      	mov	r0, r3
 80008d4:	370c      	adds	r7, #12
 80008d6:	46bd      	mov	sp, r7
 80008d8:	bc80      	pop	{r7}
 80008da:	4770      	bx	lr

080008dc <MCAL_GPIO_INIT>:
 80008dc:	b590      	push	{r4, r7, lr}
 80008de:	b085      	sub	sp, #20
 80008e0:	af00      	add	r7, sp, #0
 80008e2:	6078      	str	r0, [r7, #4]
 80008e4:	6039      	str	r1, [r7, #0]
 80008e6:	2300      	movs	r3, #0
 80008e8:	60bb      	str	r3, [r7, #8]
 80008ea:	2300      	movs	r3, #0
 80008ec:	73fb      	strb	r3, [r7, #15]
 80008ee:	683b      	ldr	r3, [r7, #0]
 80008f0:	881b      	ldrh	r3, [r3, #0]
 80008f2:	2bff      	cmp	r3, #255	; 0xff
 80008f4:	d801      	bhi.n	80008fa <MCAL_GPIO_INIT+0x1e>
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	e001      	b.n	80008fe <MCAL_GPIO_INIT+0x22>
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	3304      	adds	r3, #4
 80008fe:	60bb      	str	r3, [r7, #8]
 8000900:	683b      	ldr	r3, [r7, #0]
 8000902:	881b      	ldrh	r3, [r3, #0]
 8000904:	4618      	mov	r0, r3
 8000906:	f7ff ff86 	bl	8000816 <Get_CRLH_position>
 800090a:	4603      	mov	r3, r0
 800090c:	461a      	mov	r2, r3
 800090e:	230f      	movs	r3, #15
 8000910:	4093      	lsls	r3, r2
 8000912:	43da      	mvns	r2, r3
 8000914:	68bb      	ldr	r3, [r7, #8]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	401a      	ands	r2, r3
 800091a:	68bb      	ldr	r3, [r7, #8]
 800091c:	601a      	str	r2, [r3, #0]
 800091e:	683b      	ldr	r3, [r7, #0]
 8000920:	789b      	ldrb	r3, [r3, #2]
 8000922:	2b04      	cmp	r3, #4
 8000924:	d00b      	beq.n	800093e <MCAL_GPIO_INIT+0x62>
 8000926:	683b      	ldr	r3, [r7, #0]
 8000928:	789b      	ldrb	r3, [r3, #2]
 800092a:	2b05      	cmp	r3, #5
 800092c:	d007      	beq.n	800093e <MCAL_GPIO_INIT+0x62>
 800092e:	683b      	ldr	r3, [r7, #0]
 8000930:	789b      	ldrb	r3, [r3, #2]
 8000932:	2b06      	cmp	r3, #6
 8000934:	d003      	beq.n	800093e <MCAL_GPIO_INIT+0x62>
 8000936:	683b      	ldr	r3, [r7, #0]
 8000938:	789b      	ldrb	r3, [r3, #2]
 800093a:	2b07      	cmp	r3, #7
 800093c:	d10e      	bne.n	800095c <MCAL_GPIO_INIT+0x80>
 800093e:	683b      	ldr	r3, [r7, #0]
 8000940:	789b      	ldrb	r3, [r3, #2]
 8000942:	3b04      	subs	r3, #4
 8000944:	009b      	lsls	r3, r3, #2
 8000946:	b25a      	sxtb	r2, r3
 8000948:	683b      	ldr	r3, [r7, #0]
 800094a:	78db      	ldrb	r3, [r3, #3]
 800094c:	b25b      	sxtb	r3, r3
 800094e:	4313      	orrs	r3, r2
 8000950:	b25b      	sxtb	r3, r3
 8000952:	b2db      	uxtb	r3, r3
 8000954:	f003 030f 	and.w	r3, r3, #15
 8000958:	73fb      	strb	r3, [r7, #15]
 800095a:	e02c      	b.n	80009b6 <MCAL_GPIO_INIT+0xda>
 800095c:	683b      	ldr	r3, [r7, #0]
 800095e:	789b      	ldrb	r3, [r3, #2]
 8000960:	2b00      	cmp	r3, #0
 8000962:	d003      	beq.n	800096c <MCAL_GPIO_INIT+0x90>
 8000964:	683b      	ldr	r3, [r7, #0]
 8000966:	789b      	ldrb	r3, [r3, #2]
 8000968:	2b01      	cmp	r3, #1
 800096a:	d107      	bne.n	800097c <MCAL_GPIO_INIT+0xa0>
 800096c:	683b      	ldr	r3, [r7, #0]
 800096e:	789b      	ldrb	r3, [r3, #2]
 8000970:	009b      	lsls	r3, r3, #2
 8000972:	b2db      	uxtb	r3, r3
 8000974:	f003 030f 	and.w	r3, r3, #15
 8000978:	73fb      	strb	r3, [r7, #15]
 800097a:	e01c      	b.n	80009b6 <MCAL_GPIO_INIT+0xda>
 800097c:	683b      	ldr	r3, [r7, #0]
 800097e:	789b      	ldrb	r3, [r3, #2]
 8000980:	2b08      	cmp	r3, #8
 8000982:	d102      	bne.n	800098a <MCAL_GPIO_INIT+0xae>
 8000984:	2304      	movs	r3, #4
 8000986:	73fb      	strb	r3, [r7, #15]
 8000988:	e015      	b.n	80009b6 <MCAL_GPIO_INIT+0xda>
 800098a:	2308      	movs	r3, #8
 800098c:	73fb      	strb	r3, [r7, #15]
 800098e:	683b      	ldr	r3, [r7, #0]
 8000990:	789b      	ldrb	r3, [r3, #2]
 8000992:	2b02      	cmp	r3, #2
 8000994:	d107      	bne.n	80009a6 <MCAL_GPIO_INIT+0xca>
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	68db      	ldr	r3, [r3, #12]
 800099a:	683a      	ldr	r2, [r7, #0]
 800099c:	8812      	ldrh	r2, [r2, #0]
 800099e:	431a      	orrs	r2, r3
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	60da      	str	r2, [r3, #12]
 80009a4:	e007      	b.n	80009b6 <MCAL_GPIO_INIT+0xda>
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	68db      	ldr	r3, [r3, #12]
 80009aa:	683a      	ldr	r2, [r7, #0]
 80009ac:	8812      	ldrh	r2, [r2, #0]
 80009ae:	43d2      	mvns	r2, r2
 80009b0:	401a      	ands	r2, r3
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	60da      	str	r2, [r3, #12]
 80009b6:	7bfc      	ldrb	r4, [r7, #15]
 80009b8:	683b      	ldr	r3, [r7, #0]
 80009ba:	881b      	ldrh	r3, [r3, #0]
 80009bc:	4618      	mov	r0, r3
 80009be:	f7ff ff2a 	bl	8000816 <Get_CRLH_position>
 80009c2:	4603      	mov	r3, r0
 80009c4:	fa04 f203 	lsl.w	r2, r4, r3
 80009c8:	68bb      	ldr	r3, [r7, #8]
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	431a      	orrs	r2, r3
 80009ce:	68bb      	ldr	r3, [r7, #8]
 80009d0:	601a      	str	r2, [r3, #0]
 80009d2:	bf00      	nop
 80009d4:	3714      	adds	r7, #20
 80009d6:	46bd      	mov	sp, r7
 80009d8:	bd90      	pop	{r4, r7, pc}

080009da <MCAL_GPIO_READ_PIN>:
 80009da:	b480      	push	{r7}
 80009dc:	b085      	sub	sp, #20
 80009de:	af00      	add	r7, sp, #0
 80009e0:	6078      	str	r0, [r7, #4]
 80009e2:	460b      	mov	r3, r1
 80009e4:	807b      	strh	r3, [r7, #2]
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	689a      	ldr	r2, [r3, #8]
 80009ea:	887b      	ldrh	r3, [r7, #2]
 80009ec:	4013      	ands	r3, r2
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	d002      	beq.n	80009f8 <MCAL_GPIO_READ_PIN+0x1e>
 80009f2:	2301      	movs	r3, #1
 80009f4:	73fb      	strb	r3, [r7, #15]
 80009f6:	e001      	b.n	80009fc <MCAL_GPIO_READ_PIN+0x22>
 80009f8:	2300      	movs	r3, #0
 80009fa:	73fb      	strb	r3, [r7, #15]
 80009fc:	7bfb      	ldrb	r3, [r7, #15]
 80009fe:	4618      	mov	r0, r3
 8000a00:	3714      	adds	r7, #20
 8000a02:	46bd      	mov	sp, r7
 8000a04:	bc80      	pop	{r7}
 8000a06:	4770      	bx	lr

08000a08 <MCAL_GPIO_WRITE_PIN>:
 8000a08:	b480      	push	{r7}
 8000a0a:	b083      	sub	sp, #12
 8000a0c:	af00      	add	r7, sp, #0
 8000a0e:	6078      	str	r0, [r7, #4]
 8000a10:	460b      	mov	r3, r1
 8000a12:	807b      	strh	r3, [r7, #2]
 8000a14:	4613      	mov	r3, r2
 8000a16:	707b      	strb	r3, [r7, #1]
 8000a18:	787b      	ldrb	r3, [r7, #1]
 8000a1a:	2b00      	cmp	r3, #0
 8000a1c:	d003      	beq.n	8000a26 <MCAL_GPIO_WRITE_PIN+0x1e>
 8000a1e:	887a      	ldrh	r2, [r7, #2]
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	611a      	str	r2, [r3, #16]
 8000a24:	e002      	b.n	8000a2c <MCAL_GPIO_WRITE_PIN+0x24>
 8000a26:	887a      	ldrh	r2, [r7, #2]
 8000a28:	687b      	ldr	r3, [r7, #4]
 8000a2a:	615a      	str	r2, [r3, #20]
 8000a2c:	bf00      	nop
 8000a2e:	370c      	adds	r7, #12
 8000a30:	46bd      	mov	sp, r7
 8000a32:	bc80      	pop	{r7}
 8000a34:	4770      	bx	lr

08000a36 <MCAL_GPIO_WRITE_PORT>:
 8000a36:	b480      	push	{r7}
 8000a38:	b083      	sub	sp, #12
 8000a3a:	af00      	add	r7, sp, #0
 8000a3c:	6078      	str	r0, [r7, #4]
 8000a3e:	460b      	mov	r3, r1
 8000a40:	807b      	strh	r3, [r7, #2]
 8000a42:	887a      	ldrh	r2, [r7, #2]
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	60da      	str	r2, [r3, #12]
 8000a48:	bf00      	nop
 8000a4a:	370c      	adds	r7, #12
 8000a4c:	46bd      	mov	sp, r7
 8000a4e:	bc80      	pop	{r7}
 8000a50:	4770      	bx	lr
	...

08000a54 <clock_init>:
#include "Kaypad.h"
#include "Seven_Segment.h"


void clock_init()
{
 8000a54:	b480      	push	{r7}
 8000a56:	af00      	add	r7, sp, #0
	// Enable clock GPIOA
	RCC_GPIOA_CLC_EN();
 8000a58:	4b07      	ldr	r3, [pc, #28]	; (8000a78 <clock_init+0x24>)
 8000a5a:	699b      	ldr	r3, [r3, #24]
 8000a5c:	4a06      	ldr	r2, [pc, #24]	; (8000a78 <clock_init+0x24>)
 8000a5e:	f043 0304 	orr.w	r3, r3, #4
 8000a62:	6193      	str	r3, [r2, #24]
	// Enable clock GPIOB
	RCC_GPIOB_CLK_EN();
 8000a64:	4b04      	ldr	r3, [pc, #16]	; (8000a78 <clock_init+0x24>)
 8000a66:	699b      	ldr	r3, [r3, #24]
 8000a68:	4a03      	ldr	r2, [pc, #12]	; (8000a78 <clock_init+0x24>)
 8000a6a:	f043 0308 	orr.w	r3, r3, #8
 8000a6e:	6193      	str	r3, [r2, #24]
}
 8000a70:	bf00      	nop
 8000a72:	46bd      	mov	sp, r7
 8000a74:	bc80      	pop	{r7}
 8000a76:	4770      	bx	lr
 8000a78:	40021000 	.word	0x40021000

08000a7c <Main_SetUP>:


void Main_SetUP()
{
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b088      	sub	sp, #32
 8000a80:	af00      	add	r7, sp, #0
	clock_init();
 8000a82:	f7ff ffe7 	bl	8000a54 <clock_init>
	LCD_INIT();
 8000a86:	f7ff fd1d 	bl	80004c4 <LCD_INIT>
	Seven_Segment_Init();
 8000a8a:	f7ff fcb1 	bl	80003f0 <Seven_Segment_Init>
	uint32_t count;
	unsigned char LCD_DISPLAY [11] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'};
 8000a8e:	4a20      	ldr	r2, [pc, #128]	; (8000b10 <Main_SetUP+0x94>)
 8000a90:	f107 0310 	add.w	r3, r7, #16
 8000a94:	ca07      	ldmia	r2, {r0, r1, r2}
 8000a96:	c303      	stmia	r3!, {r0, r1}
 8000a98:	801a      	strh	r2, [r3, #0]
 8000a9a:	3302      	adds	r3, #2
 8000a9c:	0c12      	lsrs	r2, r2, #16
 8000a9e:	701a      	strb	r2, [r3, #0]
	unsigned char Seven_Segment_DISPLAY [11] = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, ZERO};
 8000aa0:	4a1c      	ldr	r2, [pc, #112]	; (8000b14 <Main_SetUP+0x98>)
 8000aa2:	1d3b      	adds	r3, r7, #4
 8000aa4:	ca07      	ldmia	r2, {r0, r1, r2}
 8000aa6:	c303      	stmia	r3!, {r0, r1}
 8000aa8:	801a      	strh	r2, [r3, #0]
 8000aaa:	3302      	adds	r3, #2
 8000aac:	0c12      	lsrs	r2, r2, #16
 8000aae:	701a      	strb	r2, [r3, #0]
	for(count=0;count<11;count++)
 8000ab0:	2300      	movs	r3, #0
 8000ab2:	61fb      	str	r3, [r7, #28]
 8000ab4:	e019      	b.n	8000aea <Main_SetUP+0x6e>
	{
		LCD_WRITE_CHAR(LCD_DISPLAY[count]);
 8000ab6:	f107 0210 	add.w	r2, r7, #16
 8000aba:	69fb      	ldr	r3, [r7, #28]
 8000abc:	4413      	add	r3, r2
 8000abe:	781b      	ldrb	r3, [r3, #0]
 8000ac0:	4618      	mov	r0, r3
 8000ac2:	f7ff fdd7 	bl	8000674 <LCD_WRITE_CHAR>
		MCAL_GPIO_WRITE_PORT(Seven_segment_Port,Seven_Segment_DISPLAY[count] << 9);
 8000ac6:	1d3a      	adds	r2, r7, #4
 8000ac8:	69fb      	ldr	r3, [r7, #28]
 8000aca:	4413      	add	r3, r2
 8000acc:	781b      	ldrb	r3, [r3, #0]
 8000ace:	b29b      	uxth	r3, r3
 8000ad0:	025b      	lsls	r3, r3, #9
 8000ad2:	b29b      	uxth	r3, r3
 8000ad4:	4619      	mov	r1, r3
 8000ad6:	4810      	ldr	r0, [pc, #64]	; (8000b18 <Main_SetUP+0x9c>)
 8000ad8:	f7ff ffad 	bl	8000a36 <MCAL_GPIO_WRITE_PORT>
		Wait_m(500);
 8000adc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000ae0:	f7ff fe7d 	bl	80007de <Wait_m>
	for(count=0;count<11;count++)
 8000ae4:	69fb      	ldr	r3, [r7, #28]
 8000ae6:	3301      	adds	r3, #1
 8000ae8:	61fb      	str	r3, [r7, #28]
 8000aea:	69fb      	ldr	r3, [r7, #28]
 8000aec:	2b0a      	cmp	r3, #10
 8000aee:	d9e2      	bls.n	8000ab6 <Main_SetUP+0x3a>
	}
	LCD_clear_screen();
 8000af0:	f7ff fe4a 	bl	8000788 <LCD_clear_screen>
	LCD_WRITE_STRING("KeyPad is ready");
 8000af4:	4809      	ldr	r0, [pc, #36]	; (8000b1c <Main_SetUP+0xa0>)
 8000af6:	f7ff fe05 	bl	8000704 <LCD_WRITE_STRING>
	Wait_m(1000);
 8000afa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000afe:	f7ff fe6e 	bl	80007de <Wait_m>
	LCD_clear_screen();
 8000b02:	f7ff fe41 	bl	8000788 <LCD_clear_screen>
}
 8000b06:	bf00      	nop
 8000b08:	3720      	adds	r7, #32
 8000b0a:	46bd      	mov	sp, r7
 8000b0c:	bd80      	pop	{r7, pc}
 8000b0e:	bf00      	nop
 8000b10:	08000c1c 	.word	0x08000c1c
 8000b14:	08000c28 	.word	0x08000c28
 8000b18:	40010c00 	.word	0x40010c00
 8000b1c:	08000c0c 	.word	0x08000c0c

08000b20 <main>:

int main(void)
{
 8000b20:	b580      	push	{r7, lr}
 8000b22:	b082      	sub	sp, #8
 8000b24:	af00      	add	r7, sp, #0
	Main_SetUP();
 8000b26:	f7ff ffa9 	bl	8000a7c <Main_SetUP>

	KAYPAD_INIT();
 8000b2a:	f7ff fb21 	bl	8000170 <KAYPAD_INIT>
	uint8_t Pressed_kay;
	while(1)
	{
		Pressed_kay =GET_CHARACTER();
 8000b2e:	f7ff fb95 	bl	800025c <GET_CHARACTER>
 8000b32:	4603      	mov	r3, r0
 8000b34:	71fb      	strb	r3, [r7, #7]
		switch(Pressed_kay)
 8000b36:	79fb      	ldrb	r3, [r7, #7]
 8000b38:	2b43      	cmp	r3, #67	; 0x43
 8000b3a:	d002      	beq.n	8000b42 <main+0x22>
 8000b3c:	2b4e      	cmp	r3, #78	; 0x4e
 8000b3e:	d008      	beq.n	8000b52 <main+0x32>
 8000b40:	e002      	b.n	8000b48 <main+0x28>
		{
		case 'C':
			LCD_clear_screen();
 8000b42:	f7ff fe21 	bl	8000788 <LCD_clear_screen>
			break;
 8000b46:	e005      	b.n	8000b54 <main+0x34>
		case 'N' :
			break;
		default:
			LCD_WRITE_CHAR(Pressed_kay);
 8000b48:	79fb      	ldrb	r3, [r7, #7]
 8000b4a:	4618      	mov	r0, r3
 8000b4c:	f7ff fd92 	bl	8000674 <LCD_WRITE_CHAR>
			break;
 8000b50:	e000      	b.n	8000b54 <main+0x34>
			break;
 8000b52:	bf00      	nop
		Pressed_kay =GET_CHARACTER();
 8000b54:	e7eb      	b.n	8000b2e <main+0xe>
	...

08000b58 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000b58:	480d      	ldr	r0, [pc, #52]	; (8000b90 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000b5a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000b5c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000b60:	480c      	ldr	r0, [pc, #48]	; (8000b94 <LoopForever+0x6>)
  ldr r1, =_edata
 8000b62:	490d      	ldr	r1, [pc, #52]	; (8000b98 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000b64:	4a0d      	ldr	r2, [pc, #52]	; (8000b9c <LoopForever+0xe>)
  movs r3, #0
 8000b66:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000b68:	e002      	b.n	8000b70 <LoopCopyDataInit>

08000b6a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000b6a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000b6c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000b6e:	3304      	adds	r3, #4

08000b70 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000b70:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000b72:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000b74:	d3f9      	bcc.n	8000b6a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000b76:	4a0a      	ldr	r2, [pc, #40]	; (8000ba0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000b78:	4c0a      	ldr	r4, [pc, #40]	; (8000ba4 <LoopForever+0x16>)
  movs r3, #0
 8000b7a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000b7c:	e001      	b.n	8000b82 <LoopFillZerobss>

08000b7e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000b7e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000b80:	3204      	adds	r2, #4

08000b82 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000b82:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000b84:	d3fb      	bcc.n	8000b7e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000b86:	f000 f811 	bl	8000bac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000b8a:	f7ff ffc9 	bl	8000b20 <main>

08000b8e <LoopForever>:

LoopForever:
    b LoopForever
 8000b8e:	e7fe      	b.n	8000b8e <LoopForever>
  ldr   r0, =_estack
 8000b90:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000b94:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000b98:	20000020 	.word	0x20000020
  ldr r2, =_sidata
 8000b9c:	08000c3c 	.word	0x08000c3c
  ldr r2, =_sbss
 8000ba0:	20000020 	.word	0x20000020
  ldr r4, =_ebss
 8000ba4:	20000048 	.word	0x20000048

08000ba8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
b Infinite_Loop
 8000ba8:	e7fe      	b.n	8000ba8 <ADC1_2_IRQHandler>
	...

08000bac <__libc_init_array>:
 8000bac:	b570      	push	{r4, r5, r6, lr}
 8000bae:	2500      	movs	r5, #0
 8000bb0:	4e0c      	ldr	r6, [pc, #48]	; (8000be4 <__libc_init_array+0x38>)
 8000bb2:	4c0d      	ldr	r4, [pc, #52]	; (8000be8 <__libc_init_array+0x3c>)
 8000bb4:	1ba4      	subs	r4, r4, r6
 8000bb6:	10a4      	asrs	r4, r4, #2
 8000bb8:	42a5      	cmp	r5, r4
 8000bba:	d109      	bne.n	8000bd0 <__libc_init_array+0x24>
 8000bbc:	f000 f81a 	bl	8000bf4 <_init>
 8000bc0:	2500      	movs	r5, #0
 8000bc2:	4e0a      	ldr	r6, [pc, #40]	; (8000bec <__libc_init_array+0x40>)
 8000bc4:	4c0a      	ldr	r4, [pc, #40]	; (8000bf0 <__libc_init_array+0x44>)
 8000bc6:	1ba4      	subs	r4, r4, r6
 8000bc8:	10a4      	asrs	r4, r4, #2
 8000bca:	42a5      	cmp	r5, r4
 8000bcc:	d105      	bne.n	8000bda <__libc_init_array+0x2e>
 8000bce:	bd70      	pop	{r4, r5, r6, pc}
 8000bd0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000bd4:	4798      	blx	r3
 8000bd6:	3501      	adds	r5, #1
 8000bd8:	e7ee      	b.n	8000bb8 <__libc_init_array+0xc>
 8000bda:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000bde:	4798      	blx	r3
 8000be0:	3501      	adds	r5, #1
 8000be2:	e7f2      	b.n	8000bca <__libc_init_array+0x1e>
 8000be4:	08000c34 	.word	0x08000c34
 8000be8:	08000c34 	.word	0x08000c34
 8000bec:	08000c34 	.word	0x08000c34
 8000bf0:	08000c38 	.word	0x08000c38

08000bf4 <_init>:
 8000bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bf6:	bf00      	nop
 8000bf8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000bfa:	bc08      	pop	{r3}
 8000bfc:	469e      	mov	lr, r3
 8000bfe:	4770      	bx	lr

08000c00 <_fini>:
 8000c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c02:	bf00      	nop
 8000c04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c06:	bc08      	pop	{r3}
 8000c08:	469e      	mov	lr, r3
 8000c0a:	4770      	bx	lr
