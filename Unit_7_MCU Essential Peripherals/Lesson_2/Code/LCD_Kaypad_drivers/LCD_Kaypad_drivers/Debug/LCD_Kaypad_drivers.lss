
LCD_Kaypad_drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  000010ca  0000113e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  0000120c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e39  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e1  00000000  00000000  000020fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000090e  00000000  00000000  000028de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001cc  00000000  00000000  000031ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000533  00000000  00000000  000033b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000924  00000000  00000000  000038eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  0000420f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ec       	ldi	r30, 0xCA	; 202
      68:	f0 e1       	ldi	r31, 0x10	; 16
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 39       	cpi	r26, 0x96	; 150
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 a6 02 	call	0x54c	; 0x54c <main>
      7a:	0c 94 63 08 	jmp	0x10c6	; 0x10c6 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <KAYPAD_INIT>:
uint32_t Kaypad_Row[]={R0,R1,R2,R3};

void KAYPAD_INIT()
{
	// set column as an output
	SETBIT(Data_Dir_KAYPAD_PORT,C0);
      82:	81 b3       	in	r24, 0x11	; 17
      84:	80 61       	ori	r24, 0x10	; 16
      86:	81 bb       	out	0x11, r24	; 17
	SETBIT(Data_Dir_KAYPAD_PORT,C1);
      88:	81 b3       	in	r24, 0x11	; 17
      8a:	80 62       	ori	r24, 0x20	; 32
      8c:	81 bb       	out	0x11, r24	; 17
	SETBIT(Data_Dir_KAYPAD_PORT,C2);
      8e:	81 b3       	in	r24, 0x11	; 17
      90:	80 64       	ori	r24, 0x40	; 64
      92:	81 bb       	out	0x11, r24	; 17
	SETBIT(Data_Dir_KAYPAD_PORT,C3);
      94:	81 b3       	in	r24, 0x11	; 17
      96:	80 68       	ori	r24, 0x80	; 128
      98:	81 bb       	out	0x11, r24	; 17
	// set rows as an input
	CLEARBIT(Data_Dir_KAYPAD_PORT,R0);
      9a:	81 b3       	in	r24, 0x11	; 17
      9c:	8e 7f       	andi	r24, 0xFE	; 254
      9e:	81 bb       	out	0x11, r24	; 17
	CLEARBIT(Data_Dir_KAYPAD_PORT,R1);
      a0:	81 b3       	in	r24, 0x11	; 17
      a2:	8d 7f       	andi	r24, 0xFD	; 253
      a4:	81 bb       	out	0x11, r24	; 17
	CLEARBIT(Data_Dir_KAYPAD_PORT,R2);
      a6:	81 b3       	in	r24, 0x11	; 17
      a8:	8b 7f       	andi	r24, 0xFB	; 251
      aa:	81 bb       	out	0x11, r24	; 17
	CLEARBIT(Data_Dir_KAYPAD_PORT,R3);
      ac:	81 b3       	in	r24, 0x11	; 17
      ae:	87 7f       	andi	r24, 0xF7	; 247
      b0:	81 bb       	out	0x11, r24	; 17
	
	KAYPAD_PORT =0xFF;
      b2:	8f ef       	ldi	r24, 0xFF	; 255
      b4:	82 bb       	out	0x12, r24	; 18
      b6:	08 95       	ret

000000b8 <GET_CHARACTER>:



}
char GET_CHARACTER()
{
      b8:	cf 92       	push	r12
      ba:	df 92       	push	r13
      bc:	ef 92       	push	r14
      be:	ff 92       	push	r15
	uint32_t i,j;
	for (i=0;i<4;i++)
      c0:	c1 2c       	mov	r12, r1
      c2:	d1 2c       	mov	r13, r1
      c4:	76 01       	movw	r14, r12
      c6:	d4 c0       	rjmp	.+424    	; 0x270 <GET_CHARACTER+0x1b8>
	{
		uint32_t count;
		for (count=0;count<4;count++)
		{
			SETBIT(KAYPAD_PORT,Kaypad_column[count]);
      c8:	22 b3       	in	r18, 0x12	; 18
      ca:	fa 01       	movw	r30, r20
      cc:	ee 0f       	add	r30, r30
      ce:	ff 1f       	adc	r31, r31
      d0:	ee 0f       	add	r30, r30
      d2:	ff 1f       	adc	r31, r31
      d4:	e0 59       	subi	r30, 0x90	; 144
      d6:	ff 4f       	sbci	r31, 0xFF	; 255
      d8:	81 e0       	ldi	r24, 0x01	; 1
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	00 80       	ld	r0, Z
      de:	02 c0       	rjmp	.+4      	; 0xe4 <GET_CHARACTER+0x2c>
      e0:	88 0f       	add	r24, r24
      e2:	99 1f       	adc	r25, r25
      e4:	0a 94       	dec	r0
      e6:	e2 f7       	brpl	.-8      	; 0xe0 <GET_CHARACTER+0x28>
      e8:	82 2b       	or	r24, r18
      ea:	82 bb       	out	0x12, r24	; 18
{
	uint32_t i,j;
	for (i=0;i<4;i++)
	{
		uint32_t count;
		for (count=0;count<4;count++)
      ec:	4f 5f       	subi	r20, 0xFF	; 255
      ee:	5f 4f       	sbci	r21, 0xFF	; 255
      f0:	6f 4f       	sbci	r22, 0xFF	; 255
      f2:	7f 4f       	sbci	r23, 0xFF	; 255
      f4:	03 c0       	rjmp	.+6      	; 0xfc <GET_CHARACTER+0x44>
      f6:	40 e0       	ldi	r20, 0x00	; 0
      f8:	50 e0       	ldi	r21, 0x00	; 0
      fa:	ba 01       	movw	r22, r20
      fc:	44 30       	cpi	r20, 0x04	; 4
      fe:	51 05       	cpc	r21, r1
     100:	61 05       	cpc	r22, r1
     102:	71 05       	cpc	r23, r1
     104:	08 f3       	brcs	.-62     	; 0xc8 <GET_CHARACTER+0x10>
		{
			SETBIT(KAYPAD_PORT,Kaypad_column[count]);
		}
		CLEARBIT(KAYPAD_PORT,Kaypad_column[i]);
     106:	22 b3       	in	r18, 0x12	; 18
     108:	f6 01       	movw	r30, r12
     10a:	ee 0f       	add	r30, r30
     10c:	ff 1f       	adc	r31, r31
     10e:	ee 0f       	add	r30, r30
     110:	ff 1f       	adc	r31, r31
     112:	e0 59       	subi	r30, 0x90	; 144
     114:	ff 4f       	sbci	r31, 0xFF	; 255
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	00 80       	ld	r0, Z
     11c:	02 c0       	rjmp	.+4      	; 0x122 <GET_CHARACTER+0x6a>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	0a 94       	dec	r0
     124:	e2 f7       	brpl	.-8      	; 0x11e <GET_CHARACTER+0x66>
     126:	80 95       	com	r24
     128:	82 23       	and	r24, r18
     12a:	82 bb       	out	0x12, r24	; 18
		for (j=0;j<4;j++)
     12c:	40 e0       	ldi	r20, 0x00	; 0
     12e:	50 e0       	ldi	r21, 0x00	; 0
     130:	ba 01       	movw	r22, r20
     132:	93 c0       	rjmp	.+294    	; 0x25a <GET_CHARACTER+0x1a2>
		{
			if (READBIT(KAYPAD_PIN,Kaypad_Row[j])==0)
     134:	80 b3       	in	r24, 0x10	; 16
     136:	fa 01       	movw	r30, r20
     138:	ee 0f       	add	r30, r30
     13a:	ff 1f       	adc	r31, r31
     13c:	ee 0f       	add	r30, r30
     13e:	ff 1f       	adc	r31, r31
     140:	e0 5a       	subi	r30, 0xA0	; 160
     142:	ff 4f       	sbci	r31, 0xFF	; 255
     144:	30 81       	ld	r19, Z
     146:	23 2f       	mov	r18, r19
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	02 c0       	rjmp	.+4      	; 0x150 <GET_CHARACTER+0x98>
     14c:	95 95       	asr	r25
     14e:	87 95       	ror	r24
     150:	3a 95       	dec	r19
     152:	e2 f7       	brpl	.-8      	; 0x14c <GET_CHARACTER+0x94>
     154:	80 fd       	sbrc	r24, 0
     156:	7d c0       	rjmp	.+250    	; 0x252 <GET_CHARACTER+0x19a>
			{
				while (READBIT(KAYPAD_PIN,Kaypad_Row[j])==0);
     158:	80 b3       	in	r24, 0x10	; 16
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	02 2e       	mov	r0, r18
     15e:	02 c0       	rjmp	.+4      	; 0x164 <GET_CHARACTER+0xac>
     160:	95 95       	asr	r25
     162:	87 95       	ror	r24
     164:	0a 94       	dec	r0
     166:	e2 f7       	brpl	.-8      	; 0x160 <GET_CHARACTER+0xa8>
     168:	80 ff       	sbrs	r24, 0
     16a:	f6 cf       	rjmp	.-20     	; 0x158 <GET_CHARACTER+0xa0>
				switch(i)
     16c:	81 e0       	ldi	r24, 0x01	; 1
     16e:	c8 16       	cp	r12, r24
     170:	d1 04       	cpc	r13, r1
     172:	e1 04       	cpc	r14, r1
     174:	f1 04       	cpc	r15, r1
     176:	41 f1       	breq	.+80     	; 0x1c8 <GET_CHARACTER+0x110>
     178:	70 f0       	brcs	.+28     	; 0x196 <GET_CHARACTER+0xde>
     17a:	82 e0       	ldi	r24, 0x02	; 2
     17c:	c8 16       	cp	r12, r24
     17e:	d1 04       	cpc	r13, r1
     180:	e1 04       	cpc	r14, r1
     182:	f1 04       	cpc	r15, r1
     184:	c9 f1       	breq	.+114    	; 0x1f8 <GET_CHARACTER+0x140>
     186:	83 e0       	ldi	r24, 0x03	; 3
     188:	c8 16       	cp	r12, r24
     18a:	d1 04       	cpc	r13, r1
     18c:	e1 04       	cpc	r14, r1
     18e:	f1 04       	cpc	r15, r1
     190:	09 f4       	brne	.+2      	; 0x194 <GET_CHARACTER+0xdc>
     192:	4a c0       	rjmp	.+148    	; 0x228 <GET_CHARACTER+0x170>
     194:	5e c0       	rjmp	.+188    	; 0x252 <GET_CHARACTER+0x19a>
				{
					case 0:
					{
						if (j==0)
     196:	41 15       	cp	r20, r1
     198:	51 05       	cpc	r21, r1
     19a:	61 05       	cpc	r22, r1
     19c:	71 05       	cpc	r23, r1
     19e:	09 f4       	brne	.+2      	; 0x1a2 <GET_CHARACTER+0xea>
     1a0:	70 c0       	rjmp	.+224    	; 0x282 <GET_CHARACTER+0x1ca>
						{
							return '7';
						}
						else if (j==1)
     1a2:	41 30       	cpi	r20, 0x01	; 1
     1a4:	51 05       	cpc	r21, r1
     1a6:	61 05       	cpc	r22, r1
     1a8:	71 05       	cpc	r23, r1
     1aa:	09 f4       	brne	.+2      	; 0x1ae <GET_CHARACTER+0xf6>
     1ac:	6c c0       	rjmp	.+216    	; 0x286 <GET_CHARACTER+0x1ce>
						{
							return '4';
						}
						else if (j==2)
     1ae:	42 30       	cpi	r20, 0x02	; 2
     1b0:	51 05       	cpc	r21, r1
     1b2:	61 05       	cpc	r22, r1
     1b4:	71 05       	cpc	r23, r1
     1b6:	09 f4       	brne	.+2      	; 0x1ba <GET_CHARACTER+0x102>
     1b8:	68 c0       	rjmp	.+208    	; 0x28a <GET_CHARACTER+0x1d2>
						{
							return '1';
						}
						else if (j==3)
     1ba:	43 30       	cpi	r20, 0x03	; 3
     1bc:	51 05       	cpc	r21, r1
     1be:	61 05       	cpc	r22, r1
     1c0:	71 05       	cpc	r23, r1
     1c2:	09 f0       	breq	.+2      	; 0x1c6 <GET_CHARACTER+0x10e>
     1c4:	46 c0       	rjmp	.+140    	; 0x252 <GET_CHARACTER+0x19a>
     1c6:	63 c0       	rjmp	.+198    	; 0x28e <GET_CHARACTER+0x1d6>
						}
						break;
					}
					case 1:
					{
						if (j==0)
     1c8:	41 15       	cp	r20, r1
     1ca:	51 05       	cpc	r21, r1
     1cc:	61 05       	cpc	r22, r1
     1ce:	71 05       	cpc	r23, r1
     1d0:	09 f4       	brne	.+2      	; 0x1d4 <GET_CHARACTER+0x11c>
     1d2:	5f c0       	rjmp	.+190    	; 0x292 <GET_CHARACTER+0x1da>
						{
							return '8';
						}
						else if (j==1)
     1d4:	41 30       	cpi	r20, 0x01	; 1
     1d6:	51 05       	cpc	r21, r1
     1d8:	61 05       	cpc	r22, r1
     1da:	71 05       	cpc	r23, r1
     1dc:	09 f4       	brne	.+2      	; 0x1e0 <GET_CHARACTER+0x128>
     1de:	5b c0       	rjmp	.+182    	; 0x296 <GET_CHARACTER+0x1de>
						{
							return '5';
						}
						else if (j==2)
     1e0:	42 30       	cpi	r20, 0x02	; 2
     1e2:	51 05       	cpc	r21, r1
     1e4:	61 05       	cpc	r22, r1
     1e6:	71 05       	cpc	r23, r1
     1e8:	09 f4       	brne	.+2      	; 0x1ec <GET_CHARACTER+0x134>
     1ea:	57 c0       	rjmp	.+174    	; 0x29a <GET_CHARACTER+0x1e2>
						{
							return '2';
						}
						else if (j==3)
     1ec:	43 30       	cpi	r20, 0x03	; 3
     1ee:	51 05       	cpc	r21, r1
     1f0:	61 05       	cpc	r22, r1
     1f2:	71 05       	cpc	r23, r1
     1f4:	71 f5       	brne	.+92     	; 0x252 <GET_CHARACTER+0x19a>
     1f6:	53 c0       	rjmp	.+166    	; 0x29e <GET_CHARACTER+0x1e6>
						}
						break;
					}
					case 2:
					{
						if (j==0)
     1f8:	41 15       	cp	r20, r1
     1fa:	51 05       	cpc	r21, r1
     1fc:	61 05       	cpc	r22, r1
     1fe:	71 05       	cpc	r23, r1
     200:	09 f4       	brne	.+2      	; 0x204 <GET_CHARACTER+0x14c>
     202:	4f c0       	rjmp	.+158    	; 0x2a2 <GET_CHARACTER+0x1ea>
						{
							return '9';
						}
						else if (j==1)
     204:	41 30       	cpi	r20, 0x01	; 1
     206:	51 05       	cpc	r21, r1
     208:	61 05       	cpc	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	09 f4       	brne	.+2      	; 0x210 <GET_CHARACTER+0x158>
     20e:	4b c0       	rjmp	.+150    	; 0x2a6 <GET_CHARACTER+0x1ee>
						{
							return '6';
						}
						else if (j==2)
     210:	42 30       	cpi	r20, 0x02	; 2
     212:	51 05       	cpc	r21, r1
     214:	61 05       	cpc	r22, r1
     216:	71 05       	cpc	r23, r1
     218:	09 f4       	brne	.+2      	; 0x21c <GET_CHARACTER+0x164>
     21a:	47 c0       	rjmp	.+142    	; 0x2aa <GET_CHARACTER+0x1f2>
						{
							return '3';
						}
						else if (j==3)
     21c:	43 30       	cpi	r20, 0x03	; 3
     21e:	51 05       	cpc	r21, r1
     220:	61 05       	cpc	r22, r1
     222:	71 05       	cpc	r23, r1
     224:	b1 f4       	brne	.+44     	; 0x252 <GET_CHARACTER+0x19a>
     226:	43 c0       	rjmp	.+134    	; 0x2ae <GET_CHARACTER+0x1f6>
						}
						break;
					}
					case 3:
					{
						if (j==0)
     228:	41 15       	cp	r20, r1
     22a:	51 05       	cpc	r21, r1
     22c:	61 05       	cpc	r22, r1
     22e:	71 05       	cpc	r23, r1
     230:	09 f4       	brne	.+2      	; 0x234 <GET_CHARACTER+0x17c>
     232:	3f c0       	rjmp	.+126    	; 0x2b2 <GET_CHARACTER+0x1fa>
						{
							return '/';
						}
						else if (j==1)
     234:	41 30       	cpi	r20, 0x01	; 1
     236:	51 05       	cpc	r21, r1
     238:	61 05       	cpc	r22, r1
     23a:	71 05       	cpc	r23, r1
     23c:	e1 f1       	breq	.+120    	; 0x2b6 <GET_CHARACTER+0x1fe>
						{
							return '*';
						}
						else if (j==2)
     23e:	42 30       	cpi	r20, 0x02	; 2
     240:	51 05       	cpc	r21, r1
     242:	61 05       	cpc	r22, r1
     244:	71 05       	cpc	r23, r1
     246:	c9 f1       	breq	.+114    	; 0x2ba <GET_CHARACTER+0x202>
						{
							return '-';
						}
						else if (j==3)
     248:	43 30       	cpi	r20, 0x03	; 3
     24a:	51 05       	cpc	r21, r1
     24c:	61 05       	cpc	r22, r1
     24e:	71 05       	cpc	r23, r1
     250:	b1 f1       	breq	.+108    	; 0x2be <GET_CHARACTER+0x206>
		for (count=0;count<4;count++)
		{
			SETBIT(KAYPAD_PORT,Kaypad_column[count]);
		}
		CLEARBIT(KAYPAD_PORT,Kaypad_column[i]);
		for (j=0;j<4;j++)
     252:	4f 5f       	subi	r20, 0xFF	; 255
     254:	5f 4f       	sbci	r21, 0xFF	; 255
     256:	6f 4f       	sbci	r22, 0xFF	; 255
     258:	7f 4f       	sbci	r23, 0xFF	; 255
     25a:	44 30       	cpi	r20, 0x04	; 4
     25c:	51 05       	cpc	r21, r1
     25e:	61 05       	cpc	r22, r1
     260:	71 05       	cpc	r23, r1
     262:	08 f4       	brcc	.+2      	; 0x266 <GET_CHARACTER+0x1ae>
     264:	67 cf       	rjmp	.-306    	; 0x134 <GET_CHARACTER+0x7c>

}
char GET_CHARACTER()
{
	uint32_t i,j;
	for (i=0;i<4;i++)
     266:	8f ef       	ldi	r24, 0xFF	; 255
     268:	c8 1a       	sub	r12, r24
     26a:	d8 0a       	sbc	r13, r24
     26c:	e8 0a       	sbc	r14, r24
     26e:	f8 0a       	sbc	r15, r24
     270:	84 e0       	ldi	r24, 0x04	; 4
     272:	c8 16       	cp	r12, r24
     274:	d1 04       	cpc	r13, r1
     276:	e1 04       	cpc	r14, r1
     278:	f1 04       	cpc	r15, r1
     27a:	08 f4       	brcc	.+2      	; 0x27e <GET_CHARACTER+0x1c6>
     27c:	3c cf       	rjmp	.-392    	; 0xf6 <GET_CHARACTER+0x3e>
				}
			}
		}
		
	}
	return 'N'; // return null 
     27e:	8e e4       	ldi	r24, 0x4E	; 78
     280:	1f c0       	rjmp	.+62     	; 0x2c0 <GET_CHARACTER+0x208>
				{
					case 0:
					{
						if (j==0)
						{
							return '7';
     282:	87 e3       	ldi	r24, 0x37	; 55
     284:	1d c0       	rjmp	.+58     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==1)
						{
							return '4';
     286:	84 e3       	ldi	r24, 0x34	; 52
     288:	1b c0       	rjmp	.+54     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==2)
						{
							return '1';
     28a:	81 e3       	ldi	r24, 0x31	; 49
     28c:	19 c0       	rjmp	.+50     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==3)
						{
							return 'C';
     28e:	83 e4       	ldi	r24, 0x43	; 67
     290:	17 c0       	rjmp	.+46     	; 0x2c0 <GET_CHARACTER+0x208>
					}
					case 1:
					{
						if (j==0)
						{
							return '8';
     292:	88 e3       	ldi	r24, 0x38	; 56
     294:	15 c0       	rjmp	.+42     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==1)
						{
							return '5';
     296:	85 e3       	ldi	r24, 0x35	; 53
     298:	13 c0       	rjmp	.+38     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==2)
						{
							return '2';
     29a:	82 e3       	ldi	r24, 0x32	; 50
     29c:	11 c0       	rjmp	.+34     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==3)
						{
							return '0';
     29e:	80 e3       	ldi	r24, 0x30	; 48
     2a0:	0f c0       	rjmp	.+30     	; 0x2c0 <GET_CHARACTER+0x208>
					}
					case 2:
					{
						if (j==0)
						{
							return '9';
     2a2:	89 e3       	ldi	r24, 0x39	; 57
     2a4:	0d c0       	rjmp	.+26     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==1)
						{
							return '6';
     2a6:	86 e3       	ldi	r24, 0x36	; 54
     2a8:	0b c0       	rjmp	.+22     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==2)
						{
							return '3';
     2aa:	83 e3       	ldi	r24, 0x33	; 51
     2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==3)
						{
							return '=';
     2ae:	8d e3       	ldi	r24, 0x3D	; 61
     2b0:	07 c0       	rjmp	.+14     	; 0x2c0 <GET_CHARACTER+0x208>
					}
					case 3:
					{
						if (j==0)
						{
							return '/';
     2b2:	8f e2       	ldi	r24, 0x2F	; 47
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==1)
						{
							return '*';
     2b6:	8a e2       	ldi	r24, 0x2A	; 42
     2b8:	03 c0       	rjmp	.+6      	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==2)
						{
							return '-';
     2ba:	8d e2       	ldi	r24, 0x2D	; 45
     2bc:	01 c0       	rjmp	.+2      	; 0x2c0 <GET_CHARACTER+0x208>
						}
						else if (j==3)
						{
							return '+';
     2be:	8b e2       	ldi	r24, 0x2B	; 43
			}
		}
		
	}
	return 'N'; // return null 
}
     2c0:	ff 90       	pop	r15
     2c2:	ef 90       	pop	r14
     2c4:	df 90       	pop	r13
     2c6:	cf 90       	pop	r12
     2c8:	08 95       	ret

000002ca <LCD_lcd_kick>:
{
	char str[7];
	sprintf(str,"%d",number);
	LCD_WRITE_STRING(str);
	
}
     2ca:	88 b3       	in	r24, 0x18	; 24
     2cc:	8e 7f       	andi	r24, 0xFE	; 254
     2ce:	88 bb       	out	0x18, r24	; 24
     2d0:	83 ed       	ldi	r24, 0xD3	; 211
     2d2:	90 e3       	ldi	r25, 0x30	; 48
     2d4:	01 97       	sbiw	r24, 0x01	; 1
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_lcd_kick+0xa>
     2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_lcd_kick+0x10>
     2da:	00 00       	nop
     2dc:	88 b3       	in	r24, 0x18	; 24
     2de:	81 60       	ori	r24, 0x01	; 1
     2e0:	88 bb       	out	0x18, r24	; 24
     2e2:	08 95       	ret

000002e4 <LCD_check_lcd_isbusy>:
     2e4:	8a b3       	in	r24, 0x1a	; 26
     2e6:	1a ba       	out	0x1a, r1	; 26
     2e8:	88 b3       	in	r24, 0x18	; 24
     2ea:	82 60       	ori	r24, 0x02	; 2
     2ec:	88 bb       	out	0x18, r24	; 24
     2ee:	88 b3       	in	r24, 0x18	; 24
     2f0:	8b 7f       	andi	r24, 0xFB	; 251
     2f2:	88 bb       	out	0x18, r24	; 24
     2f4:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_lcd_kick>
     2f8:	8f ef       	ldi	r24, 0xFF	; 255
     2fa:	8a bb       	out	0x1a, r24	; 26
     2fc:	88 b3       	in	r24, 0x18	; 24
     2fe:	8d 7f       	andi	r24, 0xFD	; 253
     300:	88 bb       	out	0x18, r24	; 24
     302:	08 95       	ret

00000304 <LCD_WRITE_COMMAND>:
     304:	cf 93       	push	r28
     306:	c8 2f       	mov	r28, r24
     308:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_check_lcd_isbusy>
     30c:	cb bb       	out	0x1b, r28	; 27
     30e:	88 b3       	in	r24, 0x18	; 24
     310:	8d 7f       	andi	r24, 0xFD	; 253
     312:	88 bb       	out	0x18, r24	; 24
     314:	88 b3       	in	r24, 0x18	; 24
     316:	8b 7f       	andi	r24, 0xFB	; 251
     318:	88 bb       	out	0x18, r24	; 24
     31a:	89 ef       	ldi	r24, 0xF9	; 249
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	01 97       	sbiw	r24, 0x01	; 1
     320:	f1 f7       	brne	.-4      	; 0x31e <LCD_WRITE_COMMAND+0x1a>
     322:	00 c0       	rjmp	.+0      	; 0x324 <LCD_WRITE_COMMAND+0x20>
     324:	00 00       	nop
     326:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_lcd_kick>
     32a:	cf 91       	pop	r28
     32c:	08 95       	ret

0000032e <LCD_WRITE_CHAR>:
     32e:	cf 93       	push	r28
     330:	c8 2f       	mov	r28, r24
     332:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_check_lcd_isbusy>
     336:	cb bb       	out	0x1b, r28	; 27
     338:	88 b3       	in	r24, 0x18	; 24
     33a:	8d 7f       	andi	r24, 0xFD	; 253
     33c:	88 bb       	out	0x18, r24	; 24
     33e:	88 b3       	in	r24, 0x18	; 24
     340:	84 60       	ori	r24, 0x04	; 4
     342:	88 bb       	out	0x18, r24	; 24
     344:	89 ef       	ldi	r24, 0xF9	; 249
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	01 97       	sbiw	r24, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <LCD_WRITE_CHAR+0x1a>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <LCD_WRITE_CHAR+0x20>
     34e:	00 00       	nop
     350:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_lcd_kick>
     354:	cf 91       	pop	r28
     356:	08 95       	ret

00000358 <LCD_clear_screen>:
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     35e:	08 95       	ret

00000360 <LCD_INIT>:
     360:	87 e8       	ldi	r24, 0x87	; 135
     362:	93 e1       	ldi	r25, 0x13	; 19
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	f1 f7       	brne	.-4      	; 0x364 <LCD_INIT+0x4>
     368:	00 c0       	rjmp	.+0      	; 0x36a <LCD_INIT+0xa>
     36a:	00 00       	nop
     36c:	0e 94 72 01 	call	0x2e4	; 0x2e4 <LCD_check_lcd_isbusy>
     370:	87 b3       	in	r24, 0x17	; 23
     372:	81 60       	ori	r24, 0x01	; 1
     374:	87 bb       	out	0x17, r24	; 23
     376:	87 b3       	in	r24, 0x17	; 23
     378:	82 60       	ori	r24, 0x02	; 2
     37a:	87 bb       	out	0x17, r24	; 23
     37c:	87 b3       	in	r24, 0x17	; 23
     37e:	84 60       	ori	r24, 0x04	; 4
     380:	87 bb       	out	0x17, r24	; 23
     382:	88 b3       	in	r24, 0x18	; 24
     384:	8e 7f       	andi	r24, 0xFE	; 254
     386:	88 bb       	out	0x18, r24	; 24
     388:	88 b3       	in	r24, 0x18	; 24
     38a:	8b 7f       	andi	r24, 0xFB	; 251
     38c:	88 bb       	out	0x18, r24	; 24
     38e:	88 b3       	in	r24, 0x18	; 24
     390:	8d 7f       	andi	r24, 0xFD	; 253
     392:	88 bb       	out	0x18, r24	; 24
     394:	8f ef       	ldi	r24, 0xFF	; 255
     396:	8a bb       	out	0x1a, r24	; 26
     398:	85 ea       	ldi	r24, 0xA5	; 165
     39a:	9e e0       	ldi	r25, 0x0E	; 14
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	f1 f7       	brne	.-4      	; 0x39c <LCD_INIT+0x3c>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <LCD_INIT+0x42>
     3a2:	00 00       	nop
     3a4:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_clear_screen>
     3a8:	88 e3       	ldi	r24, 0x38	; 56
     3aa:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3ae:	86 e0       	ldi	r24, 0x06	; 6
     3b0:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3b4:	80 e8       	ldi	r24, 0x80	; 128
     3b6:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3ba:	8f e0       	ldi	r24, 0x0F	; 15
     3bc:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3c0:	08 95       	ret

000003c2 <LCD_GOTO_XY>:
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	c8 2f       	mov	r28, r24
     3c8:	d6 2f       	mov	r29, r22
     3ca:	81 30       	cpi	r24, 0x01	; 1
     3cc:	31 f4       	brne	.+12     	; 0x3da <LCD_GOTO_XY+0x18>
     3ce:	60 31       	cpi	r22, 0x10	; 16
     3d0:	20 f4       	brcc	.+8      	; 0x3da <LCD_GOTO_XY+0x18>
     3d2:	80 e8       	ldi	r24, 0x80	; 128
     3d4:	86 0f       	add	r24, r22
     3d6:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3da:	c2 30       	cpi	r28, 0x02	; 2
     3dc:	31 f4       	brne	.+12     	; 0x3ea <LCD_GOTO_XY+0x28>
     3de:	d0 31       	cpi	r29, 0x10	; 16
     3e0:	20 f4       	brcc	.+8      	; 0x3ea <LCD_GOTO_XY+0x28>
     3e2:	80 ec       	ldi	r24, 0xC0	; 192
     3e4:	8d 0f       	add	r24, r29
     3e6:	0e 94 82 01 	call	0x304	; 0x304 <LCD_WRITE_COMMAND>
     3ea:	df 91       	pop	r29
     3ec:	cf 91       	pop	r28
     3ee:	08 95       	ret

000003f0 <LCD_WRITE_STRING>:
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	ec 01       	movw	r28, r24
     3fe:	c1 2c       	mov	r12, r1
     400:	d1 2c       	mov	r13, r1
     402:	76 01       	movw	r14, r12
     404:	22 c0       	rjmp	.+68     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     406:	21 96       	adiw	r28, 0x01	; 1
     408:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
     40c:	8f ef       	ldi	r24, 0xFF	; 255
     40e:	c8 1a       	sub	r12, r24
     410:	d8 0a       	sbc	r13, r24
     412:	e8 0a       	sbc	r14, r24
     414:	f8 0a       	sbc	r15, r24
     416:	80 e1       	ldi	r24, 0x10	; 16
     418:	c8 16       	cp	r12, r24
     41a:	d1 04       	cpc	r13, r1
     41c:	e1 04       	cpc	r14, r1
     41e:	f1 04       	cpc	r15, r1
     420:	29 f4       	brne	.+10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_GOTO_XY>
     42a:	0f c0       	rjmp	.+30     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     42c:	80 e2       	ldi	r24, 0x20	; 32
     42e:	c8 16       	cp	r12, r24
     430:	d1 04       	cpc	r13, r1
     432:	e1 04       	cpc	r14, r1
     434:	f1 04       	cpc	r15, r1
     436:	49 f4       	brne	.+18     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     438:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_clear_screen>
     43c:	60 e0       	ldi	r22, 0x00	; 0
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_GOTO_XY>
     444:	c1 2c       	mov	r12, r1
     446:	d1 2c       	mov	r13, r1
     448:	76 01       	movw	r14, r12
     44a:	88 81       	ld	r24, Y
     44c:	81 11       	cpse	r24, r1
     44e:	db cf       	rjmp	.-74     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     450:	df 91       	pop	r29
     452:	cf 91       	pop	r28
     454:	ff 90       	pop	r15
     456:	ef 90       	pop	r14
     458:	df 90       	pop	r13
     45a:	cf 90       	pop	r12
     45c:	08 95       	ret

0000045e <LCD_DISPLAY_REAL_NUMBER>:
void LCD_DISPLAY_REAL_NUMBER(double number)
{
     45e:	8f 92       	push	r8
     460:	9f 92       	push	r9
     462:	af 92       	push	r10
     464:	bf 92       	push	r11
     466:	cf 92       	push	r12
     468:	df 92       	push	r13
     46a:	ef 92       	push	r14
     46c:	ff 92       	push	r15
     46e:	0f 93       	push	r16
     470:	1f 93       	push	r17
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
     47a:	60 97       	sbiw	r28, 0x10	; 16
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	f8 94       	cli
     480:	de bf       	out	0x3e, r29	; 62
     482:	0f be       	out	0x3f, r0	; 63
     484:	cd bf       	out	0x3d, r28	; 61
     486:	6b 01       	movw	r12, r22
     488:	7c 01       	movw	r14, r24
	char str[16];
	char *tmpsign=(number<0)? "-" : "";
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	a9 01       	movw	r20, r18
     490:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__cmpsf2>
     494:	88 23       	and	r24, r24
     496:	1c f4       	brge	.+6      	; 0x49e <LCD_DISPLAY_REAL_NUMBER+0x40>
     498:	03 e8       	ldi	r16, 0x83	; 131
     49a:	10 e0       	ldi	r17, 0x00	; 0
     49c:	02 c0       	rjmp	.+4      	; 0x4a2 <LCD_DISPLAY_REAL_NUMBER+0x44>
     49e:	04 e8       	ldi	r16, 0x84	; 132
     4a0:	10 e0       	ldi	r17, 0x00	; 0
	float tmpval=(number<0) ? -number : number;
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	a9 01       	movw	r20, r18
     4a8:	c7 01       	movw	r24, r14
     4aa:	b6 01       	movw	r22, r12
     4ac:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__cmpsf2>
     4b0:	88 23       	and	r24, r24
     4b2:	24 f4       	brge	.+8      	; 0x4bc <LCD_DISPLAY_REAL_NUMBER+0x5e>
     4b4:	f7 fa       	bst	r15, 7
     4b6:	f0 94       	com	r15
     4b8:	f7 f8       	bld	r15, 7
     4ba:	f0 94       	com	r15
	uint32_t tmpint1=tmpval;
     4bc:	c7 01       	movw	r24, r14
     4be:	b6 01       	movw	r22, r12
     4c0:	0e 94 03 04 	call	0x806	; 0x806 <__fixunssfsi>
     4c4:	b6 2e       	mov	r11, r22
     4c6:	a7 2e       	mov	r10, r23
     4c8:	98 2e       	mov	r9, r24
     4ca:	89 2e       	mov	r8, r25
	float tmpfrac=tmpval-tmpint1;
     4cc:	0e 94 32 04 	call	0x864	; 0x864 <__floatunsisf>
     4d0:	9b 01       	movw	r18, r22
     4d2:	ac 01       	movw	r20, r24
     4d4:	c7 01       	movw	r24, r14
     4d6:	b6 01       	movw	r22, r12
     4d8:	0e 94 91 03 	call	0x722	; 0x722 <__subsf3>
	uint32_t tmpint2=tmpfrac*10000;
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e4       	ldi	r19, 0x40	; 64
     4e0:	4c e1       	ldi	r20, 0x1C	; 28
     4e2:	56 e4       	ldi	r21, 0x46	; 70
     4e4:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <__mulsf3>
     4e8:	0e 94 03 04 	call	0x806	; 0x806 <__fixunssfsi>
	sprintf(str,"%s%d.%04d",tmpsign,tmpint1,tmpint2);
     4ec:	9f 93       	push	r25
     4ee:	8f 93       	push	r24
     4f0:	7f 93       	push	r23
     4f2:	6f 93       	push	r22
     4f4:	8f 92       	push	r8
     4f6:	9f 92       	push	r9
     4f8:	af 92       	push	r10
     4fa:	bf 92       	push	r11
     4fc:	1f 93       	push	r17
     4fe:	0f 93       	push	r16
     500:	85 e8       	ldi	r24, 0x85	; 133
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	9f 93       	push	r25
     506:	8f 93       	push	r24
     508:	8e 01       	movw	r16, r28
     50a:	0f 5f       	subi	r16, 0xFF	; 255
     50c:	1f 4f       	sbci	r17, 0xFF	; 255
     50e:	1f 93       	push	r17
     510:	0f 93       	push	r16
     512:	0e 94 79 05 	call	0xaf2	; 0xaf2 <sprintf>
	LCD_WRITE_STRING(str);
     516:	c8 01       	movw	r24, r16
     518:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WRITE_STRING>
     51c:	0f b6       	in	r0, 0x3f	; 63
     51e:	f8 94       	cli
     520:	de bf       	out	0x3e, r29	; 62
     522:	0f be       	out	0x3f, r0	; 63
     524:	cd bf       	out	0x3d, r28	; 61
     526:	60 96       	adiw	r28, 0x10	; 16
     528:	0f b6       	in	r0, 0x3f	; 63
     52a:	f8 94       	cli
     52c:	de bf       	out	0x3e, r29	; 62
     52e:	0f be       	out	0x3f, r0	; 63
     530:	cd bf       	out	0x3d, r28	; 61
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	1f 91       	pop	r17
     538:	0f 91       	pop	r16
     53a:	ff 90       	pop	r15
     53c:	ef 90       	pop	r14
     53e:	df 90       	pop	r13
     540:	cf 90       	pop	r12
     542:	bf 90       	pop	r11
     544:	af 90       	pop	r10
     546:	9f 90       	pop	r9
     548:	8f 90       	pop	r8
     54a:	08 95       	ret

0000054c <main>:
#include <avr/io.h>
#include "LCD_driver/LCD.h"
#include "Kaypad_driver/Kaypad.h"
int main(void)
{
	LCD_INIT();
     54c:	0e 94 b0 01 	call	0x360	; 0x360 <LCD_INIT>
	KAYPAD_INIT();
     550:	0e 94 41 00 	call	0x82	; 0x82 <KAYPAD_INIT>
	char Pressed_Kay;
	int flag=0;
	unsigned short number,counter=0;
     554:	00 e0       	ldi	r16, 0x00	; 0
     556:	10 e0       	ldi	r17, 0x00	; 0
	char Operation;
	double calc;

	while (1)
	{
		Pressed_Kay=GET_CHARACTER();
     558:	0e 94 5c 00 	call	0xb8	; 0xb8 <GET_CHARACTER>
     55c:	c8 2f       	mov	r28, r24

		if (Pressed_Kay >= '0' && Pressed_Kay <='9')
     55e:	80 ed       	ldi	r24, 0xD0	; 208
     560:	8c 0f       	add	r24, r28
     562:	8a 30       	cpi	r24, 0x0A	; 10
     564:	08 f0       	brcs	.+2      	; 0x568 <main+0x1c>
     566:	4d c0       	rjmp	.+154    	; 0x602 <main+0xb6>
		{
			LCD_WRITE_CHAR(Pressed_Kay);
     568:	8c 2f       	mov	r24, r28
     56a:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			number = Pressed_Kay - '0';
     56e:	8c 2f       	mov	r24, r28
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	c0 97       	sbiw	r24, 0x30	; 48
			counter++;
     574:	0f 5f       	subi	r16, 0xFF	; 255
     576:	1f 4f       	sbci	r17, 0xFF	; 255
			switch(counter)
     578:	03 30       	cpi	r16, 0x03	; 3
     57a:	11 05       	cpc	r17, r1
     57c:	e9 f0       	breq	.+58     	; 0x5b8 <main+0x6c>
     57e:	38 f4       	brcc	.+14     	; 0x58e <main+0x42>
     580:	01 30       	cpi	r16, 0x01	; 1
     582:	11 05       	cpc	r17, r1
     584:	e9 f1       	breq	.+122    	; 0x600 <main+0xb4>
     586:	02 30       	cpi	r16, 0x02	; 2
     588:	11 05       	cpc	r17, r1
     58a:	41 f0       	breq	.+16     	; 0x59c <main+0x50>
     58c:	3a c0       	rjmp	.+116    	; 0x602 <main+0xb6>
     58e:	04 30       	cpi	r16, 0x04	; 4
     590:	11 05       	cpc	r17, r1
     592:	e1 f0       	breq	.+56     	; 0x5cc <main+0x80>
     594:	05 30       	cpi	r16, 0x05	; 5
     596:	11 05       	cpc	r17, r1
     598:	31 f1       	breq	.+76     	; 0x5e6 <main+0x9a>
     59a:	33 c0       	rjmp	.+102    	; 0x602 <main+0xb6>
			{
			case 1 :
				temp1= number;
				break;
			case 2:
				temp1=temp1*10 + number;
     59c:	97 01       	movw	r18, r14
     59e:	22 0f       	add	r18, r18
     5a0:	33 1f       	adc	r19, r19
     5a2:	ee 0c       	add	r14, r14
     5a4:	ff 1c       	adc	r15, r15
     5a6:	ee 0c       	add	r14, r14
     5a8:	ff 1c       	adc	r15, r15
     5aa:	ee 0c       	add	r14, r14
     5ac:	ff 1c       	adc	r15, r15
     5ae:	e2 0e       	add	r14, r18
     5b0:	f3 1e       	adc	r15, r19
     5b2:	e8 0e       	add	r14, r24
     5b4:	f9 1e       	adc	r15, r25
				break;
     5b6:	25 c0       	rjmp	.+74     	; 0x602 <main+0xb6>
			case 3 :
				temp1=temp1*100+number;
     5b8:	44 e6       	ldi	r20, 0x64	; 100
     5ba:	4e 9d       	mul	r20, r14
     5bc:	90 01       	movw	r18, r0
     5be:	4f 9d       	mul	r20, r15
     5c0:	30 0d       	add	r19, r0
     5c2:	11 24       	eor	r1, r1
     5c4:	79 01       	movw	r14, r18
     5c6:	e8 0e       	add	r14, r24
     5c8:	f9 1e       	adc	r15, r25
				break;
     5ca:	1b c0       	rjmp	.+54     	; 0x602 <main+0xb6>
			case 4 :
				temp1=temp1*1000+number;
     5cc:	48 ee       	ldi	r20, 0xE8	; 232
     5ce:	53 e0       	ldi	r21, 0x03	; 3
     5d0:	e4 9e       	mul	r14, r20
     5d2:	90 01       	movw	r18, r0
     5d4:	e5 9e       	mul	r14, r21
     5d6:	30 0d       	add	r19, r0
     5d8:	f4 9e       	mul	r15, r20
     5da:	30 0d       	add	r19, r0
     5dc:	11 24       	eor	r1, r1
     5de:	79 01       	movw	r14, r18
     5e0:	e8 0e       	add	r14, r24
     5e2:	f9 1e       	adc	r15, r25
				break;
     5e4:	0e c0       	rjmp	.+28     	; 0x602 <main+0xb6>
			case 5 :
				temp1=temp1*10000+number;
     5e6:	40 e1       	ldi	r20, 0x10	; 16
     5e8:	57 e2       	ldi	r21, 0x27	; 39
     5ea:	e4 9e       	mul	r14, r20
     5ec:	90 01       	movw	r18, r0
     5ee:	e5 9e       	mul	r14, r21
     5f0:	30 0d       	add	r19, r0
     5f2:	f4 9e       	mul	r15, r20
     5f4:	30 0d       	add	r19, r0
     5f6:	11 24       	eor	r1, r1
     5f8:	79 01       	movw	r14, r18
     5fa:	e8 0e       	add	r14, r24
     5fc:	f9 1e       	adc	r15, r25
				break;
     5fe:	01 c0       	rjmp	.+2      	; 0x602 <main+0xb6>
			number = Pressed_Kay - '0';
			counter++;
			switch(counter)
			{
			case 1 :
				temp1= number;
     600:	7c 01       	movw	r14, r24
				temp1=temp1*10000+number;
				break;
			}
		}

		switch(Pressed_Kay)
     602:	cd 32       	cpi	r28, 0x2D	; 45
     604:	f9 f0       	breq	.+62     	; 0x644 <main+0xf8>
     606:	28 f4       	brcc	.+10     	; 0x612 <main+0xc6>
     608:	ca 32       	cpi	r28, 0x2A	; 42
     60a:	61 f0       	breq	.+24     	; 0x624 <main+0xd8>
     60c:	cb 32       	cpi	r28, 0x2B	; 43
     60e:	91 f0       	breq	.+36     	; 0x634 <main+0xe8>
     610:	a3 cf       	rjmp	.-186    	; 0x558 <main+0xc>
     612:	cd 33       	cpi	r28, 0x3D	; 61
     614:	39 f1       	breq	.+78     	; 0x664 <main+0x118>
     616:	c3 34       	cpi	r28, 0x43	; 67
     618:	09 f4       	brne	.+2      	; 0x61c <main+0xd0>
     61a:	7e c0       	rjmp	.+252    	; 0x718 <main+0x1cc>
     61c:	cf 32       	cpi	r28, 0x2F	; 47
     61e:	09 f0       	breq	.+2      	; 0x622 <main+0xd6>
     620:	9b cf       	rjmp	.-202    	; 0x558 <main+0xc>
     622:	18 c0       	rjmp	.+48     	; 0x654 <main+0x108>
		{
		case '*':
			LCD_WRITE_CHAR(Pressed_Kay);
     624:	8c 2f       	mov	r24, r28
     626:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			counter=0;
			temp2 =temp1;
			Operation = Pressed_Kay;
     62a:	dc 2f       	mov	r29, r28
		switch(Pressed_Kay)
		{
		case '*':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
			temp2 =temp1;
     62c:	67 01       	movw	r12, r14

		switch(Pressed_Kay)
		{
		case '*':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
     62e:	00 e0       	ldi	r16, 0x00	; 0
     630:	10 e0       	ldi	r17, 0x00	; 0
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
     632:	92 cf       	rjmp	.-220    	; 0x558 <main+0xc>
		case '+':
			LCD_WRITE_CHAR(Pressed_Kay);
     634:	8c 2f       	mov	r24, r28
     636:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			counter=0;
			temp2 =temp1;
			Operation = Pressed_Kay;
     63a:	dc 2f       	mov	r29, r28
			Operation = Pressed_Kay;
			break;
		case '+':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
			temp2 =temp1;
     63c:	67 01       	movw	r12, r14
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
		case '+':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
     63e:	00 e0       	ldi	r16, 0x00	; 0
     640:	10 e0       	ldi	r17, 0x00	; 0
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
     642:	8a cf       	rjmp	.-236    	; 0x558 <main+0xc>
		case '-':
			LCD_WRITE_CHAR(Pressed_Kay);
     644:	8c 2f       	mov	r24, r28
     646:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			counter=0;
			temp2 =temp1;
			Operation = Pressed_Kay;
     64a:	dc 2f       	mov	r29, r28
			Operation = Pressed_Kay;
			break;
		case '-':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
			temp2 =temp1;
     64c:	67 01       	movw	r12, r14
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
		case '-':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
     64e:	00 e0       	ldi	r16, 0x00	; 0
     650:	10 e0       	ldi	r17, 0x00	; 0
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
     652:	82 cf       	rjmp	.-252    	; 0x558 <main+0xc>
		case '/':
			LCD_WRITE_CHAR(Pressed_Kay);
     654:	8c 2f       	mov	r24, r28
     656:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			counter=0;
			temp2 =temp1;
			Operation = Pressed_Kay;
     65a:	dc 2f       	mov	r29, r28
			Operation = Pressed_Kay;
			break;
		case '/':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
			temp2 =temp1;
     65c:	67 01       	movw	r12, r14
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
		case '/':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter=0;
     65e:	00 e0       	ldi	r16, 0x00	; 0
     660:	10 e0       	ldi	r17, 0x00	; 0
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
     662:	7a cf       	rjmp	.-268    	; 0x558 <main+0xc>
		case '=':
			LCD_WRITE_CHAR(Pressed_Kay);
     664:	8c 2f       	mov	r24, r28
     666:	0e 94 97 01 	call	0x32e	; 0x32e <LCD_WRITE_CHAR>
			counter = 0;
			if (Operation=='*')	calc=temp1*temp2;
     66a:	da 32       	cpi	r29, 0x2A	; 42
     66c:	81 f4       	brne	.+32     	; 0x68e <main+0x142>
     66e:	ec 9c       	mul	r14, r12
     670:	b0 01       	movw	r22, r0
     672:	ed 9c       	mul	r14, r13
     674:	70 0d       	add	r23, r0
     676:	fc 9c       	mul	r15, r12
     678:	70 0d       	add	r23, r0
     67a:	11 24       	eor	r1, r1
     67c:	07 2e       	mov	r0, r23
     67e:	00 0c       	add	r0, r0
     680:	88 0b       	sbc	r24, r24
     682:	99 0b       	sbc	r25, r25
     684:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
     688:	4b 01       	movw	r8, r22
     68a:	5c 01       	movw	r10, r24
     68c:	2a c0       	rjmp	.+84     	; 0x6e2 <main+0x196>
			else if (Operation == '+') calc=temp1+temp2;
     68e:	db 32       	cpi	r29, 0x2B	; 43
     690:	61 f4       	brne	.+24     	; 0x6aa <main+0x15e>
     692:	b7 01       	movw	r22, r14
     694:	6c 0d       	add	r22, r12
     696:	7d 1d       	adc	r23, r13
     698:	07 2e       	mov	r0, r23
     69a:	00 0c       	add	r0, r0
     69c:	88 0b       	sbc	r24, r24
     69e:	99 0b       	sbc	r25, r25
     6a0:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
     6a4:	4b 01       	movw	r8, r22
     6a6:	5c 01       	movw	r10, r24
     6a8:	1c c0       	rjmp	.+56     	; 0x6e2 <main+0x196>
			else if (Operation == '-') calc = temp2-temp1;
     6aa:	dd 32       	cpi	r29, 0x2D	; 45
     6ac:	61 f4       	brne	.+24     	; 0x6c6 <main+0x17a>
     6ae:	b6 01       	movw	r22, r12
     6b0:	6e 19       	sub	r22, r14
     6b2:	7f 09       	sbc	r23, r15
     6b4:	07 2e       	mov	r0, r23
     6b6:	00 0c       	add	r0, r0
     6b8:	88 0b       	sbc	r24, r24
     6ba:	99 0b       	sbc	r25, r25
     6bc:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
     6c0:	4b 01       	movw	r8, r22
     6c2:	5c 01       	movw	r10, r24
     6c4:	0e c0       	rjmp	.+28     	; 0x6e2 <main+0x196>
			else if (Operation == '/') calc = temp2 / temp1;
     6c6:	df 32       	cpi	r29, 0x2F	; 47
     6c8:	61 f4       	brne	.+24     	; 0x6e2 <main+0x196>
     6ca:	c6 01       	movw	r24, r12
     6cc:	b7 01       	movw	r22, r14
     6ce:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__divmodhi4>
     6d2:	07 2e       	mov	r0, r23
     6d4:	00 0c       	add	r0, r0
     6d6:	88 0b       	sbc	r24, r24
     6d8:	99 0b       	sbc	r25, r25
     6da:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
     6de:	4b 01       	movw	r8, r22
     6e0:	5c 01       	movw	r10, r24
			if (Operation == '/' && temp1 ==0)
     6e2:	df 32       	cpi	r29, 0x2F	; 47
     6e4:	71 f4       	brne	.+28     	; 0x702 <main+0x1b6>
     6e6:	e1 14       	cp	r14, r1
     6e8:	f1 04       	cpc	r15, r1
     6ea:	59 f4       	brne	.+22     	; 0x702 <main+0x1b6>
			{
				LCD_GOTO_XY(2,0);
     6ec:	60 e0       	ldi	r22, 0x00	; 0
     6ee:	82 e0       	ldi	r24, 0x02	; 2
     6f0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_GOTO_XY>
				LCD_WRITE_STRING("ERROR");
     6f4:	8f e8       	ldi	r24, 0x8F	; 143
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WRITE_STRING>
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
		case '=':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter = 0;
     6fc:	00 e0       	ldi	r16, 0x00	; 0
     6fe:	10 e0       	ldi	r17, 0x00	; 0
			else if (Operation == '-') calc = temp2-temp1;
			else if (Operation == '/') calc = temp2 / temp1;
			if (Operation == '/' && temp1 ==0)
			{
				LCD_GOTO_XY(2,0);
				LCD_WRITE_STRING("ERROR");
     700:	2b cf       	rjmp	.-426    	; 0x558 <main+0xc>
			}
			else
			{
				LCD_GOTO_XY(2,0);
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	82 e0       	ldi	r24, 0x02	; 2
     706:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <LCD_GOTO_XY>
				LCD_DISPLAY_REAL_NUMBER(calc);
     70a:	c5 01       	movw	r24, r10
     70c:	b4 01       	movw	r22, r8
     70e:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_DISPLAY_REAL_NUMBER>
			temp2 =temp1;
			Operation = Pressed_Kay;
			break;
		case '=':
			LCD_WRITE_CHAR(Pressed_Kay);
			counter = 0;
     712:	00 e0       	ldi	r16, 0x00	; 0
     714:	10 e0       	ldi	r17, 0x00	; 0
     716:	20 cf       	rjmp	.-448    	; 0x558 <main+0xc>
				LCD_DISPLAY_REAL_NUMBER(calc);
			}
			break;
		case 'C':
			counter = 0;
			LCD_clear_screen();
     718:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_clear_screen>
				LCD_GOTO_XY(2,0);
				LCD_DISPLAY_REAL_NUMBER(calc);
			}
			break;
		case 'C':
			counter = 0;
     71c:	00 e0       	ldi	r16, 0x00	; 0
     71e:	10 e0       	ldi	r17, 0x00	; 0
			LCD_clear_screen();
			break;
     720:	1b cf       	rjmp	.-458    	; 0x558 <main+0xc>

00000722 <__subsf3>:
     722:	50 58       	subi	r21, 0x80	; 128

00000724 <__addsf3>:
     724:	bb 27       	eor	r27, r27
     726:	aa 27       	eor	r26, r26
     728:	0e 94 a9 03 	call	0x752	; 0x752 <__addsf3x>
     72c:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_round>
     730:	0e 94 9c 04 	call	0x938	; 0x938 <__fp_pscA>
     734:	38 f0       	brcs	.+14     	; 0x744 <__addsf3+0x20>
     736:	0e 94 a3 04 	call	0x946	; 0x946 <__fp_pscB>
     73a:	20 f0       	brcs	.+8      	; 0x744 <__addsf3+0x20>
     73c:	39 f4       	brne	.+14     	; 0x74c <__addsf3+0x28>
     73e:	9f 3f       	cpi	r25, 0xFF	; 255
     740:	19 f4       	brne	.+6      	; 0x748 <__addsf3+0x24>
     742:	26 f4       	brtc	.+8      	; 0x74c <__addsf3+0x28>
     744:	0c 94 99 04 	jmp	0x932	; 0x932 <__fp_nan>
     748:	0e f4       	brtc	.+2      	; 0x74c <__addsf3+0x28>
     74a:	e0 95       	com	r30
     74c:	e7 fb       	bst	r30, 7
     74e:	0c 94 93 04 	jmp	0x926	; 0x926 <__fp_inf>

00000752 <__addsf3x>:
     752:	e9 2f       	mov	r30, r25
     754:	0e 94 bb 04 	call	0x976	; 0x976 <__fp_split3>
     758:	58 f3       	brcs	.-42     	; 0x730 <__addsf3+0xc>
     75a:	ba 17       	cp	r27, r26
     75c:	62 07       	cpc	r22, r18
     75e:	73 07       	cpc	r23, r19
     760:	84 07       	cpc	r24, r20
     762:	95 07       	cpc	r25, r21
     764:	20 f0       	brcs	.+8      	; 0x76e <__addsf3x+0x1c>
     766:	79 f4       	brne	.+30     	; 0x786 <__addsf3x+0x34>
     768:	a6 f5       	brtc	.+104    	; 0x7d2 <__addsf3x+0x80>
     76a:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__fp_zero>
     76e:	0e f4       	brtc	.+2      	; 0x772 <__addsf3x+0x20>
     770:	e0 95       	com	r30
     772:	0b 2e       	mov	r0, r27
     774:	ba 2f       	mov	r27, r26
     776:	a0 2d       	mov	r26, r0
     778:	0b 01       	movw	r0, r22
     77a:	b9 01       	movw	r22, r18
     77c:	90 01       	movw	r18, r0
     77e:	0c 01       	movw	r0, r24
     780:	ca 01       	movw	r24, r20
     782:	a0 01       	movw	r20, r0
     784:	11 24       	eor	r1, r1
     786:	ff 27       	eor	r31, r31
     788:	59 1b       	sub	r21, r25
     78a:	99 f0       	breq	.+38     	; 0x7b2 <__addsf3x+0x60>
     78c:	59 3f       	cpi	r21, 0xF9	; 249
     78e:	50 f4       	brcc	.+20     	; 0x7a4 <__addsf3x+0x52>
     790:	50 3e       	cpi	r21, 0xE0	; 224
     792:	68 f1       	brcs	.+90     	; 0x7ee <__addsf3x+0x9c>
     794:	1a 16       	cp	r1, r26
     796:	f0 40       	sbci	r31, 0x00	; 0
     798:	a2 2f       	mov	r26, r18
     79a:	23 2f       	mov	r18, r19
     79c:	34 2f       	mov	r19, r20
     79e:	44 27       	eor	r20, r20
     7a0:	58 5f       	subi	r21, 0xF8	; 248
     7a2:	f3 cf       	rjmp	.-26     	; 0x78a <__addsf3x+0x38>
     7a4:	46 95       	lsr	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	a7 95       	ror	r26
     7ac:	f0 40       	sbci	r31, 0x00	; 0
     7ae:	53 95       	inc	r21
     7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__addsf3x+0x52>
     7b2:	7e f4       	brtc	.+30     	; 0x7d2 <__addsf3x+0x80>
     7b4:	1f 16       	cp	r1, r31
     7b6:	ba 0b       	sbc	r27, r26
     7b8:	62 0b       	sbc	r22, r18
     7ba:	73 0b       	sbc	r23, r19
     7bc:	84 0b       	sbc	r24, r20
     7be:	ba f0       	brmi	.+46     	; 0x7ee <__addsf3x+0x9c>
     7c0:	91 50       	subi	r25, 0x01	; 1
     7c2:	a1 f0       	breq	.+40     	; 0x7ec <__addsf3x+0x9a>
     7c4:	ff 0f       	add	r31, r31
     7c6:	bb 1f       	adc	r27, r27
     7c8:	66 1f       	adc	r22, r22
     7ca:	77 1f       	adc	r23, r23
     7cc:	88 1f       	adc	r24, r24
     7ce:	c2 f7       	brpl	.-16     	; 0x7c0 <__addsf3x+0x6e>
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__addsf3x+0x9c>
     7d2:	ba 0f       	add	r27, r26
     7d4:	62 1f       	adc	r22, r18
     7d6:	73 1f       	adc	r23, r19
     7d8:	84 1f       	adc	r24, r20
     7da:	48 f4       	brcc	.+18     	; 0x7ee <__addsf3x+0x9c>
     7dc:	87 95       	ror	r24
     7de:	77 95       	ror	r23
     7e0:	67 95       	ror	r22
     7e2:	b7 95       	ror	r27
     7e4:	f7 95       	ror	r31
     7e6:	9e 3f       	cpi	r25, 0xFE	; 254
     7e8:	08 f0       	brcs	.+2      	; 0x7ec <__addsf3x+0x9a>
     7ea:	b0 cf       	rjmp	.-160    	; 0x74c <__addsf3+0x28>
     7ec:	93 95       	inc	r25
     7ee:	88 0f       	add	r24, r24
     7f0:	08 f0       	brcs	.+2      	; 0x7f4 <__addsf3x+0xa2>
     7f2:	99 27       	eor	r25, r25
     7f4:	ee 0f       	add	r30, r30
     7f6:	97 95       	ror	r25
     7f8:	87 95       	ror	r24
     7fa:	08 95       	ret

000007fc <__cmpsf2>:
     7fc:	0e 94 6f 04 	call	0x8de	; 0x8de <__fp_cmp>
     800:	08 f4       	brcc	.+2      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	08 95       	ret

00000806 <__fixunssfsi>:
     806:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_splitA>
     80a:	88 f0       	brcs	.+34     	; 0x82e <__fixunssfsi+0x28>
     80c:	9f 57       	subi	r25, 0x7F	; 127
     80e:	98 f0       	brcs	.+38     	; 0x836 <__fixunssfsi+0x30>
     810:	b9 2f       	mov	r27, r25
     812:	99 27       	eor	r25, r25
     814:	b7 51       	subi	r27, 0x17	; 23
     816:	b0 f0       	brcs	.+44     	; 0x844 <__fixunssfsi+0x3e>
     818:	e1 f0       	breq	.+56     	; 0x852 <__fixunssfsi+0x4c>
     81a:	66 0f       	add	r22, r22
     81c:	77 1f       	adc	r23, r23
     81e:	88 1f       	adc	r24, r24
     820:	99 1f       	adc	r25, r25
     822:	1a f0       	brmi	.+6      	; 0x82a <__fixunssfsi+0x24>
     824:	ba 95       	dec	r27
     826:	c9 f7       	brne	.-14     	; 0x81a <__fixunssfsi+0x14>
     828:	14 c0       	rjmp	.+40     	; 0x852 <__fixunssfsi+0x4c>
     82a:	b1 30       	cpi	r27, 0x01	; 1
     82c:	91 f0       	breq	.+36     	; 0x852 <__fixunssfsi+0x4c>
     82e:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__fp_zero>
     832:	b1 e0       	ldi	r27, 0x01	; 1
     834:	08 95       	ret
     836:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__fp_zero>
     83a:	67 2f       	mov	r22, r23
     83c:	78 2f       	mov	r23, r24
     83e:	88 27       	eor	r24, r24
     840:	b8 5f       	subi	r27, 0xF8	; 248
     842:	39 f0       	breq	.+14     	; 0x852 <__fixunssfsi+0x4c>
     844:	b9 3f       	cpi	r27, 0xF9	; 249
     846:	cc f3       	brlt	.-14     	; 0x83a <__fixunssfsi+0x34>
     848:	86 95       	lsr	r24
     84a:	77 95       	ror	r23
     84c:	67 95       	ror	r22
     84e:	b3 95       	inc	r27
     850:	d9 f7       	brne	.-10     	; 0x848 <__fixunssfsi+0x42>
     852:	3e f4       	brtc	.+14     	; 0x862 <__stack+0x3>
     854:	90 95       	com	r25
     856:	80 95       	com	r24
     858:	70 95       	com	r23
     85a:	61 95       	neg	r22
     85c:	7f 4f       	sbci	r23, 0xFF	; 255
     85e:	8f 4f       	sbci	r24, 0xFF	; 255
     860:	9f 4f       	sbci	r25, 0xFF	; 255
     862:	08 95       	ret

00000864 <__floatunsisf>:
     864:	e8 94       	clt
     866:	09 c0       	rjmp	.+18     	; 0x87a <__floatsisf+0x12>

00000868 <__floatsisf>:
     868:	97 fb       	bst	r25, 7
     86a:	3e f4       	brtc	.+14     	; 0x87a <__floatsisf+0x12>
     86c:	90 95       	com	r25
     86e:	80 95       	com	r24
     870:	70 95       	com	r23
     872:	61 95       	neg	r22
     874:	7f 4f       	sbci	r23, 0xFF	; 255
     876:	8f 4f       	sbci	r24, 0xFF	; 255
     878:	9f 4f       	sbci	r25, 0xFF	; 255
     87a:	99 23       	and	r25, r25
     87c:	a9 f0       	breq	.+42     	; 0x8a8 <__floatsisf+0x40>
     87e:	f9 2f       	mov	r31, r25
     880:	96 e9       	ldi	r25, 0x96	; 150
     882:	bb 27       	eor	r27, r27
     884:	93 95       	inc	r25
     886:	f6 95       	lsr	r31
     888:	87 95       	ror	r24
     88a:	77 95       	ror	r23
     88c:	67 95       	ror	r22
     88e:	b7 95       	ror	r27
     890:	f1 11       	cpse	r31, r1
     892:	f8 cf       	rjmp	.-16     	; 0x884 <__floatsisf+0x1c>
     894:	fa f4       	brpl	.+62     	; 0x8d4 <__floatsisf+0x6c>
     896:	bb 0f       	add	r27, r27
     898:	11 f4       	brne	.+4      	; 0x89e <__floatsisf+0x36>
     89a:	60 ff       	sbrs	r22, 0
     89c:	1b c0       	rjmp	.+54     	; 0x8d4 <__floatsisf+0x6c>
     89e:	6f 5f       	subi	r22, 0xFF	; 255
     8a0:	7f 4f       	sbci	r23, 0xFF	; 255
     8a2:	8f 4f       	sbci	r24, 0xFF	; 255
     8a4:	9f 4f       	sbci	r25, 0xFF	; 255
     8a6:	16 c0       	rjmp	.+44     	; 0x8d4 <__floatsisf+0x6c>
     8a8:	88 23       	and	r24, r24
     8aa:	11 f0       	breq	.+4      	; 0x8b0 <__floatsisf+0x48>
     8ac:	96 e9       	ldi	r25, 0x96	; 150
     8ae:	11 c0       	rjmp	.+34     	; 0x8d2 <__floatsisf+0x6a>
     8b0:	77 23       	and	r23, r23
     8b2:	21 f0       	breq	.+8      	; 0x8bc <__floatsisf+0x54>
     8b4:	9e e8       	ldi	r25, 0x8E	; 142
     8b6:	87 2f       	mov	r24, r23
     8b8:	76 2f       	mov	r23, r22
     8ba:	05 c0       	rjmp	.+10     	; 0x8c6 <__floatsisf+0x5e>
     8bc:	66 23       	and	r22, r22
     8be:	71 f0       	breq	.+28     	; 0x8dc <__floatsisf+0x74>
     8c0:	96 e8       	ldi	r25, 0x86	; 134
     8c2:	86 2f       	mov	r24, r22
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	2a f0       	brmi	.+10     	; 0x8d4 <__floatsisf+0x6c>
     8ca:	9a 95       	dec	r25
     8cc:	66 0f       	add	r22, r22
     8ce:	77 1f       	adc	r23, r23
     8d0:	88 1f       	adc	r24, r24
     8d2:	da f7       	brpl	.-10     	; 0x8ca <__floatsisf+0x62>
     8d4:	88 0f       	add	r24, r24
     8d6:	96 95       	lsr	r25
     8d8:	87 95       	ror	r24
     8da:	97 f9       	bld	r25, 7
     8dc:	08 95       	ret

000008de <__fp_cmp>:
     8de:	99 0f       	add	r25, r25
     8e0:	00 08       	sbc	r0, r0
     8e2:	55 0f       	add	r21, r21
     8e4:	aa 0b       	sbc	r26, r26
     8e6:	e0 e8       	ldi	r30, 0x80	; 128
     8e8:	fe ef       	ldi	r31, 0xFE	; 254
     8ea:	16 16       	cp	r1, r22
     8ec:	17 06       	cpc	r1, r23
     8ee:	e8 07       	cpc	r30, r24
     8f0:	f9 07       	cpc	r31, r25
     8f2:	c0 f0       	brcs	.+48     	; 0x924 <__fp_cmp+0x46>
     8f4:	12 16       	cp	r1, r18
     8f6:	13 06       	cpc	r1, r19
     8f8:	e4 07       	cpc	r30, r20
     8fa:	f5 07       	cpc	r31, r21
     8fc:	98 f0       	brcs	.+38     	; 0x924 <__fp_cmp+0x46>
     8fe:	62 1b       	sub	r22, r18
     900:	73 0b       	sbc	r23, r19
     902:	84 0b       	sbc	r24, r20
     904:	95 0b       	sbc	r25, r21
     906:	39 f4       	brne	.+14     	; 0x916 <__fp_cmp+0x38>
     908:	0a 26       	eor	r0, r26
     90a:	61 f0       	breq	.+24     	; 0x924 <__fp_cmp+0x46>
     90c:	23 2b       	or	r18, r19
     90e:	24 2b       	or	r18, r20
     910:	25 2b       	or	r18, r21
     912:	21 f4       	brne	.+8      	; 0x91c <__fp_cmp+0x3e>
     914:	08 95       	ret
     916:	0a 26       	eor	r0, r26
     918:	09 f4       	brne	.+2      	; 0x91c <__fp_cmp+0x3e>
     91a:	a1 40       	sbci	r26, 0x01	; 1
     91c:	a6 95       	lsr	r26
     91e:	8f ef       	ldi	r24, 0xFF	; 255
     920:	81 1d       	adc	r24, r1
     922:	81 1d       	adc	r24, r1
     924:	08 95       	ret

00000926 <__fp_inf>:
     926:	97 f9       	bld	r25, 7
     928:	9f 67       	ori	r25, 0x7F	; 127
     92a:	80 e8       	ldi	r24, 0x80	; 128
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	60 e0       	ldi	r22, 0x00	; 0
     930:	08 95       	ret

00000932 <__fp_nan>:
     932:	9f ef       	ldi	r25, 0xFF	; 255
     934:	80 ec       	ldi	r24, 0xC0	; 192
     936:	08 95       	ret

00000938 <__fp_pscA>:
     938:	00 24       	eor	r0, r0
     93a:	0a 94       	dec	r0
     93c:	16 16       	cp	r1, r22
     93e:	17 06       	cpc	r1, r23
     940:	18 06       	cpc	r1, r24
     942:	09 06       	cpc	r0, r25
     944:	08 95       	ret

00000946 <__fp_pscB>:
     946:	00 24       	eor	r0, r0
     948:	0a 94       	dec	r0
     94a:	12 16       	cp	r1, r18
     94c:	13 06       	cpc	r1, r19
     94e:	14 06       	cpc	r1, r20
     950:	05 06       	cpc	r0, r21
     952:	08 95       	ret

00000954 <__fp_round>:
     954:	09 2e       	mov	r0, r25
     956:	03 94       	inc	r0
     958:	00 0c       	add	r0, r0
     95a:	11 f4       	brne	.+4      	; 0x960 <__fp_round+0xc>
     95c:	88 23       	and	r24, r24
     95e:	52 f0       	brmi	.+20     	; 0x974 <__fp_round+0x20>
     960:	bb 0f       	add	r27, r27
     962:	40 f4       	brcc	.+16     	; 0x974 <__fp_round+0x20>
     964:	bf 2b       	or	r27, r31
     966:	11 f4       	brne	.+4      	; 0x96c <__fp_round+0x18>
     968:	60 ff       	sbrs	r22, 0
     96a:	04 c0       	rjmp	.+8      	; 0x974 <__fp_round+0x20>
     96c:	6f 5f       	subi	r22, 0xFF	; 255
     96e:	7f 4f       	sbci	r23, 0xFF	; 255
     970:	8f 4f       	sbci	r24, 0xFF	; 255
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	08 95       	ret

00000976 <__fp_split3>:
     976:	57 fd       	sbrc	r21, 7
     978:	90 58       	subi	r25, 0x80	; 128
     97a:	44 0f       	add	r20, r20
     97c:	55 1f       	adc	r21, r21
     97e:	59 f0       	breq	.+22     	; 0x996 <__fp_splitA+0x10>
     980:	5f 3f       	cpi	r21, 0xFF	; 255
     982:	71 f0       	breq	.+28     	; 0x9a0 <__fp_splitA+0x1a>
     984:	47 95       	ror	r20

00000986 <__fp_splitA>:
     986:	88 0f       	add	r24, r24
     988:	97 fb       	bst	r25, 7
     98a:	99 1f       	adc	r25, r25
     98c:	61 f0       	breq	.+24     	; 0x9a6 <__fp_splitA+0x20>
     98e:	9f 3f       	cpi	r25, 0xFF	; 255
     990:	79 f0       	breq	.+30     	; 0x9b0 <__fp_splitA+0x2a>
     992:	87 95       	ror	r24
     994:	08 95       	ret
     996:	12 16       	cp	r1, r18
     998:	13 06       	cpc	r1, r19
     99a:	14 06       	cpc	r1, r20
     99c:	55 1f       	adc	r21, r21
     99e:	f2 cf       	rjmp	.-28     	; 0x984 <__fp_split3+0xe>
     9a0:	46 95       	lsr	r20
     9a2:	f1 df       	rcall	.-30     	; 0x986 <__fp_splitA>
     9a4:	08 c0       	rjmp	.+16     	; 0x9b6 <__fp_splitA+0x30>
     9a6:	16 16       	cp	r1, r22
     9a8:	17 06       	cpc	r1, r23
     9aa:	18 06       	cpc	r1, r24
     9ac:	99 1f       	adc	r25, r25
     9ae:	f1 cf       	rjmp	.-30     	; 0x992 <__fp_splitA+0xc>
     9b0:	86 95       	lsr	r24
     9b2:	71 05       	cpc	r23, r1
     9b4:	61 05       	cpc	r22, r1
     9b6:	08 94       	sec
     9b8:	08 95       	ret

000009ba <__fp_zero>:
     9ba:	e8 94       	clt

000009bc <__fp_szero>:
     9bc:	bb 27       	eor	r27, r27
     9be:	66 27       	eor	r22, r22
     9c0:	77 27       	eor	r23, r23
     9c2:	cb 01       	movw	r24, r22
     9c4:	97 f9       	bld	r25, 7
     9c6:	08 95       	ret

000009c8 <__mulsf3>:
     9c8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__mulsf3x>
     9cc:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_round>
     9d0:	0e 94 9c 04 	call	0x938	; 0x938 <__fp_pscA>
     9d4:	38 f0       	brcs	.+14     	; 0x9e4 <__mulsf3+0x1c>
     9d6:	0e 94 a3 04 	call	0x946	; 0x946 <__fp_pscB>
     9da:	20 f0       	brcs	.+8      	; 0x9e4 <__mulsf3+0x1c>
     9dc:	95 23       	and	r25, r21
     9de:	11 f0       	breq	.+4      	; 0x9e4 <__mulsf3+0x1c>
     9e0:	0c 94 93 04 	jmp	0x926	; 0x926 <__fp_inf>
     9e4:	0c 94 99 04 	jmp	0x932	; 0x932 <__fp_nan>
     9e8:	11 24       	eor	r1, r1
     9ea:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__fp_szero>

000009ee <__mulsf3x>:
     9ee:	0e 94 bb 04 	call	0x976	; 0x976 <__fp_split3>
     9f2:	70 f3       	brcs	.-36     	; 0x9d0 <__mulsf3+0x8>

000009f4 <__mulsf3_pse>:
     9f4:	95 9f       	mul	r25, r21
     9f6:	c1 f3       	breq	.-16     	; 0x9e8 <__mulsf3+0x20>
     9f8:	95 0f       	add	r25, r21
     9fa:	50 e0       	ldi	r21, 0x00	; 0
     9fc:	55 1f       	adc	r21, r21
     9fe:	62 9f       	mul	r22, r18
     a00:	f0 01       	movw	r30, r0
     a02:	72 9f       	mul	r23, r18
     a04:	bb 27       	eor	r27, r27
     a06:	f0 0d       	add	r31, r0
     a08:	b1 1d       	adc	r27, r1
     a0a:	63 9f       	mul	r22, r19
     a0c:	aa 27       	eor	r26, r26
     a0e:	f0 0d       	add	r31, r0
     a10:	b1 1d       	adc	r27, r1
     a12:	aa 1f       	adc	r26, r26
     a14:	64 9f       	mul	r22, r20
     a16:	66 27       	eor	r22, r22
     a18:	b0 0d       	add	r27, r0
     a1a:	a1 1d       	adc	r26, r1
     a1c:	66 1f       	adc	r22, r22
     a1e:	82 9f       	mul	r24, r18
     a20:	22 27       	eor	r18, r18
     a22:	b0 0d       	add	r27, r0
     a24:	a1 1d       	adc	r26, r1
     a26:	62 1f       	adc	r22, r18
     a28:	73 9f       	mul	r23, r19
     a2a:	b0 0d       	add	r27, r0
     a2c:	a1 1d       	adc	r26, r1
     a2e:	62 1f       	adc	r22, r18
     a30:	83 9f       	mul	r24, r19
     a32:	a0 0d       	add	r26, r0
     a34:	61 1d       	adc	r22, r1
     a36:	22 1f       	adc	r18, r18
     a38:	74 9f       	mul	r23, r20
     a3a:	33 27       	eor	r19, r19
     a3c:	a0 0d       	add	r26, r0
     a3e:	61 1d       	adc	r22, r1
     a40:	23 1f       	adc	r18, r19
     a42:	84 9f       	mul	r24, r20
     a44:	60 0d       	add	r22, r0
     a46:	21 1d       	adc	r18, r1
     a48:	82 2f       	mov	r24, r18
     a4a:	76 2f       	mov	r23, r22
     a4c:	6a 2f       	mov	r22, r26
     a4e:	11 24       	eor	r1, r1
     a50:	9f 57       	subi	r25, 0x7F	; 127
     a52:	50 40       	sbci	r21, 0x00	; 0
     a54:	9a f0       	brmi	.+38     	; 0xa7c <__mulsf3_pse+0x88>
     a56:	f1 f0       	breq	.+60     	; 0xa94 <__mulsf3_pse+0xa0>
     a58:	88 23       	and	r24, r24
     a5a:	4a f0       	brmi	.+18     	; 0xa6e <__mulsf3_pse+0x7a>
     a5c:	ee 0f       	add	r30, r30
     a5e:	ff 1f       	adc	r31, r31
     a60:	bb 1f       	adc	r27, r27
     a62:	66 1f       	adc	r22, r22
     a64:	77 1f       	adc	r23, r23
     a66:	88 1f       	adc	r24, r24
     a68:	91 50       	subi	r25, 0x01	; 1
     a6a:	50 40       	sbci	r21, 0x00	; 0
     a6c:	a9 f7       	brne	.-22     	; 0xa58 <__mulsf3_pse+0x64>
     a6e:	9e 3f       	cpi	r25, 0xFE	; 254
     a70:	51 05       	cpc	r21, r1
     a72:	80 f0       	brcs	.+32     	; 0xa94 <__mulsf3_pse+0xa0>
     a74:	0c 94 93 04 	jmp	0x926	; 0x926 <__fp_inf>
     a78:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__fp_szero>
     a7c:	5f 3f       	cpi	r21, 0xFF	; 255
     a7e:	e4 f3       	brlt	.-8      	; 0xa78 <__mulsf3_pse+0x84>
     a80:	98 3e       	cpi	r25, 0xE8	; 232
     a82:	d4 f3       	brlt	.-12     	; 0xa78 <__mulsf3_pse+0x84>
     a84:	86 95       	lsr	r24
     a86:	77 95       	ror	r23
     a88:	67 95       	ror	r22
     a8a:	b7 95       	ror	r27
     a8c:	f7 95       	ror	r31
     a8e:	e7 95       	ror	r30
     a90:	9f 5f       	subi	r25, 0xFF	; 255
     a92:	c1 f7       	brne	.-16     	; 0xa84 <__mulsf3_pse+0x90>
     a94:	fe 2b       	or	r31, r30
     a96:	88 0f       	add	r24, r24
     a98:	91 1d       	adc	r25, r1
     a9a:	96 95       	lsr	r25
     a9c:	87 95       	ror	r24
     a9e:	97 f9       	bld	r25, 7
     aa0:	08 95       	ret

00000aa2 <__divmodhi4>:
     aa2:	97 fb       	bst	r25, 7
     aa4:	07 2e       	mov	r0, r23
     aa6:	16 f4       	brtc	.+4      	; 0xaac <__divmodhi4+0xa>
     aa8:	00 94       	com	r0
     aaa:	07 d0       	rcall	.+14     	; 0xaba <__divmodhi4_neg1>
     aac:	77 fd       	sbrc	r23, 7
     aae:	09 d0       	rcall	.+18     	; 0xac2 <__divmodhi4_neg2>
     ab0:	0e 94 65 05 	call	0xaca	; 0xaca <__udivmodhi4>
     ab4:	07 fc       	sbrc	r0, 7
     ab6:	05 d0       	rcall	.+10     	; 0xac2 <__divmodhi4_neg2>
     ab8:	3e f4       	brtc	.+14     	; 0xac8 <__divmodhi4_exit>

00000aba <__divmodhi4_neg1>:
     aba:	90 95       	com	r25
     abc:	81 95       	neg	r24
     abe:	9f 4f       	sbci	r25, 0xFF	; 255
     ac0:	08 95       	ret

00000ac2 <__divmodhi4_neg2>:
     ac2:	70 95       	com	r23
     ac4:	61 95       	neg	r22
     ac6:	7f 4f       	sbci	r23, 0xFF	; 255

00000ac8 <__divmodhi4_exit>:
     ac8:	08 95       	ret

00000aca <__udivmodhi4>:
     aca:	aa 1b       	sub	r26, r26
     acc:	bb 1b       	sub	r27, r27
     ace:	51 e1       	ldi	r21, 0x11	; 17
     ad0:	07 c0       	rjmp	.+14     	; 0xae0 <__udivmodhi4_ep>

00000ad2 <__udivmodhi4_loop>:
     ad2:	aa 1f       	adc	r26, r26
     ad4:	bb 1f       	adc	r27, r27
     ad6:	a6 17       	cp	r26, r22
     ad8:	b7 07       	cpc	r27, r23
     ada:	10 f0       	brcs	.+4      	; 0xae0 <__udivmodhi4_ep>
     adc:	a6 1b       	sub	r26, r22
     ade:	b7 0b       	sbc	r27, r23

00000ae0 <__udivmodhi4_ep>:
     ae0:	88 1f       	adc	r24, r24
     ae2:	99 1f       	adc	r25, r25
     ae4:	5a 95       	dec	r21
     ae6:	a9 f7       	brne	.-22     	; 0xad2 <__udivmodhi4_loop>
     ae8:	80 95       	com	r24
     aea:	90 95       	com	r25
     aec:	bc 01       	movw	r22, r24
     aee:	cd 01       	movw	r24, r26
     af0:	08 95       	ret

00000af2 <sprintf>:
     af2:	ae e0       	ldi	r26, 0x0E	; 14
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ef e7       	ldi	r30, 0x7F	; 127
     af8:	f5 e0       	ldi	r31, 0x05	; 5
     afa:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__prologue_saves__+0x1c>
     afe:	0d 89       	ldd	r16, Y+21	; 0x15
     b00:	1e 89       	ldd	r17, Y+22	; 0x16
     b02:	86 e0       	ldi	r24, 0x06	; 6
     b04:	8c 83       	std	Y+4, r24	; 0x04
     b06:	1a 83       	std	Y+2, r17	; 0x02
     b08:	09 83       	std	Y+1, r16	; 0x01
     b0a:	8f ef       	ldi	r24, 0xFF	; 255
     b0c:	9f e7       	ldi	r25, 0x7F	; 127
     b0e:	9e 83       	std	Y+6, r25	; 0x06
     b10:	8d 83       	std	Y+5, r24	; 0x05
     b12:	ae 01       	movw	r20, r28
     b14:	47 5e       	subi	r20, 0xE7	; 231
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	6f 89       	ldd	r22, Y+23	; 0x17
     b1a:	78 8d       	ldd	r23, Y+24	; 0x18
     b1c:	ce 01       	movw	r24, r28
     b1e:	01 96       	adiw	r24, 0x01	; 1
     b20:	0e 94 9b 05 	call	0xb36	; 0xb36 <vfprintf>
     b24:	ef 81       	ldd	r30, Y+7	; 0x07
     b26:	f8 85       	ldd	r31, Y+8	; 0x08
     b28:	e0 0f       	add	r30, r16
     b2a:	f1 1f       	adc	r31, r17
     b2c:	10 82       	st	Z, r1
     b2e:	2e 96       	adiw	r28, 0x0e	; 14
     b30:	e4 e0       	ldi	r30, 0x04	; 4
     b32:	0c 94 56 08 	jmp	0x10ac	; 0x10ac <__epilogue_restores__+0x1c>

00000b36 <vfprintf>:
     b36:	ab e0       	ldi	r26, 0x0B	; 11
     b38:	b0 e0       	ldi	r27, 0x00	; 0
     b3a:	e1 ea       	ldi	r30, 0xA1	; 161
     b3c:	f5 e0       	ldi	r31, 0x05	; 5
     b3e:	0c 94 2c 08 	jmp	0x1058	; 0x1058 <__prologue_saves__>
     b42:	6c 01       	movw	r12, r24
     b44:	7b 01       	movw	r14, r22
     b46:	8a 01       	movw	r16, r20
     b48:	fc 01       	movw	r30, r24
     b4a:	17 82       	std	Z+7, r1	; 0x07
     b4c:	16 82       	std	Z+6, r1	; 0x06
     b4e:	83 81       	ldd	r24, Z+3	; 0x03
     b50:	81 ff       	sbrs	r24, 1
     b52:	cc c1       	rjmp	.+920    	; 0xeec <vfprintf+0x3b6>
     b54:	ce 01       	movw	r24, r28
     b56:	01 96       	adiw	r24, 0x01	; 1
     b58:	3c 01       	movw	r6, r24
     b5a:	f6 01       	movw	r30, r12
     b5c:	93 81       	ldd	r25, Z+3	; 0x03
     b5e:	f7 01       	movw	r30, r14
     b60:	93 fd       	sbrc	r25, 3
     b62:	85 91       	lpm	r24, Z+
     b64:	93 ff       	sbrs	r25, 3
     b66:	81 91       	ld	r24, Z+
     b68:	7f 01       	movw	r14, r30
     b6a:	88 23       	and	r24, r24
     b6c:	09 f4       	brne	.+2      	; 0xb70 <vfprintf+0x3a>
     b6e:	ba c1       	rjmp	.+884    	; 0xee4 <vfprintf+0x3ae>
     b70:	85 32       	cpi	r24, 0x25	; 37
     b72:	39 f4       	brne	.+14     	; 0xb82 <vfprintf+0x4c>
     b74:	93 fd       	sbrc	r25, 3
     b76:	85 91       	lpm	r24, Z+
     b78:	93 ff       	sbrs	r25, 3
     b7a:	81 91       	ld	r24, Z+
     b7c:	7f 01       	movw	r14, r30
     b7e:	85 32       	cpi	r24, 0x25	; 37
     b80:	29 f4       	brne	.+10     	; 0xb8c <vfprintf+0x56>
     b82:	b6 01       	movw	r22, r12
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     b8a:	e7 cf       	rjmp	.-50     	; 0xb5a <vfprintf+0x24>
     b8c:	91 2c       	mov	r9, r1
     b8e:	21 2c       	mov	r2, r1
     b90:	31 2c       	mov	r3, r1
     b92:	ff e1       	ldi	r31, 0x1F	; 31
     b94:	f3 15       	cp	r31, r3
     b96:	d8 f0       	brcs	.+54     	; 0xbce <vfprintf+0x98>
     b98:	8b 32       	cpi	r24, 0x2B	; 43
     b9a:	79 f0       	breq	.+30     	; 0xbba <vfprintf+0x84>
     b9c:	38 f4       	brcc	.+14     	; 0xbac <vfprintf+0x76>
     b9e:	80 32       	cpi	r24, 0x20	; 32
     ba0:	79 f0       	breq	.+30     	; 0xbc0 <vfprintf+0x8a>
     ba2:	83 32       	cpi	r24, 0x23	; 35
     ba4:	a1 f4       	brne	.+40     	; 0xbce <vfprintf+0x98>
     ba6:	23 2d       	mov	r18, r3
     ba8:	20 61       	ori	r18, 0x10	; 16
     baa:	1d c0       	rjmp	.+58     	; 0xbe6 <vfprintf+0xb0>
     bac:	8d 32       	cpi	r24, 0x2D	; 45
     bae:	61 f0       	breq	.+24     	; 0xbc8 <vfprintf+0x92>
     bb0:	80 33       	cpi	r24, 0x30	; 48
     bb2:	69 f4       	brne	.+26     	; 0xbce <vfprintf+0x98>
     bb4:	23 2d       	mov	r18, r3
     bb6:	21 60       	ori	r18, 0x01	; 1
     bb8:	16 c0       	rjmp	.+44     	; 0xbe6 <vfprintf+0xb0>
     bba:	83 2d       	mov	r24, r3
     bbc:	82 60       	ori	r24, 0x02	; 2
     bbe:	38 2e       	mov	r3, r24
     bc0:	e3 2d       	mov	r30, r3
     bc2:	e4 60       	ori	r30, 0x04	; 4
     bc4:	3e 2e       	mov	r3, r30
     bc6:	2a c0       	rjmp	.+84     	; 0xc1c <vfprintf+0xe6>
     bc8:	f3 2d       	mov	r31, r3
     bca:	f8 60       	ori	r31, 0x08	; 8
     bcc:	1d c0       	rjmp	.+58     	; 0xc08 <vfprintf+0xd2>
     bce:	37 fc       	sbrc	r3, 7
     bd0:	2d c0       	rjmp	.+90     	; 0xc2c <vfprintf+0xf6>
     bd2:	20 ed       	ldi	r18, 0xD0	; 208
     bd4:	28 0f       	add	r18, r24
     bd6:	2a 30       	cpi	r18, 0x0A	; 10
     bd8:	40 f0       	brcs	.+16     	; 0xbea <vfprintf+0xb4>
     bda:	8e 32       	cpi	r24, 0x2E	; 46
     bdc:	b9 f4       	brne	.+46     	; 0xc0c <vfprintf+0xd6>
     bde:	36 fc       	sbrc	r3, 6
     be0:	81 c1       	rjmp	.+770    	; 0xee4 <vfprintf+0x3ae>
     be2:	23 2d       	mov	r18, r3
     be4:	20 64       	ori	r18, 0x40	; 64
     be6:	32 2e       	mov	r3, r18
     be8:	19 c0       	rjmp	.+50     	; 0xc1c <vfprintf+0xe6>
     bea:	36 fe       	sbrs	r3, 6
     bec:	06 c0       	rjmp	.+12     	; 0xbfa <vfprintf+0xc4>
     bee:	8a e0       	ldi	r24, 0x0A	; 10
     bf0:	98 9e       	mul	r9, r24
     bf2:	20 0d       	add	r18, r0
     bf4:	11 24       	eor	r1, r1
     bf6:	92 2e       	mov	r9, r18
     bf8:	11 c0       	rjmp	.+34     	; 0xc1c <vfprintf+0xe6>
     bfa:	ea e0       	ldi	r30, 0x0A	; 10
     bfc:	2e 9e       	mul	r2, r30
     bfe:	20 0d       	add	r18, r0
     c00:	11 24       	eor	r1, r1
     c02:	22 2e       	mov	r2, r18
     c04:	f3 2d       	mov	r31, r3
     c06:	f0 62       	ori	r31, 0x20	; 32
     c08:	3f 2e       	mov	r3, r31
     c0a:	08 c0       	rjmp	.+16     	; 0xc1c <vfprintf+0xe6>
     c0c:	8c 36       	cpi	r24, 0x6C	; 108
     c0e:	21 f4       	brne	.+8      	; 0xc18 <vfprintf+0xe2>
     c10:	83 2d       	mov	r24, r3
     c12:	80 68       	ori	r24, 0x80	; 128
     c14:	38 2e       	mov	r3, r24
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <vfprintf+0xe6>
     c18:	88 36       	cpi	r24, 0x68	; 104
     c1a:	41 f4       	brne	.+16     	; 0xc2c <vfprintf+0xf6>
     c1c:	f7 01       	movw	r30, r14
     c1e:	93 fd       	sbrc	r25, 3
     c20:	85 91       	lpm	r24, Z+
     c22:	93 ff       	sbrs	r25, 3
     c24:	81 91       	ld	r24, Z+
     c26:	7f 01       	movw	r14, r30
     c28:	81 11       	cpse	r24, r1
     c2a:	b3 cf       	rjmp	.-154    	; 0xb92 <vfprintf+0x5c>
     c2c:	98 2f       	mov	r25, r24
     c2e:	9f 7d       	andi	r25, 0xDF	; 223
     c30:	95 54       	subi	r25, 0x45	; 69
     c32:	93 30       	cpi	r25, 0x03	; 3
     c34:	28 f4       	brcc	.+10     	; 0xc40 <vfprintf+0x10a>
     c36:	0c 5f       	subi	r16, 0xFC	; 252
     c38:	1f 4f       	sbci	r17, 0xFF	; 255
     c3a:	9f e3       	ldi	r25, 0x3F	; 63
     c3c:	99 83       	std	Y+1, r25	; 0x01
     c3e:	0d c0       	rjmp	.+26     	; 0xc5a <vfprintf+0x124>
     c40:	83 36       	cpi	r24, 0x63	; 99
     c42:	31 f0       	breq	.+12     	; 0xc50 <vfprintf+0x11a>
     c44:	83 37       	cpi	r24, 0x73	; 115
     c46:	71 f0       	breq	.+28     	; 0xc64 <vfprintf+0x12e>
     c48:	83 35       	cpi	r24, 0x53	; 83
     c4a:	09 f0       	breq	.+2      	; 0xc4e <vfprintf+0x118>
     c4c:	59 c0       	rjmp	.+178    	; 0xd00 <vfprintf+0x1ca>
     c4e:	21 c0       	rjmp	.+66     	; 0xc92 <vfprintf+0x15c>
     c50:	f8 01       	movw	r30, r16
     c52:	80 81       	ld	r24, Z
     c54:	89 83       	std	Y+1, r24	; 0x01
     c56:	0e 5f       	subi	r16, 0xFE	; 254
     c58:	1f 4f       	sbci	r17, 0xFF	; 255
     c5a:	88 24       	eor	r8, r8
     c5c:	83 94       	inc	r8
     c5e:	91 2c       	mov	r9, r1
     c60:	53 01       	movw	r10, r6
     c62:	13 c0       	rjmp	.+38     	; 0xc8a <vfprintf+0x154>
     c64:	28 01       	movw	r4, r16
     c66:	f2 e0       	ldi	r31, 0x02	; 2
     c68:	4f 0e       	add	r4, r31
     c6a:	51 1c       	adc	r5, r1
     c6c:	f8 01       	movw	r30, r16
     c6e:	a0 80       	ld	r10, Z
     c70:	b1 80       	ldd	r11, Z+1	; 0x01
     c72:	36 fe       	sbrs	r3, 6
     c74:	03 c0       	rjmp	.+6      	; 0xc7c <vfprintf+0x146>
     c76:	69 2d       	mov	r22, r9
     c78:	70 e0       	ldi	r23, 0x00	; 0
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x14a>
     c7c:	6f ef       	ldi	r22, 0xFF	; 255
     c7e:	7f ef       	ldi	r23, 0xFF	; 255
     c80:	c5 01       	movw	r24, r10
     c82:	0e 94 87 07 	call	0xf0e	; 0xf0e <strnlen>
     c86:	4c 01       	movw	r8, r24
     c88:	82 01       	movw	r16, r4
     c8a:	f3 2d       	mov	r31, r3
     c8c:	ff 77       	andi	r31, 0x7F	; 127
     c8e:	3f 2e       	mov	r3, r31
     c90:	16 c0       	rjmp	.+44     	; 0xcbe <vfprintf+0x188>
     c92:	28 01       	movw	r4, r16
     c94:	22 e0       	ldi	r18, 0x02	; 2
     c96:	42 0e       	add	r4, r18
     c98:	51 1c       	adc	r5, r1
     c9a:	f8 01       	movw	r30, r16
     c9c:	a0 80       	ld	r10, Z
     c9e:	b1 80       	ldd	r11, Z+1	; 0x01
     ca0:	36 fe       	sbrs	r3, 6
     ca2:	03 c0       	rjmp	.+6      	; 0xcaa <vfprintf+0x174>
     ca4:	69 2d       	mov	r22, r9
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <vfprintf+0x178>
     caa:	6f ef       	ldi	r22, 0xFF	; 255
     cac:	7f ef       	ldi	r23, 0xFF	; 255
     cae:	c5 01       	movw	r24, r10
     cb0:	0e 94 7c 07 	call	0xef8	; 0xef8 <strnlen_P>
     cb4:	4c 01       	movw	r8, r24
     cb6:	f3 2d       	mov	r31, r3
     cb8:	f0 68       	ori	r31, 0x80	; 128
     cba:	3f 2e       	mov	r3, r31
     cbc:	82 01       	movw	r16, r4
     cbe:	33 fc       	sbrc	r3, 3
     cc0:	1b c0       	rjmp	.+54     	; 0xcf8 <vfprintf+0x1c2>
     cc2:	82 2d       	mov	r24, r2
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	88 16       	cp	r8, r24
     cc8:	99 06       	cpc	r9, r25
     cca:	b0 f4       	brcc	.+44     	; 0xcf8 <vfprintf+0x1c2>
     ccc:	b6 01       	movw	r22, r12
     cce:	80 e2       	ldi	r24, 0x20	; 32
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     cd6:	2a 94       	dec	r2
     cd8:	f4 cf       	rjmp	.-24     	; 0xcc2 <vfprintf+0x18c>
     cda:	f5 01       	movw	r30, r10
     cdc:	37 fc       	sbrc	r3, 7
     cde:	85 91       	lpm	r24, Z+
     ce0:	37 fe       	sbrs	r3, 7
     ce2:	81 91       	ld	r24, Z+
     ce4:	5f 01       	movw	r10, r30
     ce6:	b6 01       	movw	r22, r12
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     cee:	21 10       	cpse	r2, r1
     cf0:	2a 94       	dec	r2
     cf2:	21 e0       	ldi	r18, 0x01	; 1
     cf4:	82 1a       	sub	r8, r18
     cf6:	91 08       	sbc	r9, r1
     cf8:	81 14       	cp	r8, r1
     cfa:	91 04       	cpc	r9, r1
     cfc:	71 f7       	brne	.-36     	; 0xcda <vfprintf+0x1a4>
     cfe:	e8 c0       	rjmp	.+464    	; 0xed0 <vfprintf+0x39a>
     d00:	84 36       	cpi	r24, 0x64	; 100
     d02:	11 f0       	breq	.+4      	; 0xd08 <vfprintf+0x1d2>
     d04:	89 36       	cpi	r24, 0x69	; 105
     d06:	41 f5       	brne	.+80     	; 0xd58 <vfprintf+0x222>
     d08:	f8 01       	movw	r30, r16
     d0a:	37 fe       	sbrs	r3, 7
     d0c:	07 c0       	rjmp	.+14     	; 0xd1c <vfprintf+0x1e6>
     d0e:	60 81       	ld	r22, Z
     d10:	71 81       	ldd	r23, Z+1	; 0x01
     d12:	82 81       	ldd	r24, Z+2	; 0x02
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	0c 5f       	subi	r16, 0xFC	; 252
     d18:	1f 4f       	sbci	r17, 0xFF	; 255
     d1a:	08 c0       	rjmp	.+16     	; 0xd2c <vfprintf+0x1f6>
     d1c:	60 81       	ld	r22, Z
     d1e:	71 81       	ldd	r23, Z+1	; 0x01
     d20:	07 2e       	mov	r0, r23
     d22:	00 0c       	add	r0, r0
     d24:	88 0b       	sbc	r24, r24
     d26:	99 0b       	sbc	r25, r25
     d28:	0e 5f       	subi	r16, 0xFE	; 254
     d2a:	1f 4f       	sbci	r17, 0xFF	; 255
     d2c:	f3 2d       	mov	r31, r3
     d2e:	ff 76       	andi	r31, 0x6F	; 111
     d30:	3f 2e       	mov	r3, r31
     d32:	97 ff       	sbrs	r25, 7
     d34:	09 c0       	rjmp	.+18     	; 0xd48 <vfprintf+0x212>
     d36:	90 95       	com	r25
     d38:	80 95       	com	r24
     d3a:	70 95       	com	r23
     d3c:	61 95       	neg	r22
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	8f 4f       	sbci	r24, 0xFF	; 255
     d42:	9f 4f       	sbci	r25, 0xFF	; 255
     d44:	f0 68       	ori	r31, 0x80	; 128
     d46:	3f 2e       	mov	r3, r31
     d48:	2a e0       	ldi	r18, 0x0A	; 10
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	a3 01       	movw	r20, r6
     d4e:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__ultoa_invert>
     d52:	88 2e       	mov	r8, r24
     d54:	86 18       	sub	r8, r6
     d56:	45 c0       	rjmp	.+138    	; 0xde2 <vfprintf+0x2ac>
     d58:	85 37       	cpi	r24, 0x75	; 117
     d5a:	31 f4       	brne	.+12     	; 0xd68 <vfprintf+0x232>
     d5c:	23 2d       	mov	r18, r3
     d5e:	2f 7e       	andi	r18, 0xEF	; 239
     d60:	b2 2e       	mov	r11, r18
     d62:	2a e0       	ldi	r18, 0x0A	; 10
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	25 c0       	rjmp	.+74     	; 0xdb2 <vfprintf+0x27c>
     d68:	93 2d       	mov	r25, r3
     d6a:	99 7f       	andi	r25, 0xF9	; 249
     d6c:	b9 2e       	mov	r11, r25
     d6e:	8f 36       	cpi	r24, 0x6F	; 111
     d70:	c1 f0       	breq	.+48     	; 0xda2 <vfprintf+0x26c>
     d72:	18 f4       	brcc	.+6      	; 0xd7a <vfprintf+0x244>
     d74:	88 35       	cpi	r24, 0x58	; 88
     d76:	79 f0       	breq	.+30     	; 0xd96 <vfprintf+0x260>
     d78:	b5 c0       	rjmp	.+362    	; 0xee4 <vfprintf+0x3ae>
     d7a:	80 37       	cpi	r24, 0x70	; 112
     d7c:	19 f0       	breq	.+6      	; 0xd84 <vfprintf+0x24e>
     d7e:	88 37       	cpi	r24, 0x78	; 120
     d80:	21 f0       	breq	.+8      	; 0xd8a <vfprintf+0x254>
     d82:	b0 c0       	rjmp	.+352    	; 0xee4 <vfprintf+0x3ae>
     d84:	e9 2f       	mov	r30, r25
     d86:	e0 61       	ori	r30, 0x10	; 16
     d88:	be 2e       	mov	r11, r30
     d8a:	b4 fe       	sbrs	r11, 4
     d8c:	0d c0       	rjmp	.+26     	; 0xda8 <vfprintf+0x272>
     d8e:	fb 2d       	mov	r31, r11
     d90:	f4 60       	ori	r31, 0x04	; 4
     d92:	bf 2e       	mov	r11, r31
     d94:	09 c0       	rjmp	.+18     	; 0xda8 <vfprintf+0x272>
     d96:	34 fe       	sbrs	r3, 4
     d98:	0a c0       	rjmp	.+20     	; 0xdae <vfprintf+0x278>
     d9a:	29 2f       	mov	r18, r25
     d9c:	26 60       	ori	r18, 0x06	; 6
     d9e:	b2 2e       	mov	r11, r18
     da0:	06 c0       	rjmp	.+12     	; 0xdae <vfprintf+0x278>
     da2:	28 e0       	ldi	r18, 0x08	; 8
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	05 c0       	rjmp	.+10     	; 0xdb2 <vfprintf+0x27c>
     da8:	20 e1       	ldi	r18, 0x10	; 16
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <vfprintf+0x27c>
     dae:	20 e1       	ldi	r18, 0x10	; 16
     db0:	32 e0       	ldi	r19, 0x02	; 2
     db2:	f8 01       	movw	r30, r16
     db4:	b7 fe       	sbrs	r11, 7
     db6:	07 c0       	rjmp	.+14     	; 0xdc6 <vfprintf+0x290>
     db8:	60 81       	ld	r22, Z
     dba:	71 81       	ldd	r23, Z+1	; 0x01
     dbc:	82 81       	ldd	r24, Z+2	; 0x02
     dbe:	93 81       	ldd	r25, Z+3	; 0x03
     dc0:	0c 5f       	subi	r16, 0xFC	; 252
     dc2:	1f 4f       	sbci	r17, 0xFF	; 255
     dc4:	06 c0       	rjmp	.+12     	; 0xdd2 <vfprintf+0x29c>
     dc6:	60 81       	ld	r22, Z
     dc8:	71 81       	ldd	r23, Z+1	; 0x01
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	0e 5f       	subi	r16, 0xFE	; 254
     dd0:	1f 4f       	sbci	r17, 0xFF	; 255
     dd2:	a3 01       	movw	r20, r6
     dd4:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__ultoa_invert>
     dd8:	88 2e       	mov	r8, r24
     dda:	86 18       	sub	r8, r6
     ddc:	fb 2d       	mov	r31, r11
     dde:	ff 77       	andi	r31, 0x7F	; 127
     de0:	3f 2e       	mov	r3, r31
     de2:	36 fe       	sbrs	r3, 6
     de4:	0d c0       	rjmp	.+26     	; 0xe00 <vfprintf+0x2ca>
     de6:	23 2d       	mov	r18, r3
     de8:	2e 7f       	andi	r18, 0xFE	; 254
     dea:	a2 2e       	mov	r10, r18
     dec:	89 14       	cp	r8, r9
     dee:	58 f4       	brcc	.+22     	; 0xe06 <vfprintf+0x2d0>
     df0:	34 fe       	sbrs	r3, 4
     df2:	0b c0       	rjmp	.+22     	; 0xe0a <vfprintf+0x2d4>
     df4:	32 fc       	sbrc	r3, 2
     df6:	09 c0       	rjmp	.+18     	; 0xe0a <vfprintf+0x2d4>
     df8:	83 2d       	mov	r24, r3
     dfa:	8e 7e       	andi	r24, 0xEE	; 238
     dfc:	a8 2e       	mov	r10, r24
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <vfprintf+0x2d4>
     e00:	b8 2c       	mov	r11, r8
     e02:	a3 2c       	mov	r10, r3
     e04:	03 c0       	rjmp	.+6      	; 0xe0c <vfprintf+0x2d6>
     e06:	b8 2c       	mov	r11, r8
     e08:	01 c0       	rjmp	.+2      	; 0xe0c <vfprintf+0x2d6>
     e0a:	b9 2c       	mov	r11, r9
     e0c:	a4 fe       	sbrs	r10, 4
     e0e:	0f c0       	rjmp	.+30     	; 0xe2e <vfprintf+0x2f8>
     e10:	fe 01       	movw	r30, r28
     e12:	e8 0d       	add	r30, r8
     e14:	f1 1d       	adc	r31, r1
     e16:	80 81       	ld	r24, Z
     e18:	80 33       	cpi	r24, 0x30	; 48
     e1a:	21 f4       	brne	.+8      	; 0xe24 <vfprintf+0x2ee>
     e1c:	9a 2d       	mov	r25, r10
     e1e:	99 7e       	andi	r25, 0xE9	; 233
     e20:	a9 2e       	mov	r10, r25
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <vfprintf+0x300>
     e24:	a2 fe       	sbrs	r10, 2
     e26:	06 c0       	rjmp	.+12     	; 0xe34 <vfprintf+0x2fe>
     e28:	b3 94       	inc	r11
     e2a:	b3 94       	inc	r11
     e2c:	04 c0       	rjmp	.+8      	; 0xe36 <vfprintf+0x300>
     e2e:	8a 2d       	mov	r24, r10
     e30:	86 78       	andi	r24, 0x86	; 134
     e32:	09 f0       	breq	.+2      	; 0xe36 <vfprintf+0x300>
     e34:	b3 94       	inc	r11
     e36:	a3 fc       	sbrc	r10, 3
     e38:	11 c0       	rjmp	.+34     	; 0xe5c <vfprintf+0x326>
     e3a:	a0 fe       	sbrs	r10, 0
     e3c:	06 c0       	rjmp	.+12     	; 0xe4a <vfprintf+0x314>
     e3e:	b2 14       	cp	r11, r2
     e40:	88 f4       	brcc	.+34     	; 0xe64 <vfprintf+0x32e>
     e42:	28 0c       	add	r2, r8
     e44:	92 2c       	mov	r9, r2
     e46:	9b 18       	sub	r9, r11
     e48:	0e c0       	rjmp	.+28     	; 0xe66 <vfprintf+0x330>
     e4a:	b2 14       	cp	r11, r2
     e4c:	60 f4       	brcc	.+24     	; 0xe66 <vfprintf+0x330>
     e4e:	b6 01       	movw	r22, r12
     e50:	80 e2       	ldi	r24, 0x20	; 32
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     e58:	b3 94       	inc	r11
     e5a:	f7 cf       	rjmp	.-18     	; 0xe4a <vfprintf+0x314>
     e5c:	b2 14       	cp	r11, r2
     e5e:	18 f4       	brcc	.+6      	; 0xe66 <vfprintf+0x330>
     e60:	2b 18       	sub	r2, r11
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <vfprintf+0x332>
     e64:	98 2c       	mov	r9, r8
     e66:	21 2c       	mov	r2, r1
     e68:	a4 fe       	sbrs	r10, 4
     e6a:	10 c0       	rjmp	.+32     	; 0xe8c <vfprintf+0x356>
     e6c:	b6 01       	movw	r22, r12
     e6e:	80 e3       	ldi	r24, 0x30	; 48
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     e76:	a2 fe       	sbrs	r10, 2
     e78:	17 c0       	rjmp	.+46     	; 0xea8 <vfprintf+0x372>
     e7a:	a1 fc       	sbrc	r10, 1
     e7c:	03 c0       	rjmp	.+6      	; 0xe84 <vfprintf+0x34e>
     e7e:	88 e7       	ldi	r24, 0x78	; 120
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <vfprintf+0x352>
     e84:	88 e5       	ldi	r24, 0x58	; 88
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	b6 01       	movw	r22, r12
     e8a:	0c c0       	rjmp	.+24     	; 0xea4 <vfprintf+0x36e>
     e8c:	8a 2d       	mov	r24, r10
     e8e:	86 78       	andi	r24, 0x86	; 134
     e90:	59 f0       	breq	.+22     	; 0xea8 <vfprintf+0x372>
     e92:	a1 fe       	sbrs	r10, 1
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0x364>
     e96:	8b e2       	ldi	r24, 0x2B	; 43
     e98:	01 c0       	rjmp	.+2      	; 0xe9c <vfprintf+0x366>
     e9a:	80 e2       	ldi	r24, 0x20	; 32
     e9c:	a7 fc       	sbrc	r10, 7
     e9e:	8d e2       	ldi	r24, 0x2D	; 45
     ea0:	b6 01       	movw	r22, r12
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     ea8:	89 14       	cp	r8, r9
     eaa:	38 f4       	brcc	.+14     	; 0xeba <vfprintf+0x384>
     eac:	b6 01       	movw	r22, r12
     eae:	80 e3       	ldi	r24, 0x30	; 48
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     eb6:	9a 94       	dec	r9
     eb8:	f7 cf       	rjmp	.-18     	; 0xea8 <vfprintf+0x372>
     eba:	8a 94       	dec	r8
     ebc:	f3 01       	movw	r30, r6
     ebe:	e8 0d       	add	r30, r8
     ec0:	f1 1d       	adc	r31, r1
     ec2:	80 81       	ld	r24, Z
     ec4:	b6 01       	movw	r22, r12
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     ecc:	81 10       	cpse	r8, r1
     ece:	f5 cf       	rjmp	.-22     	; 0xeba <vfprintf+0x384>
     ed0:	22 20       	and	r2, r2
     ed2:	09 f4       	brne	.+2      	; 0xed6 <vfprintf+0x3a0>
     ed4:	42 ce       	rjmp	.-892    	; 0xb5a <vfprintf+0x24>
     ed6:	b6 01       	movw	r22, r12
     ed8:	80 e2       	ldi	r24, 0x20	; 32
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 92 07 	call	0xf24	; 0xf24 <fputc>
     ee0:	2a 94       	dec	r2
     ee2:	f6 cf       	rjmp	.-20     	; 0xed0 <vfprintf+0x39a>
     ee4:	f6 01       	movw	r30, r12
     ee6:	86 81       	ldd	r24, Z+6	; 0x06
     ee8:	97 81       	ldd	r25, Z+7	; 0x07
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <vfprintf+0x3ba>
     eec:	8f ef       	ldi	r24, 0xFF	; 255
     eee:	9f ef       	ldi	r25, 0xFF	; 255
     ef0:	2b 96       	adiw	r28, 0x0b	; 11
     ef2:	e2 e1       	ldi	r30, 0x12	; 18
     ef4:	0c 94 48 08 	jmp	0x1090	; 0x1090 <__epilogue_restores__>

00000ef8 <strnlen_P>:
     ef8:	fc 01       	movw	r30, r24
     efa:	05 90       	lpm	r0, Z+
     efc:	61 50       	subi	r22, 0x01	; 1
     efe:	70 40       	sbci	r23, 0x00	; 0
     f00:	01 10       	cpse	r0, r1
     f02:	d8 f7       	brcc	.-10     	; 0xefa <strnlen_P+0x2>
     f04:	80 95       	com	r24
     f06:	90 95       	com	r25
     f08:	8e 0f       	add	r24, r30
     f0a:	9f 1f       	adc	r25, r31
     f0c:	08 95       	ret

00000f0e <strnlen>:
     f0e:	fc 01       	movw	r30, r24
     f10:	61 50       	subi	r22, 0x01	; 1
     f12:	70 40       	sbci	r23, 0x00	; 0
     f14:	01 90       	ld	r0, Z+
     f16:	01 10       	cpse	r0, r1
     f18:	d8 f7       	brcc	.-10     	; 0xf10 <strnlen+0x2>
     f1a:	80 95       	com	r24
     f1c:	90 95       	com	r25
     f1e:	8e 0f       	add	r24, r30
     f20:	9f 1f       	adc	r25, r31
     f22:	08 95       	ret

00000f24 <fputc>:
     f24:	0f 93       	push	r16
     f26:	1f 93       	push	r17
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	fb 01       	movw	r30, r22
     f2e:	23 81       	ldd	r18, Z+3	; 0x03
     f30:	21 fd       	sbrc	r18, 1
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <fputc+0x16>
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f ef       	ldi	r25, 0xFF	; 255
     f38:	2c c0       	rjmp	.+88     	; 0xf92 <fputc+0x6e>
     f3a:	22 ff       	sbrs	r18, 2
     f3c:	16 c0       	rjmp	.+44     	; 0xf6a <fputc+0x46>
     f3e:	46 81       	ldd	r20, Z+6	; 0x06
     f40:	57 81       	ldd	r21, Z+7	; 0x07
     f42:	24 81       	ldd	r18, Z+4	; 0x04
     f44:	35 81       	ldd	r19, Z+5	; 0x05
     f46:	42 17       	cp	r20, r18
     f48:	53 07       	cpc	r21, r19
     f4a:	44 f4       	brge	.+16     	; 0xf5c <fputc+0x38>
     f4c:	a0 81       	ld	r26, Z
     f4e:	b1 81       	ldd	r27, Z+1	; 0x01
     f50:	9d 01       	movw	r18, r26
     f52:	2f 5f       	subi	r18, 0xFF	; 255
     f54:	3f 4f       	sbci	r19, 0xFF	; 255
     f56:	31 83       	std	Z+1, r19	; 0x01
     f58:	20 83       	st	Z, r18
     f5a:	8c 93       	st	X, r24
     f5c:	26 81       	ldd	r18, Z+6	; 0x06
     f5e:	37 81       	ldd	r19, Z+7	; 0x07
     f60:	2f 5f       	subi	r18, 0xFF	; 255
     f62:	3f 4f       	sbci	r19, 0xFF	; 255
     f64:	37 83       	std	Z+7, r19	; 0x07
     f66:	26 83       	std	Z+6, r18	; 0x06
     f68:	14 c0       	rjmp	.+40     	; 0xf92 <fputc+0x6e>
     f6a:	8b 01       	movw	r16, r22
     f6c:	ec 01       	movw	r28, r24
     f6e:	fb 01       	movw	r30, r22
     f70:	00 84       	ldd	r0, Z+8	; 0x08
     f72:	f1 85       	ldd	r31, Z+9	; 0x09
     f74:	e0 2d       	mov	r30, r0
     f76:	09 95       	icall
     f78:	89 2b       	or	r24, r25
     f7a:	e1 f6       	brne	.-72     	; 0xf34 <fputc+0x10>
     f7c:	d8 01       	movw	r26, r16
     f7e:	16 96       	adiw	r26, 0x06	; 6
     f80:	8d 91       	ld	r24, X+
     f82:	9c 91       	ld	r25, X
     f84:	17 97       	sbiw	r26, 0x07	; 7
     f86:	01 96       	adiw	r24, 0x01	; 1
     f88:	17 96       	adiw	r26, 0x07	; 7
     f8a:	9c 93       	st	X, r25
     f8c:	8e 93       	st	-X, r24
     f8e:	16 97       	sbiw	r26, 0x06	; 6
     f90:	ce 01       	movw	r24, r28
     f92:	df 91       	pop	r29
     f94:	cf 91       	pop	r28
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	08 95       	ret

00000f9c <__ultoa_invert>:
     f9c:	fa 01       	movw	r30, r20
     f9e:	aa 27       	eor	r26, r26
     fa0:	28 30       	cpi	r18, 0x08	; 8
     fa2:	51 f1       	breq	.+84     	; 0xff8 <__ultoa_invert+0x5c>
     fa4:	20 31       	cpi	r18, 0x10	; 16
     fa6:	81 f1       	breq	.+96     	; 0x1008 <__ultoa_invert+0x6c>
     fa8:	e8 94       	clt
     faa:	6f 93       	push	r22
     fac:	6e 7f       	andi	r22, 0xFE	; 254
     fae:	6e 5f       	subi	r22, 0xFE	; 254
     fb0:	7f 4f       	sbci	r23, 0xFF	; 255
     fb2:	8f 4f       	sbci	r24, 0xFF	; 255
     fb4:	9f 4f       	sbci	r25, 0xFF	; 255
     fb6:	af 4f       	sbci	r26, 0xFF	; 255
     fb8:	b1 e0       	ldi	r27, 0x01	; 1
     fba:	3e d0       	rcall	.+124    	; 0x1038 <__ultoa_invert+0x9c>
     fbc:	b4 e0       	ldi	r27, 0x04	; 4
     fbe:	3c d0       	rcall	.+120    	; 0x1038 <__ultoa_invert+0x9c>
     fc0:	67 0f       	add	r22, r23
     fc2:	78 1f       	adc	r23, r24
     fc4:	89 1f       	adc	r24, r25
     fc6:	9a 1f       	adc	r25, r26
     fc8:	a1 1d       	adc	r26, r1
     fca:	68 0f       	add	r22, r24
     fcc:	79 1f       	adc	r23, r25
     fce:	8a 1f       	adc	r24, r26
     fd0:	91 1d       	adc	r25, r1
     fd2:	a1 1d       	adc	r26, r1
     fd4:	6a 0f       	add	r22, r26
     fd6:	71 1d       	adc	r23, r1
     fd8:	81 1d       	adc	r24, r1
     fda:	91 1d       	adc	r25, r1
     fdc:	a1 1d       	adc	r26, r1
     fde:	20 d0       	rcall	.+64     	; 0x1020 <__ultoa_invert+0x84>
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <__ultoa_invert+0x48>
     fe2:	68 94       	set
     fe4:	3f 91       	pop	r19
     fe6:	2a e0       	ldi	r18, 0x0A	; 10
     fe8:	26 9f       	mul	r18, r22
     fea:	11 24       	eor	r1, r1
     fec:	30 19       	sub	r19, r0
     fee:	30 5d       	subi	r19, 0xD0	; 208
     ff0:	31 93       	st	Z+, r19
     ff2:	de f6       	brtc	.-74     	; 0xfaa <__ultoa_invert+0xe>
     ff4:	cf 01       	movw	r24, r30
     ff6:	08 95       	ret
     ff8:	46 2f       	mov	r20, r22
     ffa:	47 70       	andi	r20, 0x07	; 7
     ffc:	40 5d       	subi	r20, 0xD0	; 208
     ffe:	41 93       	st	Z+, r20
    1000:	b3 e0       	ldi	r27, 0x03	; 3
    1002:	0f d0       	rcall	.+30     	; 0x1022 <__ultoa_invert+0x86>
    1004:	c9 f7       	brne	.-14     	; 0xff8 <__ultoa_invert+0x5c>
    1006:	f6 cf       	rjmp	.-20     	; 0xff4 <__ultoa_invert+0x58>
    1008:	46 2f       	mov	r20, r22
    100a:	4f 70       	andi	r20, 0x0F	; 15
    100c:	40 5d       	subi	r20, 0xD0	; 208
    100e:	4a 33       	cpi	r20, 0x3A	; 58
    1010:	18 f0       	brcs	.+6      	; 0x1018 <__ultoa_invert+0x7c>
    1012:	49 5d       	subi	r20, 0xD9	; 217
    1014:	31 fd       	sbrc	r19, 1
    1016:	40 52       	subi	r20, 0x20	; 32
    1018:	41 93       	st	Z+, r20
    101a:	02 d0       	rcall	.+4      	; 0x1020 <__ultoa_invert+0x84>
    101c:	a9 f7       	brne	.-22     	; 0x1008 <__ultoa_invert+0x6c>
    101e:	ea cf       	rjmp	.-44     	; 0xff4 <__ultoa_invert+0x58>
    1020:	b4 e0       	ldi	r27, 0x04	; 4
    1022:	a6 95       	lsr	r26
    1024:	97 95       	ror	r25
    1026:	87 95       	ror	r24
    1028:	77 95       	ror	r23
    102a:	67 95       	ror	r22
    102c:	ba 95       	dec	r27
    102e:	c9 f7       	brne	.-14     	; 0x1022 <__ultoa_invert+0x86>
    1030:	00 97       	sbiw	r24, 0x00	; 0
    1032:	61 05       	cpc	r22, r1
    1034:	71 05       	cpc	r23, r1
    1036:	08 95       	ret
    1038:	9b 01       	movw	r18, r22
    103a:	ac 01       	movw	r20, r24
    103c:	0a 2e       	mov	r0, r26
    103e:	06 94       	lsr	r0
    1040:	57 95       	ror	r21
    1042:	47 95       	ror	r20
    1044:	37 95       	ror	r19
    1046:	27 95       	ror	r18
    1048:	ba 95       	dec	r27
    104a:	c9 f7       	brne	.-14     	; 0x103e <__ultoa_invert+0xa2>
    104c:	62 0f       	add	r22, r18
    104e:	73 1f       	adc	r23, r19
    1050:	84 1f       	adc	r24, r20
    1052:	95 1f       	adc	r25, r21
    1054:	a0 1d       	adc	r26, r0
    1056:	08 95       	ret

00001058 <__prologue_saves__>:
    1058:	2f 92       	push	r2
    105a:	3f 92       	push	r3
    105c:	4f 92       	push	r4
    105e:	5f 92       	push	r5
    1060:	6f 92       	push	r6
    1062:	7f 92       	push	r7
    1064:	8f 92       	push	r8
    1066:	9f 92       	push	r9
    1068:	af 92       	push	r10
    106a:	bf 92       	push	r11
    106c:	cf 92       	push	r12
    106e:	df 92       	push	r13
    1070:	ef 92       	push	r14
    1072:	ff 92       	push	r15
    1074:	0f 93       	push	r16
    1076:	1f 93       	push	r17
    1078:	cf 93       	push	r28
    107a:	df 93       	push	r29
    107c:	cd b7       	in	r28, 0x3d	; 61
    107e:	de b7       	in	r29, 0x3e	; 62
    1080:	ca 1b       	sub	r28, r26
    1082:	db 0b       	sbc	r29, r27
    1084:	0f b6       	in	r0, 0x3f	; 63
    1086:	f8 94       	cli
    1088:	de bf       	out	0x3e, r29	; 62
    108a:	0f be       	out	0x3f, r0	; 63
    108c:	cd bf       	out	0x3d, r28	; 61
    108e:	09 94       	ijmp

00001090 <__epilogue_restores__>:
    1090:	2a 88       	ldd	r2, Y+18	; 0x12
    1092:	39 88       	ldd	r3, Y+17	; 0x11
    1094:	48 88       	ldd	r4, Y+16	; 0x10
    1096:	5f 84       	ldd	r5, Y+15	; 0x0f
    1098:	6e 84       	ldd	r6, Y+14	; 0x0e
    109a:	7d 84       	ldd	r7, Y+13	; 0x0d
    109c:	8c 84       	ldd	r8, Y+12	; 0x0c
    109e:	9b 84       	ldd	r9, Y+11	; 0x0b
    10a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    10a2:	b9 84       	ldd	r11, Y+9	; 0x09
    10a4:	c8 84       	ldd	r12, Y+8	; 0x08
    10a6:	df 80       	ldd	r13, Y+7	; 0x07
    10a8:	ee 80       	ldd	r14, Y+6	; 0x06
    10aa:	fd 80       	ldd	r15, Y+5	; 0x05
    10ac:	0c 81       	ldd	r16, Y+4	; 0x04
    10ae:	1b 81       	ldd	r17, Y+3	; 0x03
    10b0:	aa 81       	ldd	r26, Y+2	; 0x02
    10b2:	b9 81       	ldd	r27, Y+1	; 0x01
    10b4:	ce 0f       	add	r28, r30
    10b6:	d1 1d       	adc	r29, r1
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
    10c2:	ed 01       	movw	r28, r26
    10c4:	08 95       	ret

000010c6 <_exit>:
    10c6:	f8 94       	cli

000010c8 <__stop_program>:
    10c8:	ff cf       	rjmp	.-2      	; 0x10c8 <__stop_program>
