
SPI_Driver_Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  000008f0  00000964  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d3c  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e7  00000000  00000000  00001800  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000076a  00000000  00000000  00001fe7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a8  00000000  00000000  00002754  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d6  00000000  00000000  000028fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006b1  00000000  00000000  00002dd2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00003483  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 39 01 	call	0x272	; 0x272 <main>
  7a:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_lcd_kick>:
    DataDir_LCD_PORT =0xFF;
	CLEARBIT(LCD_CTRL,RW_SWITCH); // Write mood
}
void LCD_lcd_kick(void)
{
	CLEARBIT(LCD_CTRL,EN_SWITCH);
  82:	88 b3       	in	r24, 0x18	; 24
  84:	8e 7f       	andi	r24, 0xFE	; 254
  86:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	83 ed       	ldi	r24, 0xD3	; 211
  8a:	90 e3       	ldi	r25, 0x30	; 48
  8c:	01 97       	sbiw	r24, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <LCD_lcd_kick+0xa>
  90:	00 c0       	rjmp	.+0      	; 0x92 <LCD_lcd_kick+0x10>
  92:	00 00       	nop
	_delay_ms(50);
	SETBIT(LCD_CTRL,EN_SWITCH);
  94:	88 b3       	in	r24, 0x18	; 24
  96:	81 60       	ori	r24, 0x01	; 1
  98:	88 bb       	out	0x18, r24	; 24
  9a:	08 95       	ret

0000009c <LCD_check_lcd_isbusy>:

}

void LCD_check_lcd_isbusy(void)
{
	DataDir_LCD_PORT &= ~(0xFF<<DATA_shift);
  9c:	8a b3       	in	r24, 0x1a	; 26
  9e:	1a ba       	out	0x1a, r1	; 26
	SETBIT(LCD_CTRL,RW_SWITCH); // read mood
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	82 60       	ori	r24, 0x02	; 2
  a4:	88 bb       	out	0x18, r24	; 24
	CLEARBIT(LCD_CTRL,RS_SWITCH);
  a6:	88 b3       	in	r24, 0x18	; 24
  a8:	8b 7f       	andi	r24, 0xFB	; 251
  aa:	88 bb       	out	0x18, r24	; 24
    LCD_lcd_kick();
  ac:	0e 94 41 00 	call	0x82	; 0x82 <LCD_lcd_kick>
    DataDir_LCD_PORT =0xFF;
  b0:	8f ef       	ldi	r24, 0xFF	; 255
  b2:	8a bb       	out	0x1a, r24	; 26
	CLEARBIT(LCD_CTRL,RW_SWITCH); // Write mood
  b4:	88 b3       	in	r24, 0x18	; 24
  b6:	8d 7f       	andi	r24, 0xFD	; 253
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	08 95       	ret

000000bc <LCD_WRITE_COMMAND>:
    	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
    	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);

}
void LCD_WRITE_COMMAND(unsigned char command)
{
  bc:	cf 93       	push	r28
  be:	c8 2f       	mov	r28, r24
	LCD_check_lcd_isbusy();
  c0:	0e 94 4e 00 	call	0x9c	; 0x9c <LCD_check_lcd_isbusy>
	#ifdef EIGHT_BIT_MODE
		LCD_PORT = command;
  c4:	cb bb       	out	0x1b, r28	; 27
		CLEARBIT(LCD_CTRL,RW_SWITCH);
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	8d 7f       	andi	r24, 0xFD	; 253
  ca:	88 bb       	out	0x18, r24	; 24
		CLEARBIT(LCD_CTRL,RS_SWITCH);
  cc:	88 b3       	in	r24, 0x18	; 24
  ce:	8b 7f       	andi	r24, 0xFB	; 251
  d0:	88 bb       	out	0x18, r24	; 24
  d2:	89 ef       	ldi	r24, 0xF9	; 249
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <LCD_WRITE_COMMAND+0x1a>
  da:	00 c0       	rjmp	.+0      	; 0xdc <LCD_WRITE_COMMAND+0x20>
  dc:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();	
  de:	0e 94 41 00 	call	0x82	; 0x82 <LCD_lcd_kick>
		CLEARBIT(LCD_CTRL,RW_SWITCH);
		CLEARBIT(LCD_CTRL,RS_SWITCH);
		LCD_lcd_kick();	
	 #endif

}
  e2:	cf 91       	pop	r28
  e4:	08 95       	ret

000000e6 <LCD_WRITE_CHAR>:
void LCD_WRITE_CHAR(unsigned char character)
{
  e6:	cf 93       	push	r28
  e8:	c8 2f       	mov	r28, r24
	#ifdef EIGHT_BIT_MODE
		LCD_check_lcd_isbusy();
  ea:	0e 94 4e 00 	call	0x9c	; 0x9c <LCD_check_lcd_isbusy>
		LCD_PORT = character;
  ee:	cb bb       	out	0x1b, r28	; 27
		CLEARBIT(LCD_CTRL,RW_SWITCH);
  f0:	88 b3       	in	r24, 0x18	; 24
  f2:	8d 7f       	andi	r24, 0xFD	; 253
  f4:	88 bb       	out	0x18, r24	; 24
		SETBIT(LCD_CTRL,RS_SWITCH);
  f6:	88 b3       	in	r24, 0x18	; 24
  f8:	84 60       	ori	r24, 0x04	; 4
  fa:	88 bb       	out	0x18, r24	; 24
  fc:	89 ef       	ldi	r24, 0xF9	; 249
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <LCD_WRITE_CHAR+0x1a>
 104:	00 c0       	rjmp	.+0      	; 0x106 <LCD_WRITE_CHAR+0x20>
 106:	00 00       	nop
		_delay_ms(1);
		LCD_lcd_kick();
 108:	0e 94 41 00 	call	0x82	; 0x82 <LCD_lcd_kick>
		SETBIT(LCD_CTRL,RS_SWITCH);
		CLEARBIT(LCD_CTRL,RW_SWITCH);
		LCD_lcd_kick();
    #endif

}
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <LCD_clear_screen>:
	_delay_ms(50);
	SETBIT(LCD_CTRL,EN_SWITCH);
}
void LCD_clear_screen()
{
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
 116:	08 95       	ret

00000118 <LCD_INIT>:
 118:	87 e8       	ldi	r24, 0x87	; 135
 11a:	93 e1       	ldi	r25, 0x13	; 19
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_INIT+0x4>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_INIT+0xa>
 122:	00 00       	nop
#include "LCD_Driver.h"

void LCD_INIT()
{
	_delay_ms(20);
	LCD_check_lcd_isbusy();
 124:	0e 94 4e 00 	call	0x9c	; 0x9c <LCD_check_lcd_isbusy>
	SETBIT(DataDir_LCD_CTRL,EN_SWITCH);
 128:	87 b3       	in	r24, 0x17	; 23
 12a:	81 60       	ori	r24, 0x01	; 1
 12c:	87 bb       	out	0x17, r24	; 23
	SETBIT(DataDir_LCD_CTRL,RW_SWITCH);
 12e:	87 b3       	in	r24, 0x17	; 23
 130:	82 60       	ori	r24, 0x02	; 2
 132:	87 bb       	out	0x17, r24	; 23
	SETBIT(DataDir_LCD_CTRL,RS_SWITCH);
 134:	87 b3       	in	r24, 0x17	; 23
 136:	84 60       	ori	r24, 0x04	; 4
 138:	87 bb       	out	0x17, r24	; 23
		
	CLEARBIT(LCD_CTRL,EN_SWITCH);
 13a:	88 b3       	in	r24, 0x18	; 24
 13c:	8e 7f       	andi	r24, 0xFE	; 254
 13e:	88 bb       	out	0x18, r24	; 24
	CLEARBIT(LCD_CTRL,RS_SWITCH);
 140:	88 b3       	in	r24, 0x18	; 24
 142:	8b 7f       	andi	r24, 0xFB	; 251
 144:	88 bb       	out	0x18, r24	; 24
	CLEARBIT(LCD_CTRL,RW_SWITCH);
 146:	88 b3       	in	r24, 0x18	; 24
 148:	8d 7f       	andi	r24, 0xFD	; 253
 14a:	88 bb       	out	0x18, r24	; 24
		
	DataDir_LCD_PORT=0xFF;
 14c:	8f ef       	ldi	r24, 0xFF	; 255
 14e:	8a bb       	out	0x1a, r24	; 26
 150:	85 ea       	ldi	r24, 0xA5	; 165
 152:	9e e0       	ldi	r25, 0x0E	; 14
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <LCD_INIT+0x3c>
 158:	00 c0       	rjmp	.+0      	; 0x15a <LCD_INIT+0x42>
 15a:	00 00       	nop
	_delay_ms(15);
	LCD_clear_screen();	
 15c:	0e 94 88 00 	call	0x110	; 0x110 <LCD_clear_screen>
	#ifdef EIGHT_BIT_MODE
		LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
 160:	88 e3       	ldi	r24, 0x38	; 56
 162:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
   #endif
   #ifdef FOUR_BIT_MODE
		LCD_WRITE_COMMAND(0x02);
		LCD_WRITE_COMMAND(LCD_FUNCTION_4BIT_2LINES);
   #endif
    	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
 166:	86 e0       	ldi	r24, 0x06	; 6
 168:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
    	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
 16c:	80 e8       	ldi	r24, 0x80	; 128
 16e:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
    	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);
 172:	8f e0       	ldi	r24, 0x0F	; 15
 174:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
 178:	08 95       	ret

0000017a <LCD_GOTO_XY>:
}
void LCD_clear_screen()
{
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
}
void LCD_GOTO_XY(unsigned char line, unsigned char position){
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	c8 2f       	mov	r28, r24
 180:	d6 2f       	mov	r29, r22
	if (line == 1)
 182:	81 30       	cpi	r24, 0x01	; 1
 184:	31 f4       	brne	.+12     	; 0x192 <LCD_GOTO_XY+0x18>
	{
		if (position < 16 && position >= 0)
 186:	60 31       	cpi	r22, 0x10	; 16
 188:	20 f4       	brcc	.+8      	; 0x192 <LCD_GOTO_XY+0x18>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
 18a:	80 e8       	ldi	r24, 0x80	; 128
 18c:	86 0f       	add	r24, r22
 18e:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
		}
	}
	if (line == 2)
 192:	c2 30       	cpi	r28, 0x02	; 2
 194:	31 f4       	brne	.+12     	; 0x1a2 <LCD_GOTO_XY+0x28>
	{
		if (position < 16 && position >= 0)
 196:	d0 31       	cpi	r29, 0x10	; 16
 198:	20 f4       	brcc	.+8      	; 0x1a2 <LCD_GOTO_XY+0x28>
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
 19a:	80 ec       	ldi	r24, 0xC0	; 192
 19c:	8d 0f       	add	r24, r29
 19e:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_WRITE_COMMAND>
		}
	}
}
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <LCD_WRITE_STRING>:
    #endif

}

void LCD_WRITE_STRING(char* string)
{
 1a8:	cf 92       	push	r12
 1aa:	df 92       	push	r13
 1ac:	ef 92       	push	r14
 1ae:	ff 92       	push	r15
 1b0:	cf 93       	push	r28
 1b2:	df 93       	push	r29
 1b4:	ec 01       	movw	r28, r24
	uint32_t counter=0;
 1b6:	c1 2c       	mov	r12, r1
 1b8:	d1 2c       	mov	r13, r1
 1ba:	76 01       	movw	r14, r12
	while (*string >0)
 1bc:	22 c0       	rjmp	.+68     	; 0x202 <LCD_WRITE_STRING+0x5a>
	{
		LCD_WRITE_CHAR(*string++);
 1be:	21 96       	adiw	r28, 0x01	; 1
 1c0:	0e 94 73 00 	call	0xe6	; 0xe6 <LCD_WRITE_CHAR>
		counter++;
 1c4:	8f ef       	ldi	r24, 0xFF	; 255
 1c6:	c8 1a       	sub	r12, r24
 1c8:	d8 0a       	sbc	r13, r24
 1ca:	e8 0a       	sbc	r14, r24
 1cc:	f8 0a       	sbc	r15, r24
		if (counter==16)
 1ce:	80 e1       	ldi	r24, 0x10	; 16
 1d0:	c8 16       	cp	r12, r24
 1d2:	d1 04       	cpc	r13, r1
 1d4:	e1 04       	cpc	r14, r1
 1d6:	f1 04       	cpc	r15, r1
 1d8:	29 f4       	brne	.+10     	; 0x1e4 <LCD_WRITE_STRING+0x3c>
		{
			LCD_GOTO_XY(2,0);
 1da:	60 e0       	ldi	r22, 0x00	; 0
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_GOTO_XY>
 1e2:	0f c0       	rjmp	.+30     	; 0x202 <LCD_WRITE_STRING+0x5a>
		}
		else if (counter==32)
 1e4:	80 e2       	ldi	r24, 0x20	; 32
 1e6:	c8 16       	cp	r12, r24
 1e8:	d1 04       	cpc	r13, r1
 1ea:	e1 04       	cpc	r14, r1
 1ec:	f1 04       	cpc	r15, r1
 1ee:	49 f4       	brne	.+18     	; 0x202 <LCD_WRITE_STRING+0x5a>
		{
			LCD_clear_screen();
 1f0:	0e 94 88 00 	call	0x110	; 0x110 <LCD_clear_screen>
			LCD_GOTO_XY(1,0);
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_GOTO_XY>
			counter=0;
 1fc:	c1 2c       	mov	r12, r1
 1fe:	d1 2c       	mov	r13, r1
 200:	76 01       	movw	r14, r12
}

void LCD_WRITE_STRING(char* string)
{
	uint32_t counter=0;
	while (*string >0)
 202:	88 81       	ld	r24, Y
 204:	81 11       	cpse	r24, r1
 206:	db cf       	rjmp	.-74     	; 0x1be <LCD_WRITE_STRING+0x16>
			LCD_GOTO_XY(1,0);
			counter=0;
		}
	}

}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	ff 90       	pop	r15
 20e:	ef 90       	pop	r14
 210:	df 90       	pop	r13
 212:	cf 90       	pop	r12
 214:	08 95       	ret

00000216 <LCD_DISPLAY_NUMBER>:
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
		}
	}
}
void LCD_DISPLAY_NUMBER(uint32_t number)
{
 216:	0f 93       	push	r16
 218:	1f 93       	push	r17
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	27 97       	sbiw	r28, 0x07	; 7
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	f8 94       	cli
 228:	de bf       	out	0x3e, r29	; 62
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	cd bf       	out	0x3d, r28	; 61
	char str[7];
	sprintf(str,"%d",number);
 22e:	9f 93       	push	r25
 230:	8f 93       	push	r24
 232:	7f 93       	push	r23
 234:	6f 93       	push	r22
 236:	80 e6       	ldi	r24, 0x60	; 96
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	9f 93       	push	r25
 23c:	8f 93       	push	r24
 23e:	8e 01       	movw	r16, r28
 240:	0f 5f       	subi	r16, 0xFF	; 255
 242:	1f 4f       	sbci	r17, 0xFF	; 255
 244:	1f 93       	push	r17
 246:	0f 93       	push	r16
 248:	0e 94 8c 01 	call	0x318	; 0x318 <sprintf>
	LCD_WRITE_STRING(str);
 24c:	c8 01       	movw	r24, r16
 24e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_WRITE_STRING>
	
}
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	f8 94       	cli
 256:	de bf       	out	0x3e, r29	; 62
 258:	0f be       	out	0x3f, r0	; 63
 25a:	cd bf       	out	0x3d, r28	; 61
 25c:	27 96       	adiw	r28, 0x07	; 7
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	f8 94       	cli
 262:	de bf       	out	0x3e, r29	; 62
 264:	0f be       	out	0x3f, r0	; 63
 266:	cd bf       	out	0x3d, r28	; 61
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	1f 91       	pop	r17
 26e:	0f 91       	pop	r16
 270:	08 95       	ret

00000272 <main>:
#include "HAL/LCD_Driver/LCD_Driver.h"
#include "MCAL/SPI_Driver/SPI_Driver.h"

int main(void)
{
	LCD_INIT();
 272:	0e 94 8c 00 	call	0x118	; 0x118 <LCD_INIT>
	SPI_INIT();
 276:	0e 94 6e 01 	call	0x2dc	; 0x2dc <SPI_INIT>
	uint8_t data='A',received_data,counter=0;
	
	LCD_WRITE_STRING("Master ");
 27a:	8f e6       	ldi	r24, 0x6F	; 111
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCD_WRITE_STRING>

int main(void)
{
	LCD_INIT();
	SPI_INIT();
	uint8_t data='A',received_data,counter=0;
 282:	c0 e0       	ldi	r28, 0x00	; 0
 284:	d1 e4       	ldi	r29, 0x41	; 65
 286:	03 c0       	rjmp	.+6      	; 0x28e <main+0x1c>
		data++;
		if (data =='Z'+1) data='A';
		LCD_GOTO_XY(2,0);
		LCD_WRITE_CHAR(received_data);
		LCD_GOTO_XY(1,9);
		LCD_DISPLAY_NUMBER(counter++);	
 288:	c1 2f       	mov	r28, r17
 28a:	01 c0       	rjmp	.+2      	; 0x28e <main+0x1c>
		_delay_ms(1000);
		if(counter == 10)   counter=0;
 28c:	c0 e0       	ldi	r28, 0x00	; 0
	uint8_t data='A',received_data,counter=0;
	
	LCD_WRITE_STRING("Master ");
    while (1) 
    {
		received_data=SPI_SendReceive(data);
 28e:	8d 2f       	mov	r24, r29
 290:	0e 94 87 01 	call	0x30e	; 0x30e <SPI_SendReceive>
 294:	18 2f       	mov	r17, r24
		data++;
 296:	df 5f       	subi	r29, 0xFF	; 255
		if (data =='Z'+1) data='A';
 298:	db 35       	cpi	r29, 0x5B	; 91
 29a:	09 f4       	brne	.+2      	; 0x29e <main+0x2c>
 29c:	d1 e4       	ldi	r29, 0x41	; 65
		LCD_GOTO_XY(2,0);
 29e:	60 e0       	ldi	r22, 0x00	; 0
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_GOTO_XY>
		LCD_WRITE_CHAR(received_data);
 2a6:	81 2f       	mov	r24, r17
 2a8:	0e 94 73 00 	call	0xe6	; 0xe6 <LCD_WRITE_CHAR>
		LCD_GOTO_XY(1,9);
 2ac:	69 e0       	ldi	r22, 0x09	; 9
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_GOTO_XY>
		LCD_DISPLAY_NUMBER(counter++);	
 2b4:	11 e0       	ldi	r17, 0x01	; 1
 2b6:	1c 0f       	add	r17, r28
 2b8:	6c 2f       	mov	r22, r28
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 0b 01 	call	0x216	; 0x216 <LCD_DISPLAY_NUMBER>
 2c4:	2f e3       	ldi	r18, 0x3F	; 63
 2c6:	8d e0       	ldi	r24, 0x0D	; 13
 2c8:	93 e0       	ldi	r25, 0x03	; 3
 2ca:	21 50       	subi	r18, 0x01	; 1
 2cc:	80 40       	sbci	r24, 0x00	; 0
 2ce:	90 40       	sbci	r25, 0x00	; 0
 2d0:	e1 f7       	brne	.-8      	; 0x2ca <main+0x58>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <main+0x62>
 2d4:	00 00       	nop
		_delay_ms(1000);
		if(counter == 10)   counter=0;
 2d6:	1a 30       	cpi	r17, 0x0A	; 10
 2d8:	b9 f6       	brne	.-82     	; 0x288 <main+0x16>
 2da:	d8 cf       	rjmp	.-80     	; 0x28c <main+0x1a>

000002dc <SPI_INIT>:
// }
void SPI_INIT()
{
	#if (Mode_S == Master)
	// Set SS , MOSI , SCL as output
	SETBIT(M_S_Control,SS);
 2dc:	87 b3       	in	r24, 0x17	; 23
 2de:	80 61       	ori	r24, 0x10	; 16
 2e0:	87 bb       	out	0x17, r24	; 23
	SETBIT(M_S_Control,MOSI);
 2e2:	87 b3       	in	r24, 0x17	; 23
 2e4:	80 62       	ori	r24, 0x20	; 32
 2e6:	87 bb       	out	0x17, r24	; 23
	SETBIT(M_S_Control,SCK);
 2e8:	87 b3       	in	r24, 0x17	; 23
 2ea:	80 68       	ori	r24, 0x80	; 128
 2ec:	87 bb       	out	0x17, r24	; 23
	
	
	SETBIT(SPCR,MSTR); // Enable Master
 2ee:	8d b1       	in	r24, 0x0d	; 13
 2f0:	80 61       	ori	r24, 0x10	; 16
 2f2:	8d b9       	out	0x0d, r24	; 13
	SETBIT(SPCR,SPR0); // Set clock rate focs/16
 2f4:	8d b1       	in	r24, 0x0d	; 13
 2f6:	81 60       	ori	r24, 0x01	; 1
 2f8:	8d b9       	out	0x0d, r24	; 13
	CLEARBIT(SPCR,SPR1); // Set clock rate focs/16
 2fa:	8d b1       	in	r24, 0x0d	; 13
 2fc:	8d 7f       	andi	r24, 0xFD	; 253
 2fe:	8d b9       	out	0x0d, r24	; 13
	
	// Set MISO as input
	CLEARBIT(M_S_Control,MISO);
 300:	87 b3       	in	r24, 0x17	; 23
 302:	8f 7b       	andi	r24, 0xBF	; 191
 304:	87 bb       	out	0x17, r24	; 23
	
	// Enable Slave mode
	CLEARBIT(SPCR,MSTR);
	#endif
	// enable SPI
	SETBIT(SPCR,SPE);  // Enable SPI
 306:	8d b1       	in	r24, 0x0d	; 13
 308:	80 64       	ori	r24, 0x40	; 64
 30a:	8d b9       	out	0x0d, r24	; 13
 30c:	08 95       	ret

0000030e <SPI_SendReceive>:
}
uint8_t SPI_SendReceive(uint8_t data)
{
	/* Start transmission */
	SPDR = data;
 30e:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
 310:	77 9b       	sbis	0x0e, 7	; 14
 312:	fe cf       	rjmp	.-4      	; 0x310 <SPI_SendReceive+0x2>
	return SPDR;
 314:	8f b1       	in	r24, 0x0f	; 15
 316:	08 95       	ret

00000318 <sprintf>:
 318:	ae e0       	ldi	r26, 0x0E	; 14
 31a:	b0 e0       	ldi	r27, 0x00	; 0
 31c:	e2 e9       	ldi	r30, 0x92	; 146
 31e:	f1 e0       	ldi	r31, 0x01	; 1
 320:	0c 94 4d 04 	jmp	0x89a	; 0x89a <__prologue_saves__+0x1c>
 324:	0d 89       	ldd	r16, Y+21	; 0x15
 326:	1e 89       	ldd	r17, Y+22	; 0x16
 328:	86 e0       	ldi	r24, 0x06	; 6
 32a:	8c 83       	std	Y+4, r24	; 0x04
 32c:	1a 83       	std	Y+2, r17	; 0x02
 32e:	09 83       	std	Y+1, r16	; 0x01
 330:	8f ef       	ldi	r24, 0xFF	; 255
 332:	9f e7       	ldi	r25, 0x7F	; 127
 334:	9e 83       	std	Y+6, r25	; 0x06
 336:	8d 83       	std	Y+5, r24	; 0x05
 338:	ae 01       	movw	r20, r28
 33a:	47 5e       	subi	r20, 0xE7	; 231
 33c:	5f 4f       	sbci	r21, 0xFF	; 255
 33e:	6f 89       	ldd	r22, Y+23	; 0x17
 340:	78 8d       	ldd	r23, Y+24	; 0x18
 342:	ce 01       	movw	r24, r28
 344:	01 96       	adiw	r24, 0x01	; 1
 346:	0e 94 ae 01 	call	0x35c	; 0x35c <vfprintf>
 34a:	ef 81       	ldd	r30, Y+7	; 0x07
 34c:	f8 85       	ldd	r31, Y+8	; 0x08
 34e:	e0 0f       	add	r30, r16
 350:	f1 1f       	adc	r31, r17
 352:	10 82       	st	Z, r1
 354:	2e 96       	adiw	r28, 0x0e	; 14
 356:	e4 e0       	ldi	r30, 0x04	; 4
 358:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__epilogue_restores__+0x1c>

0000035c <vfprintf>:
 35c:	ab e0       	ldi	r26, 0x0B	; 11
 35e:	b0 e0       	ldi	r27, 0x00	; 0
 360:	e4 eb       	ldi	r30, 0xB4	; 180
 362:	f1 e0       	ldi	r31, 0x01	; 1
 364:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__prologue_saves__>
 368:	6c 01       	movw	r12, r24
 36a:	7b 01       	movw	r14, r22
 36c:	8a 01       	movw	r16, r20
 36e:	fc 01       	movw	r30, r24
 370:	17 82       	std	Z+7, r1	; 0x07
 372:	16 82       	std	Z+6, r1	; 0x06
 374:	83 81       	ldd	r24, Z+3	; 0x03
 376:	81 ff       	sbrs	r24, 1
 378:	cc c1       	rjmp	.+920    	; 0x712 <__EEPROM_REGION_LENGTH__+0x312>
 37a:	ce 01       	movw	r24, r28
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	3c 01       	movw	r6, r24
 380:	f6 01       	movw	r30, r12
 382:	93 81       	ldd	r25, Z+3	; 0x03
 384:	f7 01       	movw	r30, r14
 386:	93 fd       	sbrc	r25, 3
 388:	85 91       	lpm	r24, Z+
 38a:	93 ff       	sbrs	r25, 3
 38c:	81 91       	ld	r24, Z+
 38e:	7f 01       	movw	r14, r30
 390:	88 23       	and	r24, r24
 392:	09 f4       	brne	.+2      	; 0x396 <vfprintf+0x3a>
 394:	ba c1       	rjmp	.+884    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 396:	85 32       	cpi	r24, 0x25	; 37
 398:	39 f4       	brne	.+14     	; 0x3a8 <vfprintf+0x4c>
 39a:	93 fd       	sbrc	r25, 3
 39c:	85 91       	lpm	r24, Z+
 39e:	93 ff       	sbrs	r25, 3
 3a0:	81 91       	ld	r24, Z+
 3a2:	7f 01       	movw	r14, r30
 3a4:	85 32       	cpi	r24, 0x25	; 37
 3a6:	29 f4       	brne	.+10     	; 0x3b2 <vfprintf+0x56>
 3a8:	b6 01       	movw	r22, r12
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 3b0:	e7 cf       	rjmp	.-50     	; 0x380 <vfprintf+0x24>
 3b2:	91 2c       	mov	r9, r1
 3b4:	21 2c       	mov	r2, r1
 3b6:	31 2c       	mov	r3, r1
 3b8:	ff e1       	ldi	r31, 0x1F	; 31
 3ba:	f3 15       	cp	r31, r3
 3bc:	d8 f0       	brcs	.+54     	; 0x3f4 <vfprintf+0x98>
 3be:	8b 32       	cpi	r24, 0x2B	; 43
 3c0:	79 f0       	breq	.+30     	; 0x3e0 <vfprintf+0x84>
 3c2:	38 f4       	brcc	.+14     	; 0x3d2 <vfprintf+0x76>
 3c4:	80 32       	cpi	r24, 0x20	; 32
 3c6:	79 f0       	breq	.+30     	; 0x3e6 <vfprintf+0x8a>
 3c8:	83 32       	cpi	r24, 0x23	; 35
 3ca:	a1 f4       	brne	.+40     	; 0x3f4 <vfprintf+0x98>
 3cc:	23 2d       	mov	r18, r3
 3ce:	20 61       	ori	r18, 0x10	; 16
 3d0:	1d c0       	rjmp	.+58     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3d2:	8d 32       	cpi	r24, 0x2D	; 45
 3d4:	61 f0       	breq	.+24     	; 0x3ee <vfprintf+0x92>
 3d6:	80 33       	cpi	r24, 0x30	; 48
 3d8:	69 f4       	brne	.+26     	; 0x3f4 <vfprintf+0x98>
 3da:	23 2d       	mov	r18, r3
 3dc:	21 60       	ori	r18, 0x01	; 1
 3de:	16 c0       	rjmp	.+44     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3e0:	83 2d       	mov	r24, r3
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	38 2e       	mov	r3, r24
 3e6:	e3 2d       	mov	r30, r3
 3e8:	e4 60       	ori	r30, 0x04	; 4
 3ea:	3e 2e       	mov	r3, r30
 3ec:	2a c0       	rjmp	.+84     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 3ee:	f3 2d       	mov	r31, r3
 3f0:	f8 60       	ori	r31, 0x08	; 8
 3f2:	1d c0       	rjmp	.+58     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3f4:	37 fc       	sbrc	r3, 7
 3f6:	2d c0       	rjmp	.+90     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 3f8:	20 ed       	ldi	r18, 0xD0	; 208
 3fa:	28 0f       	add	r18, r24
 3fc:	2a 30       	cpi	r18, 0x0A	; 10
 3fe:	40 f0       	brcs	.+16     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 400:	8e 32       	cpi	r24, 0x2E	; 46
 402:	b9 f4       	brne	.+46     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 404:	36 fc       	sbrc	r3, 6
 406:	81 c1       	rjmp	.+770    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 408:	23 2d       	mov	r18, r3
 40a:	20 64       	ori	r18, 0x40	; 64
 40c:	32 2e       	mov	r3, r18
 40e:	19 c0       	rjmp	.+50     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 410:	36 fe       	sbrs	r3, 6
 412:	06 c0       	rjmp	.+12     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 414:	8a e0       	ldi	r24, 0x0A	; 10
 416:	98 9e       	mul	r9, r24
 418:	20 0d       	add	r18, r0
 41a:	11 24       	eor	r1, r1
 41c:	92 2e       	mov	r9, r18
 41e:	11 c0       	rjmp	.+34     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 420:	ea e0       	ldi	r30, 0x0A	; 10
 422:	2e 9e       	mul	r2, r30
 424:	20 0d       	add	r18, r0
 426:	11 24       	eor	r1, r1
 428:	22 2e       	mov	r2, r18
 42a:	f3 2d       	mov	r31, r3
 42c:	f0 62       	ori	r31, 0x20	; 32
 42e:	3f 2e       	mov	r3, r31
 430:	08 c0       	rjmp	.+16     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 432:	8c 36       	cpi	r24, 0x6C	; 108
 434:	21 f4       	brne	.+8      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 436:	83 2d       	mov	r24, r3
 438:	80 68       	ori	r24, 0x80	; 128
 43a:	38 2e       	mov	r3, r24
 43c:	02 c0       	rjmp	.+4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 43e:	88 36       	cpi	r24, 0x68	; 104
 440:	41 f4       	brne	.+16     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 442:	f7 01       	movw	r30, r14
 444:	93 fd       	sbrc	r25, 3
 446:	85 91       	lpm	r24, Z+
 448:	93 ff       	sbrs	r25, 3
 44a:	81 91       	ld	r24, Z+
 44c:	7f 01       	movw	r14, r30
 44e:	81 11       	cpse	r24, r1
 450:	b3 cf       	rjmp	.-154    	; 0x3b8 <vfprintf+0x5c>
 452:	98 2f       	mov	r25, r24
 454:	9f 7d       	andi	r25, 0xDF	; 223
 456:	95 54       	subi	r25, 0x45	; 69
 458:	93 30       	cpi	r25, 0x03	; 3
 45a:	28 f4       	brcc	.+10     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 45c:	0c 5f       	subi	r16, 0xFC	; 252
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	9f e3       	ldi	r25, 0x3F	; 63
 462:	99 83       	std	Y+1, r25	; 0x01
 464:	0d c0       	rjmp	.+26     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 466:	83 36       	cpi	r24, 0x63	; 99
 468:	31 f0       	breq	.+12     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 46a:	83 37       	cpi	r24, 0x73	; 115
 46c:	71 f0       	breq	.+28     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 46e:	83 35       	cpi	r24, 0x53	; 83
 470:	09 f0       	breq	.+2      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 472:	59 c0       	rjmp	.+178    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
 474:	21 c0       	rjmp	.+66     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 476:	f8 01       	movw	r30, r16
 478:	80 81       	ld	r24, Z
 47a:	89 83       	std	Y+1, r24	; 0x01
 47c:	0e 5f       	subi	r16, 0xFE	; 254
 47e:	1f 4f       	sbci	r17, 0xFF	; 255
 480:	88 24       	eor	r8, r8
 482:	83 94       	inc	r8
 484:	91 2c       	mov	r9, r1
 486:	53 01       	movw	r10, r6
 488:	13 c0       	rjmp	.+38     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 48a:	28 01       	movw	r4, r16
 48c:	f2 e0       	ldi	r31, 0x02	; 2
 48e:	4f 0e       	add	r4, r31
 490:	51 1c       	adc	r5, r1
 492:	f8 01       	movw	r30, r16
 494:	a0 80       	ld	r10, Z
 496:	b1 80       	ldd	r11, Z+1	; 0x01
 498:	36 fe       	sbrs	r3, 6
 49a:	03 c0       	rjmp	.+6      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 49c:	69 2d       	mov	r22, r9
 49e:	70 e0       	ldi	r23, 0x00	; 0
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4a2:	6f ef       	ldi	r22, 0xFF	; 255
 4a4:	7f ef       	ldi	r23, 0xFF	; 255
 4a6:	c5 01       	movw	r24, r10
 4a8:	0e 94 9a 03 	call	0x734	; 0x734 <strnlen>
 4ac:	4c 01       	movw	r8, r24
 4ae:	82 01       	movw	r16, r4
 4b0:	f3 2d       	mov	r31, r3
 4b2:	ff 77       	andi	r31, 0x7F	; 127
 4b4:	3f 2e       	mov	r3, r31
 4b6:	16 c0       	rjmp	.+44     	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4b8:	28 01       	movw	r4, r16
 4ba:	22 e0       	ldi	r18, 0x02	; 2
 4bc:	42 0e       	add	r4, r18
 4be:	51 1c       	adc	r5, r1
 4c0:	f8 01       	movw	r30, r16
 4c2:	a0 80       	ld	r10, Z
 4c4:	b1 80       	ldd	r11, Z+1	; 0x01
 4c6:	36 fe       	sbrs	r3, 6
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4ca:	69 2d       	mov	r22, r9
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4d0:	6f ef       	ldi	r22, 0xFF	; 255
 4d2:	7f ef       	ldi	r23, 0xFF	; 255
 4d4:	c5 01       	movw	r24, r10
 4d6:	0e 94 8f 03 	call	0x71e	; 0x71e <strnlen_P>
 4da:	4c 01       	movw	r8, r24
 4dc:	f3 2d       	mov	r31, r3
 4de:	f0 68       	ori	r31, 0x80	; 128
 4e0:	3f 2e       	mov	r3, r31
 4e2:	82 01       	movw	r16, r4
 4e4:	33 fc       	sbrc	r3, 3
 4e6:	1b c0       	rjmp	.+54     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4e8:	82 2d       	mov	r24, r2
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	88 16       	cp	r8, r24
 4ee:	99 06       	cpc	r9, r25
 4f0:	b0 f4       	brcc	.+44     	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 4f2:	b6 01       	movw	r22, r12
 4f4:	80 e2       	ldi	r24, 0x20	; 32
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 4fc:	2a 94       	dec	r2
 4fe:	f4 cf       	rjmp	.-24     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 500:	f5 01       	movw	r30, r10
 502:	37 fc       	sbrc	r3, 7
 504:	85 91       	lpm	r24, Z+
 506:	37 fe       	sbrs	r3, 7
 508:	81 91       	ld	r24, Z+
 50a:	5f 01       	movw	r10, r30
 50c:	b6 01       	movw	r22, r12
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 514:	21 10       	cpse	r2, r1
 516:	2a 94       	dec	r2
 518:	21 e0       	ldi	r18, 0x01	; 1
 51a:	82 1a       	sub	r8, r18
 51c:	91 08       	sbc	r9, r1
 51e:	81 14       	cp	r8, r1
 520:	91 04       	cpc	r9, r1
 522:	71 f7       	brne	.-36     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 524:	e8 c0       	rjmp	.+464    	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 526:	84 36       	cpi	r24, 0x64	; 100
 528:	11 f0       	breq	.+4      	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 52a:	89 36       	cpi	r24, 0x69	; 105
 52c:	41 f5       	brne	.+80     	; 0x57e <__EEPROM_REGION_LENGTH__+0x17e>
 52e:	f8 01       	movw	r30, r16
 530:	37 fe       	sbrs	r3, 7
 532:	07 c0       	rjmp	.+14     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
 534:	60 81       	ld	r22, Z
 536:	71 81       	ldd	r23, Z+1	; 0x01
 538:	82 81       	ldd	r24, Z+2	; 0x02
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	0c 5f       	subi	r16, 0xFC	; 252
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	08 c0       	rjmp	.+16     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 542:	60 81       	ld	r22, Z
 544:	71 81       	ldd	r23, Z+1	; 0x01
 546:	07 2e       	mov	r0, r23
 548:	00 0c       	add	r0, r0
 54a:	88 0b       	sbc	r24, r24
 54c:	99 0b       	sbc	r25, r25
 54e:	0e 5f       	subi	r16, 0xFE	; 254
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	f3 2d       	mov	r31, r3
 554:	ff 76       	andi	r31, 0x6F	; 111
 556:	3f 2e       	mov	r3, r31
 558:	97 ff       	sbrs	r25, 7
 55a:	09 c0       	rjmp	.+18     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 55c:	90 95       	com	r25
 55e:	80 95       	com	r24
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255
 566:	8f 4f       	sbci	r24, 0xFF	; 255
 568:	9f 4f       	sbci	r25, 0xFF	; 255
 56a:	f0 68       	ori	r31, 0x80	; 128
 56c:	3f 2e       	mov	r3, r31
 56e:	2a e0       	ldi	r18, 0x0A	; 10
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	a3 01       	movw	r20, r6
 574:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__ultoa_invert>
 578:	88 2e       	mov	r8, r24
 57a:	86 18       	sub	r8, r6
 57c:	45 c0       	rjmp	.+138    	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 57e:	85 37       	cpi	r24, 0x75	; 117
 580:	31 f4       	brne	.+12     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 582:	23 2d       	mov	r18, r3
 584:	2f 7e       	andi	r18, 0xEF	; 239
 586:	b2 2e       	mov	r11, r18
 588:	2a e0       	ldi	r18, 0x0A	; 10
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	25 c0       	rjmp	.+74     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 58e:	93 2d       	mov	r25, r3
 590:	99 7f       	andi	r25, 0xF9	; 249
 592:	b9 2e       	mov	r11, r25
 594:	8f 36       	cpi	r24, 0x6F	; 111
 596:	c1 f0       	breq	.+48     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 598:	18 f4       	brcc	.+6      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 59a:	88 35       	cpi	r24, 0x58	; 88
 59c:	79 f0       	breq	.+30     	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 59e:	b5 c0       	rjmp	.+362    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 5a0:	80 37       	cpi	r24, 0x70	; 112
 5a2:	19 f0       	breq	.+6      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a4:	88 37       	cpi	r24, 0x78	; 120
 5a6:	21 f0       	breq	.+8      	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 5a8:	b0 c0       	rjmp	.+352    	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 5aa:	e9 2f       	mov	r30, r25
 5ac:	e0 61       	ori	r30, 0x10	; 16
 5ae:	be 2e       	mov	r11, r30
 5b0:	b4 fe       	sbrs	r11, 4
 5b2:	0d c0       	rjmp	.+26     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5b4:	fb 2d       	mov	r31, r11
 5b6:	f4 60       	ori	r31, 0x04	; 4
 5b8:	bf 2e       	mov	r11, r31
 5ba:	09 c0       	rjmp	.+18     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5bc:	34 fe       	sbrs	r3, 4
 5be:	0a c0       	rjmp	.+20     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c0:	29 2f       	mov	r18, r25
 5c2:	26 60       	ori	r18, 0x06	; 6
 5c4:	b2 2e       	mov	r11, r18
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
 5c8:	28 e0       	ldi	r18, 0x08	; 8
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5ce:	20 e1       	ldi	r18, 0x10	; 16
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5d4:	20 e1       	ldi	r18, 0x10	; 16
 5d6:	32 e0       	ldi	r19, 0x02	; 2
 5d8:	f8 01       	movw	r30, r16
 5da:	b7 fe       	sbrs	r11, 7
 5dc:	07 c0       	rjmp	.+14     	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5de:	60 81       	ld	r22, Z
 5e0:	71 81       	ldd	r23, Z+1	; 0x01
 5e2:	82 81       	ldd	r24, Z+2	; 0x02
 5e4:	93 81       	ldd	r25, Z+3	; 0x03
 5e6:	0c 5f       	subi	r16, 0xFC	; 252
 5e8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ea:	06 c0       	rjmp	.+12     	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 5ec:	60 81       	ld	r22, Z
 5ee:	71 81       	ldd	r23, Z+1	; 0x01
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 5f       	subi	r16, 0xFE	; 254
 5f6:	1f 4f       	sbci	r17, 0xFF	; 255
 5f8:	a3 01       	movw	r20, r6
 5fa:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__ultoa_invert>
 5fe:	88 2e       	mov	r8, r24
 600:	86 18       	sub	r8, r6
 602:	fb 2d       	mov	r31, r11
 604:	ff 77       	andi	r31, 0x7F	; 127
 606:	3f 2e       	mov	r3, r31
 608:	36 fe       	sbrs	r3, 6
 60a:	0d c0       	rjmp	.+26     	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
 60c:	23 2d       	mov	r18, r3
 60e:	2e 7f       	andi	r18, 0xFE	; 254
 610:	a2 2e       	mov	r10, r18
 612:	89 14       	cp	r8, r9
 614:	58 f4       	brcc	.+22     	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 616:	34 fe       	sbrs	r3, 4
 618:	0b c0       	rjmp	.+22     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 61a:	32 fc       	sbrc	r3, 2
 61c:	09 c0       	rjmp	.+18     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 61e:	83 2d       	mov	r24, r3
 620:	8e 7e       	andi	r24, 0xEE	; 238
 622:	a8 2e       	mov	r10, r24
 624:	05 c0       	rjmp	.+10     	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 626:	b8 2c       	mov	r11, r8
 628:	a3 2c       	mov	r10, r3
 62a:	03 c0       	rjmp	.+6      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 62c:	b8 2c       	mov	r11, r8
 62e:	01 c0       	rjmp	.+2      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
 630:	b9 2c       	mov	r11, r9
 632:	a4 fe       	sbrs	r10, 4
 634:	0f c0       	rjmp	.+30     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
 636:	fe 01       	movw	r30, r28
 638:	e8 0d       	add	r30, r8
 63a:	f1 1d       	adc	r31, r1
 63c:	80 81       	ld	r24, Z
 63e:	80 33       	cpi	r24, 0x30	; 48
 640:	21 f4       	brne	.+8      	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 642:	9a 2d       	mov	r25, r10
 644:	99 7e       	andi	r25, 0xE9	; 233
 646:	a9 2e       	mov	r10, r25
 648:	09 c0       	rjmp	.+18     	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 64a:	a2 fe       	sbrs	r10, 2
 64c:	06 c0       	rjmp	.+12     	; 0x65a <__EEPROM_REGION_LENGTH__+0x25a>
 64e:	b3 94       	inc	r11
 650:	b3 94       	inc	r11
 652:	04 c0       	rjmp	.+8      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 654:	8a 2d       	mov	r24, r10
 656:	86 78       	andi	r24, 0x86	; 134
 658:	09 f0       	breq	.+2      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 65a:	b3 94       	inc	r11
 65c:	a3 fc       	sbrc	r10, 3
 65e:	11 c0       	rjmp	.+34     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 660:	a0 fe       	sbrs	r10, 0
 662:	06 c0       	rjmp	.+12     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 664:	b2 14       	cp	r11, r2
 666:	88 f4       	brcc	.+34     	; 0x68a <__EEPROM_REGION_LENGTH__+0x28a>
 668:	28 0c       	add	r2, r8
 66a:	92 2c       	mov	r9, r2
 66c:	9b 18       	sub	r9, r11
 66e:	0e c0       	rjmp	.+28     	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 670:	b2 14       	cp	r11, r2
 672:	60 f4       	brcc	.+24     	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 674:	b6 01       	movw	r22, r12
 676:	80 e2       	ldi	r24, 0x20	; 32
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 67e:	b3 94       	inc	r11
 680:	f7 cf       	rjmp	.-18     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 682:	b2 14       	cp	r11, r2
 684:	18 f4       	brcc	.+6      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 686:	2b 18       	sub	r2, r11
 688:	02 c0       	rjmp	.+4      	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
 68a:	98 2c       	mov	r9, r8
 68c:	21 2c       	mov	r2, r1
 68e:	a4 fe       	sbrs	r10, 4
 690:	10 c0       	rjmp	.+32     	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
 692:	b6 01       	movw	r22, r12
 694:	80 e3       	ldi	r24, 0x30	; 48
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 69c:	a2 fe       	sbrs	r10, 2
 69e:	17 c0       	rjmp	.+46     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6a0:	a1 fc       	sbrc	r10, 1
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
 6a4:	88 e7       	ldi	r24, 0x78	; 120
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6aa:	88 e5       	ldi	r24, 0x58	; 88
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	b6 01       	movw	r22, r12
 6b0:	0c c0       	rjmp	.+24     	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6b2:	8a 2d       	mov	r24, r10
 6b4:	86 78       	andi	r24, 0x86	; 134
 6b6:	59 f0       	breq	.+22     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6b8:	a1 fe       	sbrs	r10, 1
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <__EEPROM_REGION_LENGTH__+0x2c0>
 6bc:	8b e2       	ldi	r24, 0x2B	; 43
 6be:	01 c0       	rjmp	.+2      	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	a7 fc       	sbrc	r10, 7
 6c4:	8d e2       	ldi	r24, 0x2D	; 45
 6c6:	b6 01       	movw	r22, r12
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6ce:	89 14       	cp	r8, r9
 6d0:	38 f4       	brcc	.+14     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6d2:	b6 01       	movw	r22, r12
 6d4:	80 e3       	ldi	r24, 0x30	; 48
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6dc:	9a 94       	dec	r9
 6de:	f7 cf       	rjmp	.-18     	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6e0:	8a 94       	dec	r8
 6e2:	f3 01       	movw	r30, r6
 6e4:	e8 0d       	add	r30, r8
 6e6:	f1 1d       	adc	r31, r1
 6e8:	80 81       	ld	r24, Z
 6ea:	b6 01       	movw	r22, r12
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 6f2:	81 10       	cpse	r8, r1
 6f4:	f5 cf       	rjmp	.-22     	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6f6:	22 20       	and	r2, r2
 6f8:	09 f4       	brne	.+2      	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 6fa:	42 ce       	rjmp	.-892    	; 0x380 <vfprintf+0x24>
 6fc:	b6 01       	movw	r22, r12
 6fe:	80 e2       	ldi	r24, 0x20	; 32
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 a5 03 	call	0x74a	; 0x74a <fputc>
 706:	2a 94       	dec	r2
 708:	f6 cf       	rjmp	.-20     	; 0x6f6 <__EEPROM_REGION_LENGTH__+0x2f6>
 70a:	f6 01       	movw	r30, r12
 70c:	86 81       	ldd	r24, Z+6	; 0x06
 70e:	97 81       	ldd	r25, Z+7	; 0x07
 710:	02 c0       	rjmp	.+4      	; 0x716 <__EEPROM_REGION_LENGTH__+0x316>
 712:	8f ef       	ldi	r24, 0xFF	; 255
 714:	9f ef       	ldi	r25, 0xFF	; 255
 716:	2b 96       	adiw	r28, 0x0b	; 11
 718:	e2 e1       	ldi	r30, 0x12	; 18
 71a:	0c 94 5b 04 	jmp	0x8b6	; 0x8b6 <__epilogue_restores__>

0000071e <strnlen_P>:
 71e:	fc 01       	movw	r30, r24
 720:	05 90       	lpm	r0, Z+
 722:	61 50       	subi	r22, 0x01	; 1
 724:	70 40       	sbci	r23, 0x00	; 0
 726:	01 10       	cpse	r0, r1
 728:	d8 f7       	brcc	.-10     	; 0x720 <strnlen_P+0x2>
 72a:	80 95       	com	r24
 72c:	90 95       	com	r25
 72e:	8e 0f       	add	r24, r30
 730:	9f 1f       	adc	r25, r31
 732:	08 95       	ret

00000734 <strnlen>:
 734:	fc 01       	movw	r30, r24
 736:	61 50       	subi	r22, 0x01	; 1
 738:	70 40       	sbci	r23, 0x00	; 0
 73a:	01 90       	ld	r0, Z+
 73c:	01 10       	cpse	r0, r1
 73e:	d8 f7       	brcc	.-10     	; 0x736 <strnlen+0x2>
 740:	80 95       	com	r24
 742:	90 95       	com	r25
 744:	8e 0f       	add	r24, r30
 746:	9f 1f       	adc	r25, r31
 748:	08 95       	ret

0000074a <fputc>:
 74a:	0f 93       	push	r16
 74c:	1f 93       	push	r17
 74e:	cf 93       	push	r28
 750:	df 93       	push	r29
 752:	fb 01       	movw	r30, r22
 754:	23 81       	ldd	r18, Z+3	; 0x03
 756:	21 fd       	sbrc	r18, 1
 758:	03 c0       	rjmp	.+6      	; 0x760 <fputc+0x16>
 75a:	8f ef       	ldi	r24, 0xFF	; 255
 75c:	9f ef       	ldi	r25, 0xFF	; 255
 75e:	2c c0       	rjmp	.+88     	; 0x7b8 <fputc+0x6e>
 760:	22 ff       	sbrs	r18, 2
 762:	16 c0       	rjmp	.+44     	; 0x790 <fputc+0x46>
 764:	46 81       	ldd	r20, Z+6	; 0x06
 766:	57 81       	ldd	r21, Z+7	; 0x07
 768:	24 81       	ldd	r18, Z+4	; 0x04
 76a:	35 81       	ldd	r19, Z+5	; 0x05
 76c:	42 17       	cp	r20, r18
 76e:	53 07       	cpc	r21, r19
 770:	44 f4       	brge	.+16     	; 0x782 <fputc+0x38>
 772:	a0 81       	ld	r26, Z
 774:	b1 81       	ldd	r27, Z+1	; 0x01
 776:	9d 01       	movw	r18, r26
 778:	2f 5f       	subi	r18, 0xFF	; 255
 77a:	3f 4f       	sbci	r19, 0xFF	; 255
 77c:	31 83       	std	Z+1, r19	; 0x01
 77e:	20 83       	st	Z, r18
 780:	8c 93       	st	X, r24
 782:	26 81       	ldd	r18, Z+6	; 0x06
 784:	37 81       	ldd	r19, Z+7	; 0x07
 786:	2f 5f       	subi	r18, 0xFF	; 255
 788:	3f 4f       	sbci	r19, 0xFF	; 255
 78a:	37 83       	std	Z+7, r19	; 0x07
 78c:	26 83       	std	Z+6, r18	; 0x06
 78e:	14 c0       	rjmp	.+40     	; 0x7b8 <fputc+0x6e>
 790:	8b 01       	movw	r16, r22
 792:	ec 01       	movw	r28, r24
 794:	fb 01       	movw	r30, r22
 796:	00 84       	ldd	r0, Z+8	; 0x08
 798:	f1 85       	ldd	r31, Z+9	; 0x09
 79a:	e0 2d       	mov	r30, r0
 79c:	09 95       	icall
 79e:	89 2b       	or	r24, r25
 7a0:	e1 f6       	brne	.-72     	; 0x75a <fputc+0x10>
 7a2:	d8 01       	movw	r26, r16
 7a4:	16 96       	adiw	r26, 0x06	; 6
 7a6:	8d 91       	ld	r24, X+
 7a8:	9c 91       	ld	r25, X
 7aa:	17 97       	sbiw	r26, 0x07	; 7
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	17 96       	adiw	r26, 0x07	; 7
 7b0:	9c 93       	st	X, r25
 7b2:	8e 93       	st	-X, r24
 7b4:	16 97       	sbiw	r26, 0x06	; 6
 7b6:	ce 01       	movw	r24, r28
 7b8:	df 91       	pop	r29
 7ba:	cf 91       	pop	r28
 7bc:	1f 91       	pop	r17
 7be:	0f 91       	pop	r16
 7c0:	08 95       	ret

000007c2 <__ultoa_invert>:
 7c2:	fa 01       	movw	r30, r20
 7c4:	aa 27       	eor	r26, r26
 7c6:	28 30       	cpi	r18, 0x08	; 8
 7c8:	51 f1       	breq	.+84     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 7ca:	20 31       	cpi	r18, 0x10	; 16
 7cc:	81 f1       	breq	.+96     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 7ce:	e8 94       	clt
 7d0:	6f 93       	push	r22
 7d2:	6e 7f       	andi	r22, 0xFE	; 254
 7d4:	6e 5f       	subi	r22, 0xFE	; 254
 7d6:	7f 4f       	sbci	r23, 0xFF	; 255
 7d8:	8f 4f       	sbci	r24, 0xFF	; 255
 7da:	9f 4f       	sbci	r25, 0xFF	; 255
 7dc:	af 4f       	sbci	r26, 0xFF	; 255
 7de:	b1 e0       	ldi	r27, 0x01	; 1
 7e0:	3e d0       	rcall	.+124    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 7e2:	b4 e0       	ldi	r27, 0x04	; 4
 7e4:	3c d0       	rcall	.+120    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 7e6:	67 0f       	add	r22, r23
 7e8:	78 1f       	adc	r23, r24
 7ea:	89 1f       	adc	r24, r25
 7ec:	9a 1f       	adc	r25, r26
 7ee:	a1 1d       	adc	r26, r1
 7f0:	68 0f       	add	r22, r24
 7f2:	79 1f       	adc	r23, r25
 7f4:	8a 1f       	adc	r24, r26
 7f6:	91 1d       	adc	r25, r1
 7f8:	a1 1d       	adc	r26, r1
 7fa:	6a 0f       	add	r22, r26
 7fc:	71 1d       	adc	r23, r1
 7fe:	81 1d       	adc	r24, r1
 800:	91 1d       	adc	r25, r1
 802:	a1 1d       	adc	r26, r1
 804:	20 d0       	rcall	.+64     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 806:	09 f4       	brne	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 808:	68 94       	set
 80a:	3f 91       	pop	r19
 80c:	2a e0       	ldi	r18, 0x0A	; 10
 80e:	26 9f       	mul	r18, r22
 810:	11 24       	eor	r1, r1
 812:	30 19       	sub	r19, r0
 814:	30 5d       	subi	r19, 0xD0	; 208
 816:	31 93       	st	Z+, r19
 818:	de f6       	brtc	.-74     	; 0x7d0 <__ultoa_invert+0xe>
 81a:	cf 01       	movw	r24, r30
 81c:	08 95       	ret
 81e:	46 2f       	mov	r20, r22
 820:	47 70       	andi	r20, 0x07	; 7
 822:	40 5d       	subi	r20, 0xD0	; 208
 824:	41 93       	st	Z+, r20
 826:	b3 e0       	ldi	r27, 0x03	; 3
 828:	0f d0       	rcall	.+30     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 82a:	c9 f7       	brne	.-14     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 82c:	f6 cf       	rjmp	.-20     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 82e:	46 2f       	mov	r20, r22
 830:	4f 70       	andi	r20, 0x0F	; 15
 832:	40 5d       	subi	r20, 0xD0	; 208
 834:	4a 33       	cpi	r20, 0x3A	; 58
 836:	18 f0       	brcs	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 838:	49 5d       	subi	r20, 0xD9	; 217
 83a:	31 fd       	sbrc	r19, 1
 83c:	40 52       	subi	r20, 0x20	; 32
 83e:	41 93       	st	Z+, r20
 840:	02 d0       	rcall	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	a9 f7       	brne	.-22     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 844:	ea cf       	rjmp	.-44     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 846:	b4 e0       	ldi	r27, 0x04	; 4
 848:	a6 95       	lsr	r26
 84a:	97 95       	ror	r25
 84c:	87 95       	ror	r24
 84e:	77 95       	ror	r23
 850:	67 95       	ror	r22
 852:	ba 95       	dec	r27
 854:	c9 f7       	brne	.-14     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 856:	00 97       	sbiw	r24, 0x00	; 0
 858:	61 05       	cpc	r22, r1
 85a:	71 05       	cpc	r23, r1
 85c:	08 95       	ret
 85e:	9b 01       	movw	r18, r22
 860:	ac 01       	movw	r20, r24
 862:	0a 2e       	mov	r0, r26
 864:	06 94       	lsr	r0
 866:	57 95       	ror	r21
 868:	47 95       	ror	r20
 86a:	37 95       	ror	r19
 86c:	27 95       	ror	r18
 86e:	ba 95       	dec	r27
 870:	c9 f7       	brne	.-14     	; 0x864 <__stack+0x5>
 872:	62 0f       	add	r22, r18
 874:	73 1f       	adc	r23, r19
 876:	84 1f       	adc	r24, r20
 878:	95 1f       	adc	r25, r21
 87a:	a0 1d       	adc	r26, r0
 87c:	08 95       	ret

0000087e <__prologue_saves__>:
 87e:	2f 92       	push	r2
 880:	3f 92       	push	r3
 882:	4f 92       	push	r4
 884:	5f 92       	push	r5
 886:	6f 92       	push	r6
 888:	7f 92       	push	r7
 88a:	8f 92       	push	r8
 88c:	9f 92       	push	r9
 88e:	af 92       	push	r10
 890:	bf 92       	push	r11
 892:	cf 92       	push	r12
 894:	df 92       	push	r13
 896:	ef 92       	push	r14
 898:	ff 92       	push	r15
 89a:	0f 93       	push	r16
 89c:	1f 93       	push	r17
 89e:	cf 93       	push	r28
 8a0:	df 93       	push	r29
 8a2:	cd b7       	in	r28, 0x3d	; 61
 8a4:	de b7       	in	r29, 0x3e	; 62
 8a6:	ca 1b       	sub	r28, r26
 8a8:	db 0b       	sbc	r29, r27
 8aa:	0f b6       	in	r0, 0x3f	; 63
 8ac:	f8 94       	cli
 8ae:	de bf       	out	0x3e, r29	; 62
 8b0:	0f be       	out	0x3f, r0	; 63
 8b2:	cd bf       	out	0x3d, r28	; 61
 8b4:	09 94       	ijmp

000008b6 <__epilogue_restores__>:
 8b6:	2a 88       	ldd	r2, Y+18	; 0x12
 8b8:	39 88       	ldd	r3, Y+17	; 0x11
 8ba:	48 88       	ldd	r4, Y+16	; 0x10
 8bc:	5f 84       	ldd	r5, Y+15	; 0x0f
 8be:	6e 84       	ldd	r6, Y+14	; 0x0e
 8c0:	7d 84       	ldd	r7, Y+13	; 0x0d
 8c2:	8c 84       	ldd	r8, Y+12	; 0x0c
 8c4:	9b 84       	ldd	r9, Y+11	; 0x0b
 8c6:	aa 84       	ldd	r10, Y+10	; 0x0a
 8c8:	b9 84       	ldd	r11, Y+9	; 0x09
 8ca:	c8 84       	ldd	r12, Y+8	; 0x08
 8cc:	df 80       	ldd	r13, Y+7	; 0x07
 8ce:	ee 80       	ldd	r14, Y+6	; 0x06
 8d0:	fd 80       	ldd	r15, Y+5	; 0x05
 8d2:	0c 81       	ldd	r16, Y+4	; 0x04
 8d4:	1b 81       	ldd	r17, Y+3	; 0x03
 8d6:	aa 81       	ldd	r26, Y+2	; 0x02
 8d8:	b9 81       	ldd	r27, Y+1	; 0x01
 8da:	ce 0f       	add	r28, r30
 8dc:	d1 1d       	adc	r29, r1
 8de:	0f b6       	in	r0, 0x3f	; 63
 8e0:	f8 94       	cli
 8e2:	de bf       	out	0x3e, r29	; 62
 8e4:	0f be       	out	0x3f, r0	; 63
 8e6:	cd bf       	out	0x3d, r28	; 61
 8e8:	ed 01       	movw	r28, r26
 8ea:	08 95       	ret

000008ec <_exit>:
 8ec:	f8 94       	cli

000008ee <__stop_program>:
 8ee:	ff cf       	rjmp	.-2      	; 0x8ee <__stop_program>
